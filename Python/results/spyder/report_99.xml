<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="21" hostname="MP0256.fritz.box" name="pytest" skipped="229" tests="1164" time="519.532" timestamp="2020-11-19T05:30:27.710553"><testcase classname="spyder.app.tests.test_cli_options" file="spyder/app/tests/test_cli_options.py" line="13" name="test_get_options" time="0.169"><system-err>usage: spyder [options] files
runtests.py: error: unrecognized arguments: --version
usage: spyder [options] files
runtests.py: error: argument -w/--workdir: expected one argument
usage: spyder [options] files
runtests.py: error: argument -p/--project: expected one argument
</system-err></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="278" name="test_single_instance_and_edit_magic" time="0.001"><skipped message="It&apos;s not meant to be run outside of CIs" type="pytest.skip">spyder/app/tests/test_mainwindow.py:278: It&apos;s not meant to be run outside of CIs</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="349" name="test_default_plugin_actions" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:349: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.kite.utils.tests.test_install" file="spyder/plugins/completion/kite/utils/tests/test_install.py" line="28" name="test_kite_install" time="0.000"><skipped message="Fail on CIs and it&apos;s too heavy to run locally" type="pytest.skip">spyder/plugins/completion/kite/utils/tests/test_install.py:28: Fail on CIs and it&apos;s too heavy to run locally</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_completions_hide" file="spyder/plugins/editor/widgets/tests/test_completions_hide.py" line="15" name="test_automatic_completions_hide_complete" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_completions_hide.py:15: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_completions_hide" file="spyder/plugins/editor/widgets/tests/test_completions_hide.py" line="87" name="test_automatic_completions_widget_visible" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_completions_hide.py:87: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editorsplitter" file="spyder/plugins/editor/widgets/tests/test_editorsplitter.py" line="401" name="test_lsp_splitter_close" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_editorsplitter.py:401: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_formatting" file="spyder/plugins/editor/widgets/tests/test_formatting.py" line="39" name="test_document_formatting[autopep8]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_formatting.py:39: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_formatting" file="spyder/plugins/editor/widgets/tests/test_formatting.py" line="39" name="test_document_formatting[yapf]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_formatting.py:39: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_formatting" file="spyder/plugins/editor/widgets/tests/test_formatting.py" line="39" name="test_document_formatting[black]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_formatting.py:39: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_formatting" file="spyder/plugins/editor/widgets/tests/test_formatting.py" line="69" name="test_document_range_formatting[autopep8]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_formatting.py:69: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_formatting" file="spyder/plugins/editor/widgets/tests/test_formatting.py" line="69" name="test_document_range_formatting[yapf]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_formatting.py:69: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_formatting" file="spyder/plugins/editor/widgets/tests/test_formatting.py" line="69" name="test_document_range_formatting[black]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_formatting.py:69: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="59" name="test_space_completion" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:59: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="92" name="test_hide_widget_completion" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:92: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="139" name="test_automatic_completions" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:139: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="231" name="test_automatic_completions_tab_bug" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:231: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="266" name="test_automatic_completions_space_bug" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:266: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="356" name="test_completions" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:356: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="590" name="test_code_snippets" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:590: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="886" name="test_completion_order" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:886: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="923" name="test_fallback_completions" time="0.000"><skipped message="Only works on Linux and Python 3" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:923: Only works on Linux and Python 3</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="997" name="test_text_snippet_completions" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:997: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="1022" name="test_kite_textEdit_completions" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:1022: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="1071" name="test_completions_extra_paths" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:1071: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="1122" name="test_completions_environment" time="0.000"><skipped message="Run tests only on CI." type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:1122: Run tests only on CI.</skipped></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="229" name="test_get_common_file_associations" time="0.101"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="247" name="test_get_file_associations" time="0.011"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="260" name="test_create_file_manage_actions" time="0.147"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="291" name="test_clicked" time="1.077"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="324" name="test_check_launch_error_codes" time="1.008"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="356" name="test_open_association" time="0.496"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_fileassociations" file="spyder/plugins/explorer/widgets/tests/test_fileassociations.py" line="26" name="test_input_text_dialog" time="0.010"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_fileassociations" file="spyder/plugins/explorer/widgets/tests/test_fileassociations.py" line="58" name="test_apps_dialog" time="0.757"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_fileassociations" file="spyder/plugins/explorer/widgets/tests/test_fileassociations.py" line="147" name="test_file_assoc_widget" time="2.310"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_plugin" file="spyder/plugins/findinfiles/tests/test_plugin.py" line="40" name="test_closing_plugin" time="0.031"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;exclude_case_sensitive&quot; not found in section &quot;find_in_files&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;exclude_index&quot; not found in section &quot;find_in_files&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;path_history&quot; not found in section &quot;find_in_files&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;hist_limit&quot; not found in section &quot;find_in_files&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;search_in_index&quot; not found in section &quot;find_in_files&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;text_color&quot; not found in section &quot;find_in_files&quot; of configuration!
</system-out></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1593" name="test_conda_env_activation" time="1.372"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="101" name="test_handle_new_figures[image/png-.png]" time="0.359"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="101" name="test_handle_new_figures[image/svg+xml-.svg]" time="0.198"></testcase><testcase classname="spyder.utils.tests.test_encoding" file="spyder/utils/tests/test_encoding.py" line="25" name="test_symlinks" time="0.047"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="98" name="test_run_python_script_in_terminal_blank_wdir" time="0.000"><skipped message="Only on CI and not on windows!" type="pytest.skip">spyder/utils/tests/test_programs.py:98: Only on CI and not on windows!</skipped></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="122" name="test_run_python_script_in_terminal_with_wdir_empty" time="0.000"><skipped message="Only on CI and not on windows!" type="pytest.skip">spyder/utils/tests/test_programs.py:122: Only on CI and not on windows!</skipped></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="147" name="test_is_valid_interpreter" time="0.000"><skipped message="Only on CI!" type="pytest.skip">spyder/utils/tests/test_programs.py:147: Only on CI!</skipped></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="153" name="test_is_invalid_interpreter" time="0.000"><skipped message="Only on CI!" type="pytest.skip">spyder/utils/tests/test_programs.py:153: Only on CI!</skipped></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="159" name="test_is_valid_interpreter_name" time="0.000"><skipped message="Only on CI!" type="pytest.skip">spyder/utils/tests/test_programs.py:159: Only on CI!</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_classfunc_selector" file="spyder/plugins/editor/widgets/tests/test_classfunc_selector.py" line="43" name="test_class_func_selector" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_classfunc_selector.py:43: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="288" name="test_editor_outlineexplorer" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_editor_and_outline.py:288: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="424" name="test_empty_file" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_editor_and_outline.py:424: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_folding" file="spyder/plugins/editor/widgets/tests/test_folding.py" line="58" name="test_folding" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_folding.py:58: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_folding" file="spyder/plugins/editor/widgets/tests/test_folding.py" line="88" name="test_unfold_when_searching" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_folding.py:88: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_folding" file="spyder/plugins/editor/widgets/tests/test_folding.py" line="123" name="test_unfold_goto" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_folding.py:123: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_hints_and_calltips" file="spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py" line="33" name="test_hide_calltip" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py:33: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_hints_and_calltips" file="spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py" line="65" name="test_get_calltips[params0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py:65: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_hints_and_calltips" file="spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py" line="65" name="test_get_calltips[params1]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py:65: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_hints_and_calltips" file="spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py" line="65" name="test_get_calltips[params2]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py:65: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_hints_and_calltips" file="spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py" line="65" name="test_get_calltips[params3]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py:65: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_hints_and_calltips" file="spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py" line="132" name="test_get_hints[params0]" time="0.001"><skipped message="Fails on Mac" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py:132: Fails on Mac</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_hints_and_calltips" file="spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py" line="132" name="test_get_hints[params1]" time="0.000"><skipped message="Fails on Mac" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py:132: Fails on Mac</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_hints_and_calltips" file="spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py" line="132" name="test_get_hints[params2]" time="0.000"><skipped message="Fails on Mac" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py:132: Fails on Mac</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_hints_and_calltips" file="spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py" line="174" name="test_get_hints_not_triggered" time="0.000"><skipped message="Fails on Mac" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_hints_and_calltips.py:174: Fails on Mac</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_warnings" file="spyder/plugins/editor/widgets/tests/test_warnings.py" line="30" name="test_ignore_warnings" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_warnings.py:30: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_warnings" file="spyder/plugins/editor/widgets/tests/test_warnings.py" line="71" name="test_adding_warnings" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_warnings.py:71: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_warnings" file="spyder/plugins/editor/widgets/tests/test_warnings.py" line="106" name="test_move_warnings" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_warnings.py:106: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_warnings" file="spyder/plugins/editor/widgets/tests/test_warnings.py" line="142" name="test_get_warnings" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_warnings.py:142: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_warnings" file="spyder/plugins/editor/widgets/tests/test_warnings.py" line="175" name="test_update_warnings_after_delete_line" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_warnings.py:175: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_warnings" file="spyder/plugins/editor/widgets/tests/test_warnings.py" line="214" name="test_update_warnings_after_closequotes" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_warnings.py:214: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_warnings" file="spyder/plugins/editor/widgets/tests/test_warnings.py" line="251" name="test_update_warnings_after_closebrackets" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_warnings.py:251: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="37" name="test_didOpen[lsp_client_and_completion0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:37: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="62" name="test_get_signature[lsp_client_and_completion0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:62: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="100" name="test_get_completions[lsp_client_and_completion0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:100: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="139" name="test_go_to_definition[lsp_client_and_completion0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:139: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="178" name="test_local_signature[lsp_client_and_completion0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:178: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="222" name="test_send_workspace_folders_change[lsp_client_and_completion0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:222: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="37" name="test_didOpen[lsp_client_and_completion1]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:37: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="62" name="test_get_signature[lsp_client_and_completion1]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:62: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="100" name="test_get_completions[lsp_client_and_completion1]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:100: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="139" name="test_go_to_definition[lsp_client_and_completion1]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:139: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="178" name="test_local_signature[lsp_client_and_completion1]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:178: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_client" file="spyder/plugins/completion/languageserver/tests/test_client.py" line="222" name="test_send_workspace_folders_change[lsp_client_and_completion1]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/languageserver/tests/test_client.py:222: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="321" name="test_lock_action" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:321: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="382" name="test_opengl_implementation[main_window0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:382: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="395" name="test_filter_numpy_warning[main_window0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:395: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="429" name="test_get_help_combo" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:429: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="484" name="test_get_help_ipython_console_dot_notation" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:484: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="523" name="test_get_help_ipython_console_special_characters" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:523: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="566" name="test_get_help_ipython_console" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:566: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="591" name="test_get_help_editor[object_info0]" time="0.000"><skipped message="Does not work on Mac and Windows!" type="pytest.skip">spyder/app/tests/test_mainwindow.py:591: Does not work on Mac and Windows!</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="591" name="test_get_help_editor[object_info1]" time="0.000"><skipped message="Does not work on Mac and Windows!" type="pytest.skip">spyder/app/tests/test_mainwindow.py:591: Does not work on Mac and Windows!</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="628" name="test_window_title" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:628: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="652" name="test_move_to_first_breakpoint[True]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:652: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="652" name="test_move_to_first_breakpoint[False]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:652: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="743" name="test_runconfig_workdir" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:743: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="798" name="test_dedicated_consoles" time="0.000"><skipped message="It&apos;s failing there" type="pytest.skip">spyder/app/tests/test_mainwindow.py:798: It&apos;s failing there</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="850" name="test_connection_to_external_kernel" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:850: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="894" name="test_change_types_in_varexp" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:894: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="921" name="test_change_cwd_ipython_console[non_ascii_\xf1_\xed_\xe7]" time="0.000"><skipped message="It fails on macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:921: It fails on macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="921" name="test_change_cwd_ipython_console[test_dir]" time="0.000"><skipped message="It fails on macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:921: It fails on macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="955" name="test_change_cwd_explorer[non_ascii_\xf1_\xed_\xe7]" time="0.000"><skipped message="It fails on macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:955: It fails on macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="955" name="test_change_cwd_explorer[test_dir]" time="0.000"><skipped message="It fails on macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:955: It fails on macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="986" name="test_run_cython_code" time="0.000"><skipped message="Hard to test on Windows and macOS and fails for IPython 7.11.0" type="pytest.skip">spyder/app/tests/test_mainwindow.py:986: Hard to test on Windows and macOS and fails for IPython 7.11.0</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1038" name="test_open_notebooks_from_project_explorer" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1038: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1086" name="test_runfile_from_project_explorer" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1086: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1137" name="test_set_new_breakpoints" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1137: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1175" name="test_run_code" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1175: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1342" name="test_run_cell_copy[main_window0]" time="0.001"><skipped message="It fails on macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1342: It fails on macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1401" name="test_open_files_in_new_editor_window" time="0.000"><skipped message="It times out sometimes on Windows, it&apos;s not meant to be run outside of a CI and it segfaults too frequently in PyQt5" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1401: It times out sometimes on Windows, it&apos;s not meant to be run outside of a CI and it segfaults too frequently in PyQt5</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1430" name="test_close_when_file_is_changed" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1430: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1449" name="test_maximize_minimize_plugins" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1449: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1469" name="test_issue_4066" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1469: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1511" name="test_varexp_edit_inline" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1511: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1543" name="test_c_and_n_pdb_commands" time="0.001"><skipped message="It times out sometimes on Windows and macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1543: It times out sometimes on Windows and macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1621" name="test_stop_dbg" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1621: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1663" name="test_change_cwd_dbg" time="0.000"><skipped message="It only works on Linux" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1663: It only works on Linux</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1705" name="test_varexp_magic_dbg" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1705: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1744" name="test_plots_plugin[main_window0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1744: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1744" name="test_plots_plugin[main_window1]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1744: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1793" name="test_tight_layout_option_for_inline_plot" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1793: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1905" name="test_switcher" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1905: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1961" name="test_edidorstack_open_switcher_dlg" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1961: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="1985" name="test_edidorstack_open_symbolfinder_dlg" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:1985: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2014" name="test_run_static_code_analysis" time="0.000"><skipped message="Times out sometimes on macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2014: Times out sometimes on macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2049" name="test_troubleshooting_menu_item_and_url" time="0.002"></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2066" name="test_help_opens_when_show_tutorial_full" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2066: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2125" name="test_report_issue" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2125: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2136" name="test_custom_layouts" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2136: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2172" name="test_save_on_runfile" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2172: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2198" name="test_pylint_follows_file" time="0.000"><skipped message="Fails on macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2198: Fails on macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2243" name="test_report_comms_error" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2243: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2269" name="test_break_while_running" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2269: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2338" name="test_preferences_run_section_exists" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2338: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2347" name="test_preferences_checkboxes_not_checked_regression" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2347: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2395" name="test_preferences_change_font_regression" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2395: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2414" name="test_preferences_empty_shortcut_regression" time="0.000"><skipped message="Changes of Shitf+Return shortcut cause an ambiguos shortcut" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2414: Changes of Shitf+Return shortcut cause an ambiguos shortcut</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2468" name="test_preferences_shortcut_reset_regression" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2468: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2483" name="test_preferences_change_interpreter" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2483: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2509" name="test_preferences_last_page_is_loaded" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2509: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2530" name="test_go_to_definition" time="0.000"><skipped message="It times out too much on Windows and macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2530: It times out too much on Windows and macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2580" name="test_debug_unsaved_file" time="0.000"><skipped message="It times out on macOS/PY3" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2580: It times out on macOS/PY3</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2618" name="test_runcell[True]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2618: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2618" name="test_runcell[False]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2618: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2662" name="test_runcell_leading_indent" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2662: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2684" name="test_varexp_rename" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2684: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2750" name="test_varexp_remove" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2750: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2802" name="test_varexp_refresh" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2802: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2833" name="test_runcell_edge_cases" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2833: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2863" name="test_runcell_pdb" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2863: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2912" name="test_runcell_cache[False]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2912: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2912" name="test_runcell_cache[True]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2912: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2951" name="test_path_manager_updates_clients" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2951: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="2987" name="test_pdb_key_leak" time="0.000"><skipped message="It times out on macOS and Windows" type="pytest.skip">spyder/app/tests/test_mainwindow.py:2987: It times out on macOS and Windows</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3052" name="test_pdb_step[True]" time="0.000"><skipped message="It times out on macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3052: It times out on macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3052" name="test_pdb_step[False]" time="0.001"><skipped message="It times out on macOS" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3052: It times out on macOS</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3150" name="test_runcell_after_restart" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3150: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3179" name="test_ipython_magic[True-True]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3179: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3179" name="test_ipython_magic[True-False]" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3179: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3179" name="test_ipython_magic[False-True]" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3179: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3179" name="test_ipython_magic[False-False]" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3179: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3231" name="test_running_namespace" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3231: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3286" name="test_post_mortem" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3286: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3306" name="test_run_unsaved_file_multiprocessing" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3306: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3347" name="test_varexp_cleared_after_kernel_restart" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3347: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3376" name="test_varexp_cleared_after_reset" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3376: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3421" name="test_immediate_debug" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3421: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3432" name="test_local_namespace" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3432: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3503" name="test_ordering_lsp_requests_at_startup" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3503: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3534" name="test_tour_message[main_window0]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3534: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3580" name="test_update_outline" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3580: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3652" name="test_prevent_closing" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3652: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_mainwindow" file="spyder/app/tests/test_mainwindow.py" line="3690" name="test_continue_first_line" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/app/tests/test_mainwindow.py:3690: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.app.tests.test_solver" file="spyder/app/tests/test_solver.py" line="77" name="test_solve_plugin_dependencies_none_values" time="0.001"></testcase><testcase classname="spyder.app.tests.test_solver" file="spyder/app/tests/test_solver.py" line="82" name="test_solve_plugin_dependencies_self_reference" time="0.001"></testcase><testcase classname="spyder.app.tests.test_solver" file="spyder/app/tests/test_solver.py" line="88" name="test_solve_plugin_dependencies_circular" time="0.001"></testcase><testcase classname="spyder.app.tests.test_solver" file="spyder/app/tests/test_solver.py" line="94" name="test_solve_plugin_dependencies_missing_optional" time="0.001"></testcase><testcase classname="spyder.app.tests.test_solver" file="spyder/app/tests/test_solver.py" line="99" name="test_solve_plugin_dependencies_missing_requires" time="0.001"></testcase><testcase classname="spyder.app.tests.test_solver" file="spyder/app/tests/test_solver.py" line="104" name="test_solve_plugin_dependencies_1" time="0.001"></testcase><testcase classname="spyder.app.tests.test_solver" file="spyder/app/tests/test_solver.py" line="109" name="test_solve_plugin_dependencies_2" time="0.001"></testcase><testcase classname="spyder.app.tests.test_solver" file="spyder/app/tests/test_solver.py" line="114" name="test_solve_plugin_dependencies_3" time="0.001"></testcase><testcase classname="spyder.app.tests.test_solver" file="spyder/app/tests/test_solver.py" line="119" name="test_find_internal_plugins" time="0.008"></testcase><testcase classname="spyder.app.tests.test_tour" file="spyder/app/tests/test_tour.py" line="25" name="test_tour" time="0.039"></testcase><testcase classname="spyder.config.tests.test_base" file="spyder/config/tests/test_base.py" line="30" name="test_is_stable_version" time="0.001"></testcase><testcase classname="spyder.config.tests.test_base" file="spyder/config/tests/test_base.py" line="39" name="test_get_conf_path[True]" time="0.004"><system-out>Update LANGUAGE_CODES (inside config/base.py) if a new translation has been added to Spyder
</system-out></testcase><testcase classname="spyder.config.tests.test_base" file="spyder/config/tests/test_base.py" line="39" name="test_get_conf_path[False]" time="0.006"><system-out>Update LANGUAGE_CODES (inside config/base.py) if a new translation has been added to Spyder
</system-out></testcase><testcase classname="spyder.config.tests.test_manager" file="spyder/config/tests/test_manager.py" line="30" name="test_site_config_load" time="0.103"><system-out>/var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/site-config-2 100 100
/var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/site-config-1 200 200
/var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/site-config-0 300 300
</system-out></testcase><testcase classname="spyder.config.tests.test_manager" file="spyder/config/tests/test_manager.py" line="55" name="test_external_plugin_config" time="0.073"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;commands&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;message&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;multithreaded&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;namespace&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;profile&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;show_internal_errors&quot; not found in section &quot;internal_console&quot; of configuration!
</system-out></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input0-[sec][opt] = val\n]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input1-[sec][opt] = 50\n]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input2-[sec][opt] = [50]\n]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input3-[sec][opt] = (50, 2)\n]" time="0.003"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input4-[sec][opt] = {50}\n]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input5-[sec][opt] = {&apos;k&apos;: 50}\n]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input6-[sec][opt] = False\n]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input7-[sec][opt] = True\n]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input8-[sec space][opt] = True\n]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="24" name="test_default_config_set[test_input9-[sec space][opt space] = True\n]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="49" name="test_default_config_save_write" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="53" name="test_default_config_set_defaults" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="62" name="test_userconfig_get_minor_version[3.2.1-3.2]" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="62" name="test_userconfig_get_minor_version[3.2.0-3.2]" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="71" name="test_userconfig_get_major_version[3.2.1-3]" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="71" name="test_userconfig_get_major_version[0.2.0-0]" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="80" name="test_userconfig_check_version[abc]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="80" name="test_userconfig_check_version[x.x.x]" time="0.003"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="80" name="test_userconfig_check_version[1.0]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="80" name="test_userconfig_check_version[-1.0]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="80" name="test_userconfig_check_version[-1.0.0]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="80" name="test_userconfig_check_version[]" time="0.003"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="100" name="test_userconfig_check_defaults" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="125" name="test_userconfig_check_section_option" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="144" name="test_userconfig_load_from_ini" time="0.008"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="162" name="test_userconfig_get_version" time="0.010"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="169" name="test_userconfig_set_version" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="175" name="test_userconfig_reset_to_defaults" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="197" name="test_userconfig_set_as_defaults" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="210" name="test_userconfig_get_default" time="0.009"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="226" name="test_userconfig_get[defaults0-value]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="226" name="test_userconfig_get[defaults1-&quot;\xe9\xe0\xc7\xc3\xe3\xe9\xe8\xef&quot;]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="226" name="test_userconfig_get[defaults2-\xe9\xe0\xc7\xc3\xe3\xe9\xe8\xef]" time="0.003"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="226" name="test_userconfig_get[defaults3-True]" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="226" name="test_userconfig_get[defaults4-&lt;class &apos;spyder.config.user.UserConfig&apos;&gt;]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="226" name="test_userconfig_get[defaults5-123]" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="226" name="test_userconfig_get[defaults6-123.123]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="226" name="test_userconfig_get[defaults7-value7]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="226" name="test_userconfig_get[defaults8-value8]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="250" name="test_userconfig_get2[defaults0-val-True]" time="0.001"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="250" name="test_userconfig_get2[defaults1-val-False]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="250" name="test_userconfig_get2[defaults2-val-False]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="272" name="test_userconfig_get_string_from_inifile" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigGet" file="spyder/config/tests/test_user.py" line="275" name="test_userconfig_get_does_not_eval_functions" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="281" name="test_userconfig_set_default" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="303" name="test_userconfig_set_valid[defaults0-other]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="303" name="test_userconfig_set_valid[defaults1-\xe3\xe9\xe8\xef]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="303" name="test_userconfig_set_valid[defaults2-False]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="303" name="test_userconfig_set_valid[defaults3-dict]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="303" name="test_userconfig_set_valid[defaults4-345]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="303" name="test_userconfig_set_valid[defaults5-345.345]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="303" name="test_userconfig_set_valid[defaults6-value6]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="303" name="test_userconfig_set_valid[defaults7-value7]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="303" name="test_userconfig_set_valid[defaults8-other]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="327" name="test_userconfig_set_invalid[defaults0-no]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="327" name="test_userconfig_set_invalid[defaults1-n9]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="327" name="test_userconfig_set_invalid[defaults2-n9]" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="345" name="test_userconfig_set_with_string" time="0.003"></testcase><testcase classname="spyder.config.tests.test_user.TestUserConfigSet" file="spyder/config/tests/test_user.py" line="358" name="test_userconfig_set_percentage_string" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="364" name="test_userconfig_remove_section" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="370" name="test_userconfig_remove_option" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="377" name="test_userconfig_cleanup" time="0.002"></testcase><testcase classname="spyder.config.tests.test_user.TestSpyderConfigApplyPatches" file="spyder/config/tests/test_user.py" line="389" name="test_spyderconfig_apply_configuration_patches_42" time="0.003"></testcase><testcase classname="spyder.config.tests.test_user.TestSpyderConfigApplyPatches" file="spyder/config/tests/test_user.py" line="397" name="test_spyderconfig_apply_configuration_patches_45" time="0.003"></testcase><testcase classname="spyder.config.tests.test_user" file="spyder/config/tests/test_user.py" line="406" name="test_spyderconfig_get_defaults_path_name_from_version" time="0.003"></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="64" name="test_file_open_close" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:64: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="87" name="test_get_words" time="0.001"></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[c]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[cpp]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[css]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[erl]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[ex]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[html]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[java]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[jl]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[md]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[py]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="93" name="test_tokenize[R]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:93: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.fallback.tests.test_fallback" file="spyder/plugins/completion/fallback/tests/test_fallback.py" line="123" name="test_token_update" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/fallback/tests/test_fallback.py:123: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.kite.parsing.tests.test_parsing" file="spyder/plugins/completion/kite/parsing/tests/test_parsing.py" line="10" name="test_find_returning_function_path" time="0.002"><system-out>Checking pd.read_csv: import pandas as pd\ndf = pd.read_csv(&quot;a&quot;)\ndf.

Checking pd.read_csv: import pandas as pd\ndf = pd.read_csv(&quot;a&quot;)\ndf.a

Checking pd.read_csv: import pandas as pd\ndf = pd.read_csv(&quot;a&quot;)\nfoo = df.

Checking pd.read_csv: import pandas as pd\ndf = pd.read_csv(&quot;a&quot;)\nfoo = df.a

Checking plt.figure: import matplotlib.pyplot as plt\nfig=plt.figure(figsize=(15, 10))\nfig.

Checking sns.pairplot: import seaborn as sns\ng = sns.pairplot(temp[[u&apos;Pclass&apos;, u&apos;Sex&apos;, u&apos;Age&apos;, u&apos;Parch&apos;, u&apos;Fare&apos;,\n    u&apos;Embarked&apos;, u&apos;FamilySize&apos;, u&apos;Title&apos;, u&apos;Survived&apos;]],\n    hue=&apos;Survived&apos;, palette = &apos;seismic&apos;,size=1.2,diag_kind = &apos;kde&apos;,\n    diag_kws=dict(shade=True),plot_kws=dict(s=10) )\ng.s

</system-out></testcase><testcase classname="spyder.plugins.completion.languageserver.tests.test_lsp_config_dialog" file="spyder/plugins/completion/languageserver/tests/test_lsp_config_dialog.py" line="32" name="test_config_dialog[config_dialog0]" time="0.114"><system-err>Exception ignored in: &lt;function LanguageServerPlugin.__del__ at 0x7fb2f9a40c20&gt;
Traceback (most recent call last):
  File &quot;/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/completion/languageserver/plugin.py&quot;, line 106, in __del__
    for language in self.clients_hearbeat:
RuntimeError: super-class __init__() of type LanguageServerPlugin was never called
Traceback (most recent call last):
  File &quot;/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/preferences/tests/conftest.py&quot;, line 88, in __init__
    plugin = plugin(parent=self._main, configuration=CONF)
TypeError: __init__() got an unexpected keyword argument &apos;configuration&apos;
</system-err></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[class]" time="0.003"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[def]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[for]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[while]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[import]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[from]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[async]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[try]" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[with]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[list]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[dict]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.completion.snippets.tests.test_snippets" file="spyder/plugins/completion/snippets/tests/test_snippets.py" line="22" name="test_snippet_completions[set]" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/completion/snippets/tests/test_snippets.py:22: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.console.tests.test_plugin" file="spyder/plugins/console/tests/test_plugin.py" line="58" name="test_run_code" time="0.058"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;commands&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;message&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;multithreaded&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;namespace&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;profile&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;show_internal_errors&quot; not found in section &quot;internal_console&quot; of configuration!
</system-out></testcase><testcase classname="spyder.plugins.console.tests.test_plugin" file="spyder/plugins/console/tests/test_plugin.py" line="72" name="test_completions" time="0.066"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;commands&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;message&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;multithreaded&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;namespace&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;profile&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;show_internal_errors&quot; not found in section &quot;internal_console&quot; of configuration!
</system-out></testcase><testcase classname="spyder.plugins.console.tests.test_plugin" file="spyder/plugins/console/tests/test_plugin.py" line="86" name="test_handle_exception" time="0.106"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;commands&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;message&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;multithreaded&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;namespace&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;profile&quot; not found in section &quot;internal_console&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;show_internal_errors&quot; not found in section &quot;internal_console&quot; of configuration!
</system-out></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="37" name="test_bracket_closing_new_line" time="0.078"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="57" name="test_close_brackets[(-()-1]" time="0.070"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="57" name="test_close_brackets[{-{}-1]" time="0.069"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="57" name="test_close_brackets[[-[]-1]" time="0.079"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="75" name="test_nested_brackets[()-(())-2]" time="0.075"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="75" name="test_nested_brackets[{}-{()}-2]" time="0.073"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="75" name="test_nested_brackets[[]-[()]-2]" time="0.072"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="75" name="test_nested_brackets[,-(),-1]" time="0.072"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="75" name="test_nested_brackets[:-():-1]" time="0.084"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="75" name="test_nested_brackets[;-();-1]" time="0.073"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="101" name="test_selected_text" time="0.075"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="121" name="test_selected_text_multiple_lines" time="0.075"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="151" name="test_complex_completion" time="0.077"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="173" name="test_bracket_closing" time="0.078"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closebrackets" file="spyder/plugins/editor/extensions/tests/test_closebrackets.py" line="193" name="test_activate_deactivate" time="0.074"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[&quot;-&quot;&quot;-1]" time="0.077"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[&apos;-&apos;&apos;-1]" time="0.075"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[#&quot;-#&quot;-2]" time="0.075"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[#&apos;-#&apos;-2]" time="0.072"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[&quot;&quot;&quot;-&quot;&quot;&quot;-3]" time="0.074"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[&apos;&apos;&apos;-&apos;&apos;&apos;-3]" time="0.072"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[&quot;&quot;&quot;&quot;-&quot;&quot;&quot;&quot;&quot;&quot;-3]" time="0.079"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[&apos;&apos;&apos;&apos;-&apos;&apos;&apos;&apos;&apos;&apos;-3]" time="0.076"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[&quot;some_string&quot;-&quot;some_string&quot;-13]" time="0.079"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="37" name="test_close_quotes[&apos;some_string&apos;-&apos;some_string&apos;-13]" time="0.080"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="62" name="test_trailing_text[()-(&quot;&quot;)-2]" time="0.087"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="62" name="test_trailing_text[{}-{&quot;&quot;}-2]" time="0.075"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="62" name="test_trailing_text[[]-[&quot;&quot;]-2]" time="0.074"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="62" name="test_trailing_text[,-&quot;&quot;,-1]" time="0.073"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="62" name="test_trailing_text[:-&quot;&quot;:-1]" time="0.084"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="62" name="test_trailing_text[;-&quot;&quot;;-1]" time="0.074"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="62" name="test_trailing_text[a-&quot;a-1]" time="0.073"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="89" name="test_selected_text" time="0.075"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="109" name="test_selected_text_multiple_lines" time="0.076"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="139" name="test_close_quotes_in_brackets" time="0.105"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_closequotes" file="spyder/plugins/editor/extensions/tests/test_closequotes.py" line="176" name="test_activate_deactivate" time="0.074"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="39" name="test_parse_function_definition[def foo():--name_list0-type_list0-value_list0-None]" time="0.002"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="39" name="test_parse_function_definition[ def foo(arg0, arg1=&apos;:&apos;, arg2: str=&apos;-&gt; (float, str):&apos;) -&gt;              (float, int): - -name_list1-type_list1-value_list1-(float, int)]" time="0.001"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="62" name="test_get_function_body[    def foo():\n\n        if 1:\n            raise ValueError\n        else:\n            return\n\n    class F:-    -\n        if 1:\n            raise ValueError\n        else:\n            return\n]" time="0.071"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="62" name="test_get_function_body[def foo():\n    return--    return]" time="0.075"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc---True]" time="0.082"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc---False]" time="0.072"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc-if 1:\n    -if 1:\n    -True]" time="0.073"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc-if 1:\n    -if 1:\n    -False]" time="0.073"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc-async def foo():\n    raise\n    raise ValueError\n    raise ValueError(&quot;test&quot;)\n    raise TypeError(&quot;test&quot;)\n    yield -async def foo():\n    &quot;&quot;&quot;\n    \n\n    Raises\n    ------\n    ValueError\n        DESCRIPTION.\n    TypeError\n        DESCRIPTION.\n\n    Yields\n    ------\n    None.\n\n    &quot;&quot;&quot;\n    raise\n    raise ValueError\n    raise ValueError(&quot;test&quot;)\n    raise TypeError(&quot;test&quot;)\n    yield -True]" time="0.080"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc-async def foo():\n    raise\n    raise ValueError\n    raise ValueError(&quot;test&quot;)\n    raise TypeError(&quot;test&quot;)\n    yield -async def foo():\n    &quot;&quot;&quot;\n    \n\n    Raises\n    ------\n    ValueError\n        DESCRIPTION.\n    TypeError\n        DESCRIPTION.\n\n    Yields\n    ------\n    None.\n\n    &quot;&quot;&quot;\n    raise\n    raise ValueError\n    raise ValueError(&quot;test&quot;)\n    raise TypeError(&quot;test&quot;)\n    yield -False]" time="0.082"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc-  def foo():\n      print(&apos;{}&apos; % foo_raise Value)\n      foo_yield-  def foo():\n      &quot;&quot;&quot;\n      \n\n      Returns\n      -------\n      None.\n\n      &quot;&quot;&quot;\n      print(&apos;{}&apos; % foo_raise Value)\n      foo_yield-True]" time="0.077"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc-  def foo():\n      print(&apos;{}&apos; % foo_raise Value)\n      foo_yield-  def foo():\n      &quot;&quot;&quot;\n      \n\n      Returns\n      -------\n      None.\n\n      &quot;&quot;&quot;\n      print(&apos;{}&apos; % foo_raise Value)\n      foo_yield-False]" time="0.076"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc-def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    -def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    &quot;&quot;&quot;\n    \n\n    Parameters\n    ----------\n    arg : TYPE\n        DESCRIPTION.\n    arg0 : TYPE\n        DESCRIPTION.\n    arg1 : int\n        DESCRIPTION.\n    arg2 : List[Tuple[str, float]]\n        DESCRIPTION.\n    arg3 : TYPE, optional\n        DESCRIPTION. The default is &apos;-&gt; (float, int):&apos;.\n    arg4 : TYPE, optional\n        DESCRIPTION. The default is &apos;:float, int[&apos;.\n    arg5 : str, optional\n        DESCRIPTION. The default is &apos;&quot;&quot;&apos;.\n\n    Returns\n    -------\n    (List[Tuple[str, float]], str, float)\n        DESCRIPTION.\n\n    &quot;&quot;&quot;\n    -True]" time="0.080"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Numpydoc-def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    -def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    &quot;&quot;&quot;\n    \n\n    Parameters\n    ----------\n    arg : TYPE\n        DESCRIPTION.\n    arg0 : TYPE\n        DESCRIPTION.\n    arg1 : int\n        DESCRIPTION.\n    arg2 : List[Tuple[str, float]]\n        DESCRIPTION.\n    arg3 : TYPE, optional\n        DESCRIPTION. The default is &apos;-&gt; (float, int):&apos;.\n    arg4 : TYPE, optional\n        DESCRIPTION. The default is &apos;:float, int[&apos;.\n    arg5 : str, optional\n        DESCRIPTION. The default is &apos;&quot;&quot;&apos;.\n\n    Returns\n    -------\n    (List[Tuple[str, float]], str, float)\n        DESCRIPTION.\n\n    &quot;&quot;&quot;\n    -False]" time="0.080"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Googledoc-async def foo():\n    raise\n    raise ValueError\n    raise TypeError(&quot;test&quot;)\n    yield value\n    -async def foo():\n    &quot;&quot;&quot;\n    \n\n    Raises:\n        ValueError: DESCRIPTION.\n        TypeError: DESCRIPTION.\n\n    Yields:\n        value (TYPE): DESCRIPTION.\n\n    &quot;&quot;&quot;\n    raise\n    raise ValueError\n    raise TypeError(&quot;test&quot;)\n    yield value\n    -True]" time="0.080"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Googledoc-async def foo():\n    raise\n    raise ValueError\n    raise TypeError(&quot;test&quot;)\n    yield value\n    -async def foo():\n    &quot;&quot;&quot;\n    \n\n    Raises:\n        ValueError: DESCRIPTION.\n        TypeError: DESCRIPTION.\n\n    Yields:\n        value (TYPE): DESCRIPTION.\n\n    &quot;&quot;&quot;\n    raise\n    raise ValueError\n    raise TypeError(&quot;test&quot;)\n    yield value\n    -False]" time="0.076"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Googledoc-  def foo():\n      -  def foo():\n      &quot;&quot;&quot;\n      \n\n      Returns:\n          None.\n\n      &quot;&quot;&quot;\n      -True]" time="0.086"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Googledoc-  def foo():\n      -  def foo():\n      &quot;&quot;&quot;\n      \n\n      Returns:\n          None.\n\n      &quot;&quot;&quot;\n      -False]" time="0.080"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Googledoc-def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    -def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    &quot;&quot;&quot;\n    \n\n    Args:\n        arg (TYPE): DESCRIPTION.\n        arg0 (TYPE): DESCRIPTION.\n        arg1 (int): DESCRIPTION.\n        arg2 (List[Tuple[str, float]]): DESCRIPTION.\n        arg3 (TYPE, optional): DESCRIPTION. Defaults to &apos;-&gt; (float, int):&apos;.\n        arg4 (TYPE, optional): DESCRIPTION. Defaults to &apos;:float, int[&apos;.\n        arg5 (str, optional): DESCRIPTION. Defaults to &apos;&quot;&quot;&apos;.\n\n    Returns:\n        (List[Tuple[str, float]], str, float): DESCRIPTION.\n\n    &quot;&quot;&quot;\n    -True]" time="0.079"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Googledoc-def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    -def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    &quot;&quot;&quot;\n    \n\n    Args:\n        arg (TYPE): DESCRIPTION.\n        arg0 (TYPE): DESCRIPTION.\n        arg1 (int): DESCRIPTION.\n        arg2 (List[Tuple[str, float]]): DESCRIPTION.\n        arg3 (TYPE, optional): DESCRIPTION. Defaults to &apos;-&gt; (float, int):&apos;.\n        arg4 (TYPE, optional): DESCRIPTION. Defaults to &apos;:float, int[&apos;.\n        arg5 (str, optional): DESCRIPTION. Defaults to &apos;&quot;&quot;&apos;.\n\n    Returns:\n        (List[Tuple[str, float]], str, float): DESCRIPTION.\n\n    &quot;&quot;&quot;\n    -False]" time="0.077"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Sphinxdoc-async def foo():\n    raise\n    raise ValueError\n    raise TypeError(&quot;test&quot;)\n    yield value\n    -async def foo():\n    &quot;&quot;&quot;\n    \n    :raises ValueError: DESCRIPTION\n    :raises TypeError: DESCRIPTION\n    :yield: DESCRIPTION\n    :rtype: TYPE\n\n    &quot;&quot;&quot;\n    raise\n    raise ValueError\n    raise TypeError(&quot;test&quot;)\n    yield value\n    -True]" time="0.077"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Sphinxdoc-async def foo():\n    raise\n    raise ValueError\n    raise TypeError(&quot;test&quot;)\n    yield value\n    -async def foo():\n    &quot;&quot;&quot;\n    \n    :raises ValueError: DESCRIPTION\n    :raises TypeError: DESCRIPTION\n    :yield: DESCRIPTION\n    :rtype: TYPE\n\n    &quot;&quot;&quot;\n    raise\n    raise ValueError\n    raise TypeError(&quot;test&quot;)\n    yield value\n    -False]" time="0.076"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Sphinxdoc-  def foo():\n      -  def foo():\n      &quot;&quot;&quot;\n      \n      :return: DESCRIPTION\n      :rtype: TYPE\n\n      &quot;&quot;&quot;\n      -True]" time="0.073"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Sphinxdoc-  def foo():\n      -  def foo():\n      &quot;&quot;&quot;\n      \n      :return: DESCRIPTION\n      :rtype: TYPE\n\n      &quot;&quot;&quot;\n      -False]" time="0.074"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Sphinxdoc-def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    -def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    &quot;&quot;&quot;\n    \n    :param arg: DESCRIPTION\n    :type arg: TYPE\n    :param arg0: DESCRIPTION\n    :type arg0: TYPE\n    :param arg1: DESCRIPTION\n    :type arg1: int\n    :param arg2: DESCRIPTION\n    :type arg2: List[Tuple[str, float]]\n    :param arg3: DESCRIPTION, defaults to &apos;-&gt; (float, int):&apos;\n    :type arg3: TYPE, optional\n    :param arg4: DESCRIPTION, defaults to &apos;:float, int[&apos;\n    :type arg4: TYPE, optional\n    :param arg5: DESCRIPTION, defaults to &apos;&quot;&quot;&apos;\n    :type arg5: str, optional\n    :return: DESCRIPTION\n    :rtype: (List[Tuple[str, float]], str, float)\n\n    &quot;&quot;&quot;\n    -True]" time="0.078"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="97" name="test_editor_docstring_by_shortcut[Sphinxdoc-def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    -def foo(arg, arg0, arg1: int, arg2: List[Tuple[str, float]],\n    arg3=&apos;-&gt; (float, int):&apos;, arg4=&apos;:float, int[&apos;, arg5: str=&apos;&quot;&quot;&apos;) -&gt;   (List[Tuple[str, float]], str, float):\n    &quot;&quot;&quot;\n    \n    :param arg: DESCRIPTION\n    :type arg: TYPE\n    :param arg0: DESCRIPTION\n    :type arg0: TYPE\n    :param arg1: DESCRIPTION\n    :type arg1: int\n    :param arg2: DESCRIPTION\n    :type arg2: List[Tuple[str, float]]\n    :param arg3: DESCRIPTION, defaults to &apos;-&gt; (float, int):&apos;\n    :type arg3: TYPE, optional\n    :param arg4: DESCRIPTION, defaults to &apos;:float, int[&apos;\n    :type arg4: TYPE, optional\n    :param arg5: DESCRIPTION, defaults to &apos;&quot;&quot;&apos;\n    :type arg5: str, optional\n    :return: DESCRIPTION\n    :rtype: (List[Tuple[str, float]], str, float)\n\n    &quot;&quot;&quot;\n    -False]" time="0.079"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="319" name="test_editor_docstring_below_def_by_shortcut[  def foo():\n      -  def foo():\n      &quot;&quot;&quot;\n      \n\n      Returns\n      -------\n      None.\n\n      &quot;&quot;&quot;\n      ]" time="0.074"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="350" name="test_editor_docstring_delayed_popup[def foo():\n-def foo():\n    &quot;&quot;&quot;\n    \n\n    Returns\n    -------\n    None.\n\n    &quot;&quot;&quot;-16777221]" time="2.139"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="350" name="test_editor_docstring_delayed_popup[def foo():\n-def foo():\n    &quot;&quot;&quot;a-65]" time="1.986"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="395" name="test_editor_docstring_with_body_numpydoc[  def foo():\n      raise\n      foo_raise()\n      raisefoo()\n      raise ValueError\n      is_yield()\n      raise ValueError(&apos;tt&apos;)\n      yieldfoo()\n      \traise TypeError(&apos;tt&apos;)\n      _yield\n      -  def foo():\n      &quot;&quot;&quot;\n      \n\n      Raises\n      ------\n      ValueError\n          DESCRIPTION.\n      TypeError\n          DESCRIPTION.\n\n      Returns\n      -------\n      None.\n\n      &quot;&quot;&quot;\n      raise\n      foo_raise()\n      raisefoo()\n      raise ValueError\n      is_yield()\n      raise ValueError(&apos;tt&apos;)\n      yieldfoo()\n      \traise TypeError(&apos;tt&apos;)\n      _yield\n      ]" time="0.072"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="395" name="test_editor_docstring_with_body_numpydoc[def foo():\n    return None\n    return &quot;f, b&quot;, v1, v2, 3.0, .7, (,), {}, [ab], f(a), None, a.b, a+b, True\n    return &quot;f, b&quot;, v1, v3, 420, 5., (,), {}, [ab], f(a), None, a.b, a+b, False\n    -def foo():\n    &quot;&quot;&quot;\n    \n\n    Returns\n    -------\n    str\n        DESCRIPTION.\n    v1 : TYPE\n        DESCRIPTION.\n    TYPE\n        DESCRIPTION.\n    numeric\n        DESCRIPTION.\n    float\n        DESCRIPTION.\n    tuple\n        DESCRIPTION.\n    dict\n        DESCRIPTION.\n    list\n        DESCRIPTION.\n    TYPE\n        DESCRIPTION.\n    TYPE\n        DESCRIPTION.\n    TYPE\n        DESCRIPTION.\n    TYPE\n        DESCRIPTION.\n    bool\n        DESCRIPTION.\n\n    &quot;&quot;&quot;\n    return None\n    return &quot;f, b&quot;, v1, v2, 3.0, .7, (,), {}, [ab], f(a), None, a.b, a+b, True\n    return &quot;f, b&quot;, v1, v3, 420, 5., (,), {}, [ab], f(a), None, a.b, a+b, False\n    ]" time="0.072"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="395" name="test_editor_docstring_with_body_numpydoc[def foo():\n    return no, (ano, eo, dken)\n    -def foo():\n    &quot;&quot;&quot;\n    \n\n    Returns\n    -------\n    TYPE\n        DESCRIPTION.\n\n    &quot;&quot;&quot;\n    return no, (ano, eo, dken)\n    ]" time="0.068"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="504" name="test_editor_docstring_with_body_googledoc[  def foo():\n      raise\n      foo_raise()\n      raisefoo()\n      raise ValueError\n      is_yield()\n      raise ValueError(&apos;tt&apos;)\n      yieldfoo()\n      \traise TypeError(&apos;tt&apos;)\n      _yield\n      -  def foo():\n      &quot;&quot;&quot;\n      \n\n      Raises:\n          ValueError: DESCRIPTION.\n          TypeError: DESCRIPTION.\n\n      Returns:\n          None.\n\n      &quot;&quot;&quot;\n      raise\n      foo_raise()\n      raisefoo()\n      raise ValueError\n      is_yield()\n      raise ValueError(&apos;tt&apos;)\n      yieldfoo()\n      \traise TypeError(&apos;tt&apos;)\n      _yield\n      ]" time="0.072"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="504" name="test_editor_docstring_with_body_googledoc[def foo():\n    return None\n    return &quot;f, b&quot;, v1, v2, 3.0, .7, (,), {}, [ab], f(a), None, a.b, a+b, True\n    return &quot;f, b&quot;, v1, v3, 420, 5., (,), {}, [ab], f(a), None, a.b, a+b, False\n    -def foo():\n    &quot;&quot;&quot;\n    \n\n    Returns:\n        str: DESCRIPTION.\n        v1 (TYPE): DESCRIPTION.\n        TYPE: DESCRIPTION.\n        numeric: DESCRIPTION.\n        float: DESCRIPTION.\n        tuple: DESCRIPTION.\n        dict: DESCRIPTION.\n        list: DESCRIPTION.\n        TYPE: DESCRIPTION.\n        TYPE: DESCRIPTION.\n        TYPE: DESCRIPTION.\n        TYPE: DESCRIPTION.\n        bool: DESCRIPTION.\n\n    &quot;&quot;&quot;\n    return None\n    return &quot;f, b&quot;, v1, v2, 3.0, .7, (,), {}, [ab], f(a), None, a.b, a+b, True\n    return &quot;f, b&quot;, v1, v3, 420, 5., (,), {}, [ab], f(a), None, a.b, a+b, False\n    ]" time="0.071"></testcase><testcase classname="spyder.plugins.editor.extensions.tests.test_docstring" file="spyder/plugins/editor/extensions/tests/test_docstring.py" line="504" name="test_editor_docstring_with_body_googledoc[def foo():\n    return no, (ano, eo, dken)\n    -def foo():\n    &quot;&quot;&quot;\n    \n\n    Returns:\n        TYPE: DESCRIPTION.\n\n    &quot;&quot;&quot;\n    return no, (ano, eo, dken)\n    ]" time="0.068"></testcase><testcase classname="spyder.plugins.editor.panels.tests.test_scrollflag" file="spyder/plugins/editor/panels/tests/test_scrollflag.py" line="75" name="test_enabled" time="0.095"></testcase><testcase classname="spyder.plugins.editor.panels.tests.test_scrollflag" file="spyder/plugins/editor/panels/tests/test_scrollflag.py" line="88" name="test_flag_painting" time="0.126"></testcase><testcase classname="spyder.plugins.editor.panels.tests.test_scrollflag" file="spyder/plugins/editor/panels/tests/test_scrollflag.py" line="149" name="test_range_indicator_visible_on_hover_only" time="0.150"><failure message="assert False is True
 +  where False = &lt;spyder.plugins.editor.panels.scrollflag.ScrollFlagArea object at 0x7fb2c8c409b0&gt;._range_indicator_is_visible">editor_bot = &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2c8c36410&gt;
qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb30a0c3e10&gt;

    @pytest.mark.skipif(os.environ.get(&apos;CI&apos;, None) is not None,
                        reason=&quot;It fails on CIs&quot;)
    def test_range_indicator_visible_on_hover_only(editor_bot, qtbot):
        &quot;&quot;&quot;Test that the slider range indicator is visible only when hovering
        over the scrollflag area when the editor vertical scrollbar is visible.
        The scrollflag area should remain hidden at all times when the editor
        vertical scrollbar is not visible.&quot;&quot;&quot;
        editor = editor_bot
        sfa = editor.scrollflagarea
        editor.show()
    
        # Set a short text in the editor and assert that the slider is not visible.
        editor.set_text(short_code)
        editor.resize(450, 150)
        qtbot.waitUntil(lambda: not sfa.slider)
    
        # Move the mouse cursor to the center of the scrollflagarea and assert
        # that the slider range indicator remains hidden. The slider range
        # indicator should remains hidden at all times when the vertical scrollbar
        # of the editor is not visible.
        x = int(sfa.width()/2)
        y = int(sfa.height()/2)
        qtbot.mouseMove(sfa, pos=QPoint(x, y), delay=-1)
    
        assert sfa._range_indicator_is_visible is False
    
        # Set a long text in the editor and assert that the slider is visible.
        editor.set_text(long_code)
        editor.resize(450, 150)
        qtbot.waitUntil(lambda: sfa.slider)
    
        # Move the mouse cursor to the center of the scrollflagarea and assert
        # that the slider range indicator is now shown. When the vertical scrollbar
        # of the editor is visible, the slider range indicator should be visible
        # only when the mouse cursor hover above the scrollflagarea.
        x = int(sfa.width()/2)
        y = int(sfa.height()/2)
        qtbot.mouseMove(sfa, pos=QPoint(x, y), delay=-1)
    
&gt;       assert sfa._range_indicator_is_visible is True
E       assert False is True
E        +  where False = &lt;spyder.plugins.editor.panels.scrollflag.ScrollFlagArea object at 0x7fb2c8c409b0&gt;._range_indicator_is_visible

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/panels/tests/test_scrollflag.py:189: AssertionError</failure></testcase><testcase classname="spyder.plugins.editor.panels.tests.test_scrollflag" file="spyder/plugins/editor/panels/tests/test_scrollflag.py" line="198" name="test_range_indicator_alt_modifier_response" time="1.105"><failure message="AssertionError: waitUntil timed out in 1000 miliseconds
assert not True
 +  where True = &lt;function QtBot.waitUntil.&lt;locals&gt;.timed_out at 0x7fb2fd8580e0&gt;()">editor_bot = &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2c8c4b2d0&gt;
qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2c8c34f50&gt;

    @pytest.mark.skipif(os.environ.get(&apos;CI&apos;, None) is not None,
                        reason=&quot;It fails on CIs&quot;)
    def test_range_indicator_alt_modifier_response(editor_bot, qtbot):
        &quot;&quot;&quot;Test that the slider range indicator is visible while the alt key is
        held down while the cursor is over the editor, but outside of the
        scrollflag area. In addition, while the alt key is held down, mouse
        click events in the editor should be forwarded to the scrollfag area and
        should set the value of the editor vertical scrollbar.&quot;&quot;&quot;
        editor = editor_bot
        sfa = editor.scrollflagarea
        sfa._unit_testing = True
        vsb = editor.verticalScrollBar()
    
        editor.show()
        editor.resize(600, 150)
    
        # Set a long text in the editor and assert that the slider is visible.
        editor.set_text(long_code)
        editor.resize(600, 150)
        qtbot.waitUntil(lambda: sfa.slider)
    
        # Set the cursor position to the center of the editor.
        w = editor.width()
        h = editor.height()
        qtbot.mousePress(editor, Qt.LeftButton, pos=QPoint(w//2, h//2))
    
        # Hold the alt key and assert that the slider range indicator is visible.
        # Because it is not possible to simulate the action of holding the alt
        # key down in pytest-qt, this is done through a flag in the ScrollFlagArea
        # that is set to True when pressing the alt key and to false when releasing
        # it. This flag is only used for testing purpose.
        qtbot.keyPress(editor, Qt.Key_Alt)
        editor.resize(600, 150)
        x = int(sfa.width()/2)
        y = int(sfa.height()/2)
        qtbot.mouseMove(sfa, pos=QPoint(x, y), delay=-1)
&gt;       qtbot.waitUntil(lambda: sfa._range_indicator_is_visible)
E       AssertionError: waitUntil timed out in 1000 miliseconds
E       assert not True
E        +  where True = &lt;function QtBot.waitUntil.&lt;locals&gt;.timed_out at 0x7fb2fd8580e0&gt;()

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/panels/tests/test_scrollflag.py:235: AssertionError</failure></testcase><testcase classname="spyder.plugins.editor.tests.test_editor_config_dialog" file="spyder/plugins/editor/tests/test_editor_config_dialog.py" line="42" name="test_config_dialog[config_dialog0]" time="0.122"><system-err>Traceback (most recent call last):
  File &quot;/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/preferences/tests/conftest.py&quot;, line 88, in __init__
    plugin = plugin(parent=self._main, configuration=CONF)
TypeError: __init__() got an unexpected keyword argument &apos;configuration&apos;
</system-err></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="25" name="test_basic_initialization" time="0.058"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="33" name="test_setup_open_files[other_file.py-file1.py]" time="0.606"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="33" name="test_setup_open_files[file1.py-file1.py]" time="0.691"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="33" name="test_setup_open_files[file2.py-file2.py]" time="0.759"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="33" name="test_setup_open_files[file4.py-file4.py]" time="0.777"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="59" name="test_setup_open_files_cleanprefs" time="0.690"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="76" name="test_open_untitled_files" time="0.760"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="94" name="test_renamed_tree" time="0.062"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="119" name="test_no_template" time="0.483"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="143" name="test_editor_has_autosave_component" time="0.063"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="149" name="test_autosave_component_do_autosave" time="0.062"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="159" name="test_editor_transmits_sig_option_changed" time="0.056"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="167" name="test_editorstacks_share_autosave_data" time="0.070"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="180" name="test_editor_calls_recoverydialog_exec_if_nonempty" time="0.057"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="186" name="test_closing_editor_plugin_stops_autosave_timer" time="0.064"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="193" name="test_renamed_propagates_to_autosave" time="0.750"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="216" name="test_go_to_prev_next_cursor_position" time="1.013"></testcase><testcase classname="spyder.plugins.editor.tests.test_plugin" file="spyder/plugins/editor/tests/test_plugin.py" line="287" name="test_open_and_close_lsp_requests" time="1.695"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="19" name="test_autosave_component_set_interval" time="0.002"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="33" name="test_autosave_component_timer_if_enabled[False]" time="0.487"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="33" name="test_autosave_component_timer_if_enabled[True]" time="0.509"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="48" name="test_get_files_to_recover_with_empty_autosave_dir" time="0.002"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="59" name="test_get_files_to_recover_with_one_pid_file[True-False]" time="0.003"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="59" name="test_get_files_to_recover_with_one_pid_file[False-False]" time="0.003"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="59" name="test_get_files_to_recover_with_one_pid_file[False-True]" time="0.003"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="94" name="test_get_files_to_recover_with_non_pid_file" time="0.002"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="109" name="test_get_files_to_recover_without_autosave_dir" time="0.001"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="121" name="test_try_recover[False]" time="0.003"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="121" name="test_try_recover[True]" time="0.004"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="149" name="test_create_unique_autosave_filename[False-False]" time="0.001"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="149" name="test_create_unique_autosave_filename[True-False]" time="0.001"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="149" name="test_create_unique_autosave_filename[False-True]" time="0.001"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="177" name="test_autosave[True]" time="0.001"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="177" name="test_autosave[False]" time="0.001"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="204" name="test_save_autosave_mapping_with_nonempty_mapping[True]" time="0.002"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="204" name="test_save_autosave_mapping_with_nonempty_mapping[False]" time="0.003"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="223" name="test_save_autosave_mapping_with_empty_mapping[False]" time="0.002"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="223" name="test_save_autosave_mapping_with_empty_mapping[True]" time="0.002"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="242" name="test_autosave_remove_autosave_file[False]" time="0.002"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="242" name="test_autosave_remove_autosave_file[True]" time="0.002"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="268" name="test_get_autosave_filename" time="0.002"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="283" name="test_autosave_file_renamed[True]" time="0.003"></testcase><testcase classname="spyder.plugins.editor.utils.tests.test_autosave" file="spyder/plugins/editor/utils/tests/test_autosave.py" line="283" name="test_autosave_file_renamed[False]" time="0.003"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="34" name="test_no_auto_colon_after_simple_statement" time="0.070"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="38" name="test_auto_colon_after_if_statement" time="0.070"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="42" name="test_no_auto_colon_if_not_at_end_of_line" time="0.070"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="49" name="test_no_auto_colon_if_unterminated_string" time="0.090"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="53" name="test_no_auto_colon_in_comment" time="0.098"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="57" name="test_no_auto_colon_if_already_ends_in_colon" time="0.136"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="61" name="test_no_auto_colon_if_ends_in_backslash" time="0.062"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="65" name="test_no_auto_colon_in_one_line_if_statement" time="0.097"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="69" name="test_auto_colon_even_if_colon_inside_brackets" time="0.101"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="73" name="test_no_auto_colon_in_listcomp_over_two_lines" time="0.064"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="80" name="test_auto_colon_even_if_colon_inside_quotes" time="0.062"><skipped message="" type="pytest.xfail"></skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="85" name="test_no_auto_colon_in_listcomp_over_three_lines" time="0.101"><skipped message="" type="pytest.xfail"></skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autocolon" file="spyder/plugins/editor/widgets/tests/test_autocolon.py" line="94" name="test_auto_colon_in_two_if_statements_on_one_line" time="0.063"><skipped message="" type="pytest.xfail"></skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="42" name="test_simple_tuple" time="0.095"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="47" name="test_def_with_newline" time="0.065"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="52" name="test_def_with_indented_comment" time="0.102"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="57" name="test_brackets_alone" time="0.105"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="62" name="test_simple_def" time="0.142"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="67" name="test_open_parenthesis" time="0.104"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="73" name="test_open_bracket" time="0.098"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="79" name="test_open_curly" time="0.103"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="85" name="test_align_on_parenthesis" time="0.100"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="92" name="test_align_on_bracket" time="0.064"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="99" name="test_align_on_curly" time="0.135"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="106" name="test_keep_unindent" time="0.098"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="120" name="test_keep_unindent_fix_indent" time="0.061"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="134" name="test_keep_unindent_if_blank" time="0.100"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="145" name="test_first_line" time="0.065"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="151" name="test_indentation_with_spaces" time="0.800"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="179" name="test_def_with_unindented_comment" time="0.060"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="184" name="test_issue_5606" time="0.738"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="214" name="test_issue_7377" time="0.157"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="229" name="test_issue_887" time="0.201"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="275" name="test_keywords" time="0.837"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="300" name="test_hanging_indentation_without_block" time="0.359"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="319" name="test_no_hanging_indentation" time="0.499"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="342" name="test_unintent_in_block" time="0.186"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="348" name="test_multi_line_lists" time="0.261"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="369" name="test_string_literals" time="0.496"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="385" name="test_indentation_with_tabs" time="10.896"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="419" name="test_indentation_with_tabs_parenthesis" time="1.053"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="438" name="test_unindentation_with_tabs" time="1.012"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autoindent" file="spyder/plugins/editor/widgets/tests/test_autoindent.py" line="449" name="test_simple_indentation" time="0.648"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_autosaveerror" file="spyder/plugins/editor/widgets/tests/test_autosaveerror.py" line="14" name="test_autosave_error_message_box" time="0.040"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_bookmarks" file="spyder/plugins/editor/widgets/tests/test_bookmarks.py" line="76" name="test_add_bookmark" time="0.161"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_bookmarks" file="spyder/plugins/editor/widgets/tests/test_bookmarks.py" line="100" name="test_get_bookmarks" time="0.193"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_bookmarks" file="spyder/plugins/editor/widgets/tests/test_bookmarks.py" line="113" name="test_clear_bookmarks" time="0.109"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_bookmarks" file="spyder/plugins/editor/widgets/tests/test_bookmarks.py" line="133" name="test_update_bookmarks" time="0.140"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_bookmarks" file="spyder/plugins/editor/widgets/tests/test_bookmarks.py" line="143" name="test_save_bookmark" time="1.079"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_bookmarks" file="spyder/plugins/editor/widgets/tests/test_bookmarks.py" line="177" name="test_load_bookmark" time="0.697"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_breakpoints" file="spyder/plugins/editor/widgets/tests/test_breakpoints.py" line="87" name="test_add_remove_breakpoint" time="0.087"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_breakpoints" file="spyder/plugins/editor/widgets/tests/test_breakpoints.py" line="146" name="test_add_remove_breakpoint_with_edit_condition" time="0.078"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_breakpoints" file="spyder/plugins/editor/widgets/tests/test_breakpoints.py" line="195" name="test_get_breakpoints" time="0.074"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_breakpoints" file="spyder/plugins/editor/widgets/tests/test_breakpoints.py" line="215" name="test_clear_breakpoints" time="0.074"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_breakpoints" file="spyder/plugins/editor/widgets/tests/test_breakpoints.py" line="235" name="test_set_breakpoints" time="0.130"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_breakpoints" file="spyder/plugins/editor/widgets/tests/test_breakpoints.py" line="253" name="test_update_breakpoints" time="0.081"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="35" name="test_editor_upper_to_lower" time="0.103"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="48" name="test_editor_lower_to_upper" time="0.100"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="61" name="test_editor_log_lsp_handle_errors" time="0.000"><skipped message="Test only makes sense on Python 2." type="pytest.skip">spyder/plugins/editor/widgets/tests/test_codeeditor.py:61: Test only makes sense on Python 2.</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[for i in range(2): -for i in range(2): \n    \n     \n    -keys0-False]" time="0.105"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[for i in range(2): -for i in range(2):\n\n    -keys1-True]" time="0.102"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[myvar = 2 -myvar = 2\n-keys2-True]" time="0.100"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[somecode = 1\nmyvar = 2 \nmyvar = 3-somecode = 1\nmyvar = 2 \nmyvar = 3-keys3-True]" time="0.180"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[somecode = 1\nmyvar = 2 -somecode = 1\nmyvar = 2 -keys4-True]" time="0.104"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[&quot;&quot;&quot;This is a string with important spaces\n    -&quot;&quot;&quot;This is a string with important spaces\n    \n-keys5-True]" time="0.112"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[&quot;&quot;&quot;string   -&quot;&quot;&quot;string   \n-keys6-True]" time="0.106"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[somecode = 1\nmyvar = 2-somecode = 1\nmyvar = 2-keys7-True]" time="0.110"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[somecode = 1\nmyvar = 2-somecode = 1\nmyvar = 2 -keys8-True]" time="0.109"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[a=1\na=2 \na=3-a=1\na=2 \na=3-keys9-True]" time="0.106"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[def fun():\n    &quot;&quot;&quot;fun-def fun():\n    &quot;&quot;&quot;fun\n\n    -keys10-True]" time="0.114"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[def fun():\n    &quot;&quot;&quot;fun-def fun():\n    &quot;&quot;&quot;fun\n    \n    -keys11-False]" time="0.116"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[(&apos;\U0001f6ab&apos;)-(&apos;\U0001f6ab&apos;)\n-keys12-True]" time="0.222"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[def fun():-def fun():\n\n    -keys13-True]" time="0.111"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[def fun():-def fun():\n\n\n-keys14-True]" time="0.117"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[def fun():\n    i = 0\n# no indent-def fun():\n    i = 0\n# no indent\n-keys15-True]" time="0.114"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="88" name="test_editor_rstrip_keypress[if a:\n    def b():\n        i = 1-if a:\n    def b():\n        i = 1\n\n    -keys16-True]" time="0.120"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;string -expected_state0]" time="0.114"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;string -expected_state1]" time="0.114"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;string \\-expected_state2]" time="0.113"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;string \\-expected_state3]" time="0.115"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;string \\ -expected_state4]" time="0.117"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;string \\ -expected_state5]" time="0.119"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;string &apos; -expected_state6]" time="0.114"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;string &quot; -expected_state7]" time="0.118"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;string &quot;-expected_state8]" time="0.118"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;string &apos;-expected_state9]" time="0.119"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;string &quot; -expected_state10]" time="0.118"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;string &apos; -expected_state11]" time="0.136"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;&apos;&apos;string -expected_state12]" time="0.128"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;&quot;&quot;string -expected_state13]" time="0.124"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;&apos;&apos;string \\-expected_state14]" time="0.125"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;&quot;&quot;string \\-expected_state15]" time="0.122"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;&apos;&apos;string \\ -expected_state16]" time="0.135"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;&quot;&quot;string \\ -expected_state17]" time="0.114"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;&apos;&apos;string &apos;&apos;&apos; -expected_state18]" time="0.120"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;&quot;&quot;string &quot;&quot;&quot; -expected_state19]" time="0.133"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;&apos;&apos;string &quot;&quot;&quot;-expected_state20]" time="0.126"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;&quot;&quot;string &apos;&apos;&apos;-expected_state21]" time="0.119"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&apos;&apos;&apos;string &quot;&quot;&quot; -expected_state22]" time="0.123"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="188" name="test_in_string[&quot;&quot;&quot;string &apos;&apos;&apos; -expected_state23]" time="0.120"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="234" name="test_comment" time="0.132"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor" file="spyder/plugins/editor/widgets/tests/test_codeeditor.py" line="251" name="test_undo_return" time="0.125"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="60" name="test_format_signature" time="0.092"><system-out>concatenate&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;(&lt;/span&gt;a1&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;,&lt;/span&gt;&amp;nbsp;a2&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span style=&apos;font-family:&quot;.AppleSystemUIFont&quot;;font-size:13pt;color:#DAA520&apos;&gt;&lt;b&gt;a...&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;,&lt;/span&gt;&amp;nbsp;[b1&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;,&lt;/span&gt;&amp;nbsp;b2&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;,&lt;/span&gt;&amp;nbsp;b...]&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;,&lt;/span&gt;&amp;nbsp;axis={}&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;,&lt;/span&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;index=[]&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;*&lt;/span&gt;args&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;*&lt;/span&gt;kargs&lt;span style=&quot;color:red;font-weight:bold&quot;&gt;)&lt;/span&gt;
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="100" name="test_delete" time="0.093"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="128" name="test_paste_files[create_folders_files0]" time="0.093"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="128" name="test_paste_files[create_folders_files1]" time="0.096"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="128" name="test_paste_files[create_folders_files2]" time="0.095"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="144" name="test_paste_text[def fun(a, b):\n\treturn a + b-\n]" time="0.092"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="144" name="test_paste_text[def fun(a, b):\n\treturn a + b-\r\n]" time="0.089"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="144" name="test_paste_text[def fun(a, b):\n\treturn a + b-\r]" time="0.085"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="144" name="test_paste_text[https://www.spyder-ide.org-\n]" time="0.087"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="144" name="test_paste_text[https://www.spyder-ide.org-\r\n]" time="0.088"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_codeeditor_1" file="spyder/plugins/editor/widgets/tests/test_codeeditor_1.py" line="144" name="test_paste_text[https://www.spyder-ide.org-\r]" time="0.101"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_comments" file="spyder/plugins/editor/widgets/tests/test_comments.py" line="52" name="test_single_line_comment" time="0.102"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_comments" file="spyder/plugins/editor/widgets/tests/test_comments.py" line="113" name="test_selection_comment" time="0.094"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_decorations" file="spyder/plugins/editor/widgets/tests/test_decorations.py" line="45" name="test_decorations" time="41.890"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_decorations" file="spyder/plugins/editor/widgets/tests/test_decorations.py" line="112" name="test_update_decorations_when_scrolling" time="23.214"><failure message="assert 2 == 3
  -2
  +3">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2fd7f5710&gt;

    @flaky(max_runs=10)
    def test_update_decorations_when_scrolling(qtbot):
        &quot;&quot;&quot;
        Test how many calls we&apos;re doing to update decorations when
        scrolling.
        &quot;&quot;&quot;
        # NOTE: Here we need to use `patch` from unittest.mock, instead of the
        # mocker fixture, to have the same results when running the test
        # alone and with the other tests in this file.
    
        patched_object = (&apos;spyder.plugins.editor.utils.decoration.&apos;
                          &apos;TextDecorationsManager._update&apos;)
    
        with patch(patched_object) as _update:
            # NOTE: We can&apos;t use a fixture to build a CodeEditor instance here
            # because the testing results are not consistent.
            editor = CodeEditor(parent=None)
            editor.setup_editor(
                language=&apos;Python&apos;,
                color_scheme=&apos;spyder/dark&apos;,
                font=QFont(&quot;Monospace&quot;, 10),
            )
            editor.resize(640, 480)
            editor.show()
            qtbot.addWidget(editor)
    
            # If there&apos;s no waiting after CodeEditor is created, there shouldn&apos;t
            # be a call to _update.
            assert _update.call_count == 0
    
            with open(osp.join(PARENT, &apos;codeeditor.py&apos;), &apos;r&apos;) as f:
                text = f.read()
            editor.set_text(text)
    
            # If there&apos;s no waiting after setting text, there shouldn&apos;t be a
            # call to _update either.
            assert _update.call_count == 0
    
            # Simulate scrolling
            scrollbar = editor.verticalScrollBar()
            for i in range(6):
                scrollbar.setValue(i * 70)
                qtbot.wait(100)
    
            # A new call is done here due to __cursor_position_changed being
            # called, which in turn calls highlight_current_cell and
            # highlight_current_line
            assert _update.call_count == 1
    
            # Wait for decorations to update
            qtbot.wait(UPDATE_DECORATIONS_TIMEOUT + 100)
    
            # Assert a new call to _update was done
            assert _update.call_count == 2
    
            # Simulate grabbing and moving the scrollbar with the mouse
            scrollbar = editor.verticalScrollBar()
            value = scrollbar.value()
            for __ in range(400):
                scrollbar.setValue(value + 1)
                value = scrollbar.value()
    
            # No calls should be done after this.
            assert _update.call_count == 2
    
            # Wait for decorations to update
            qtbot.wait(UPDATE_DECORATIONS_TIMEOUT + 100)
    
            # Assert a new call to _update was done
&gt;           assert _update.call_count == 3
E           assert 2 == 3
E             -2
E             +3

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_decorations.py:182: AssertionError</failure></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="123" name="test_find_number_matches" time="0.201"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="145" name="test_move_current_line_up" time="0.250"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="174" name="test_move_current_line_down" time="0.257"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="205" name="test_move_multiple_lines_up" time="0.337"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="227" name="test_copy_lines_down_up" time="0.650"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="270" name="test_move_multiple_lines_down" time="0.096"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="293" name="test_run_top_line" time="0.094"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="305" name="test_run_last_nonempty_line" time="0.091"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="315" name="test_run_empty_line_in_middle" time="0.089"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="323" name="test_run_last_line_when_empty" time="0.092"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="331" name="test_run_last_line_when_nonempty" time="0.094"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="345" name="test_find_replace_case_sensitive" time="0.098"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="360" name="test_replace_current_selected_line" time="0.154"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="374" name="test_replace_enter_press" time="0.126"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="405" name="test_replace_plain_regex" time="0.130"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="419" name="test_replace_invalid_regex" time="0.143"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="452" name="test_replace_honouring_case" time="0.154"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="478" name="test_selection_escape_characters" time="0.148"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="503" name="test_selection_backslash" time="0.159"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="527" name="test_advance_cell" time="0.096"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="552" name="test_get_current_word" time="0.097"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="596" name="test_tab_keypress_properly_caught_find_replace" time="0.126"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="615" name="test_tab_moves_focus_from_search_to_replace" time="0.477"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="642" name="test_tab_copies_find_to_replace" time="0.589"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="658" name="test_autosave_all" time="0.165"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="674" name="test_maybe_autosave" time="0.121"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="687" name="test_maybe_autosave_saves_only_if_changed" time="0.094"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="707" name="test_maybe_autosave_does_not_save_new_files" time="0.087"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="716" name="test_opening_sets_file_hash" time="0.290"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="727" name="test_reloading_updates_file_hash" time="0.250"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="740" name="test_closing_removes_file_hash" time="0.250"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="752" name="test_maybe_autosave_does_not_save_after_open[ham.py]" time="0.513"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="752" name="test_maybe_autosave_does_not_save_after_open[ham.txt]" time="20.355"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="772" name="test_maybe_autosave_does_not_save_after_reload" time="0.296"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="790" name="test_autosave_updates_name_mapping" time="0.291"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="801" name="test_maybe_autosave_handles_error" time="0.252"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor" file="spyder/plugins/editor/widgets/tests/test_editor.py" line="816" name="test_remove_autosave_file" time="0.298"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="138" name="test_load_files" time="0.463"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="161" name="test_close_editor" time="0.292"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="177" name="test_close_a_file" time="0.322"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="194" name="test_sort_file_alphabetically" time="0.327"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="212" name="test_sync_file_order" time="0.327"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="231" name="test_toggle_off_show_all_files" time="0.804"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="252" name="test_single_file_sync" time="0.343"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editor_and_outline" file="spyder/plugins/editor/widgets/tests/test_editor_and_outline.py" line="270" name="test_toggle_on_show_all_files" time="0.308"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editorsplitter" file="spyder/plugins/editor/widgets/tests/test_editorsplitter.py" line="134" name="test_init" time="0.052"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editorsplitter" file="spyder/plugins/editor/widgets/tests/test_editorsplitter.py" line="159" name="test_close" time="0.129"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editorsplitter" file="spyder/plugins/editor/widgets/tests/test_editorsplitter.py" line="238" name="test_split" time="1.203"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editorsplitter" file="spyder/plugins/editor/widgets/tests/test_editorsplitter.py" line="279" name="test_iter_editorstacks" time="0.085"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editorsplitter" file="spyder/plugins/editor/widgets/tests/test_editorsplitter.py" line="306" name="test_get_layout_settings" time="0.307"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editorsplitter" file="spyder/plugins/editor/widgets/tests/test_editorsplitter.py" line="333" name="test_set_layout_settings_dont_goto" time="0.957"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_editorsplitter" file="spyder/plugins/editor/widgets/tests/test_editorsplitter.py" line="374" name="test_set_layout_settings_goto" time="0.970"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params0]" time="1.140"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2fd39cc90&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2fd39cc90&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2480d1690&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2382a3190&gt;
params = (&apos;file:///var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/tmpvuounux1\n&apos;, &apos;file:///var/folders/3z/d3pjcry13fnb29fcbmq5...z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/tmpvuounux1&apos;, &apos;file:///var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/tmpvuounux1&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;file:///var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/tmpvuounux1\n&apos;, &apos;file:///var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/tmpvuounux1&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params1]" time="1.128"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb238276410&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb238276410&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2585b9cd0&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2480d9f50&gt;
params = (&apos;&quot;file:///Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/t...uillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;&quot;file:///Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py&quot;\n&apos;, &apos;file:///Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params2]" time="1.127"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2480ded90&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2480ded90&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2c8dc7a50&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2381b4910&gt;
params = (&apos;&quot;file://./conftest.py&quot;\n&apos;, &apos;file://./conftest.py&apos;, &apos;/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/conftest.py&apos;, &apos;file://./conftest.py&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;&quot;file://./conftest.py&quot;\n&apos;, &apos;file://./conftest.py&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params3]" time="1.128"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb258536510&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb258536510&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2fd365eb0&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb238fa5b10&gt;
params = (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;, &apos;/not%20there&apos;, &apos;file:///not%20there&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params4]" time="1.129"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2c8a14790&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2c8a14790&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2c8d97230&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2382b2290&gt;
params = (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;, &apos;file:///not_there&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params5]" time="1.135"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2382a4cd0&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2382a4cd0&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2585bc370&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb258582690&gt;
params = (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None, &apos;https://google.com&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params6]" time="1.147"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2fd3dd610&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2fd3dd610&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2585957d0&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2c8a1db50&gt;
params = (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None, &apos;https://google.com&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params7]" time="1.191"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2c89efad0&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2c89efad0&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2c8a5caf0&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2c8a972d0&gt;
params = (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None, &apos;mailto:some@email.com&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params8]" time="1.131"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb23825ba10&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb23825ba10&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2c8a2b9b0&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2fd3aeb10&gt;
params = (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None, &apos;mailto:some@email.com&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params9]" time="1.130"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2fd3c60d0&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2fd3c60d0&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2c8a5caf0&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb30a8e1310&gt;
params = (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None, &apos;mailto:some@email.com&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;some@email.com\n&apos;, &apos;some@email.com&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params10]" time="1.131"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2fd36a310&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2fd36a310&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb258585f50&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2382cc490&gt;
params = (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None, &apos;mailto:some@email.com&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params11]" time="1.126"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2fd3d8590&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2fd3d8590&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2480f6870&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2382cca50&gt;
params = (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;, &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None, &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;, &apos;gl:gitlab-org/gitlab-ce#62529&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params12]" time="1.349"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2fd3dd350&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2fd3dd350&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb238252e10&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb269413890&gt;
params = (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;, &apos;bb:birkenfeld/pygments-main#1516&apos;, None, &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;# bb:birkenfeld/pygments-main#1516\n&apos;, &apos;bb:birkenfeld/pygments-main#1516&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params13]" time="1.127"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2382a3e10&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2382a3e10&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2fd391050&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2fd37ca10&gt;
params = (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None, &apos;https://github.com/spyder-ide/spyder/issues/123&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params14]" time="1.126"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2fd387b10&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2fd387b10&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2c8d9c690&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2382a37d0&gt;
params = (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None, &apos;https://github.com/spyder-ide/spyder/issues/123&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="31" name="test_goto_uri[params15]" time="1.137"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2c8a8b110&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2c8a8b110&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2480e6910&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb258589290&gt;
params = (&apos;# gh-123\n&apos;, &apos;gh-123&apos;, &apos;/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py&apos;, &apos;https://github.com/spyder-ide/spyder/issues/123&apos;)

    @pytest.mark.skipif(bool(os.environ.get(&apos;CI&apos;, None)), reason=&apos;Fails on CI!&apos;)
    @pytest.mark.parametrize(&apos;params&apos;, [
                # Parameter, expected output 1, full file path, expected output 2
                # ----------------------------------------------------------------
                # Files that exist with absolute paths
                (&apos;file://{}\n&apos;.format(TEMPFILE_PATH), &apos;file://&apos; + TEMPFILE_PATH,
                 TEMPFILE_PATH, &apos;file://&apos; + TEMPFILE_PATH),
                (&apos;&quot;file://{}&quot;\n&apos;.format(TEST_FILE_ABS), &apos;file://&apos; + TEST_FILE_ABS,
                 TEST_FILE_ABS, &apos;file://&apos; + TEST_FILE_ABS),
                # Files that exist with relative paths
                (&apos;&quot;file://./{}&quot;\n&apos;.format(TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL,
                 os.path.join(TEST_FOLDER, TEST_FILE_REL),
                 &apos;file://./&apos; + TEST_FILE_REL),
                # Files that do not exist
                (&apos;&quot;file:///not%20there&quot;&apos;, &apos;file:///not%20there&apos;,
                 &apos;/not%20there&apos;, &apos;file:///not%20there&apos;),
                (&apos;&quot;file:///not_there&quot;&apos;, &apos;file:///not_there&apos;, &apos;/not_there&apos;,
                 &apos;file:///not_there&apos;),
                # Urls
                (&apos;&quot; https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                (&apos;# https://google.com&quot;\n&apos;, &apos;https://google.com&apos;, None,
                 &apos;https://google.com&apos;),
                # Mail to
                (&apos;&quot; mailto:some@email.com&quot;\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# mailto:some@email.com\n&apos;, &apos;mailto:some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                (&apos;# some@email.com\n&apos;, &apos;some@email.com&apos;, None,
                 &apos;mailto:some@email.com&apos;),
                # Issues
                (&apos;# gl:gitlab-org/gitlab-ce#62529\n&apos;,
                 &apos;gl:gitlab-org/gitlab-ce#62529&apos;, None,
                 &apos;https://gitlab.com/gitlab-org/gitlab-ce/issues/62529&apos;),
                (&apos;# bb:birkenfeld/pygments-main#1516\n&apos;,
                 &apos;bb:birkenfeld/pygments-main#1516&apos;, None,
                 &apos;https://bitbucket.org/birkenfeld/pygments-main/issues/1516&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                (&apos;# gh:spyder-ide/spyder#123\n&apos;, &apos;gh:spyder-ide/spyder#123&apos;, None,
                 &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                pytest.param((&apos;# gh-123\n&apos;, &apos;gh-123&apos;, HERE,
                              &apos;https://github.com/spyder-ide/spyder/issues/123&apos;),
                             marks=pytest.mark.skipif(
                                 not(get_git_remotes(HERE)),
                                 reason=&apos;not in a git repository&apos;)),
            ]
        )
    def test_goto_uri(qtbot, editorbot, mocker, params):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        param, expected_output_1, full_file_path, expected_output_2 = params
        if full_file_path:
            code_editor.filename = full_file_path
    
        # Set text in editor
        code_editor.set_text(param)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        with qtbot.waitSignal(code_editor.sig_uri_found, timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
            print([param, expected_output_1])
            print([args])
&gt;           output_1 = args[0]
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:114: TypeError</failure><system-out>[&apos;# gh-123\n&apos;, &apos;gh-123&apos;]
[None]
</system-out></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="122" name="test_goto_uri_project_root_path" time="1.129"><failure message="TypeError: &apos;NoneType&apos; object is not subscriptable">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x7fb2fd39cb90&gt;
editorbot = (&lt;pytestqt.qtbot.QtBot object at 0x7fb2fd39cb90&gt;, &lt;spyder.plugins.editor.widgets.codeeditor.CodeEditor object at 0x7fb2480fa9b0&gt;)
mocker = &lt;pytest_mock.plugin.MockerFixture object at 0x7fb2fd3dda90&gt;
tmpdir = local(&apos;/private/var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/pytest-of-guillaume.haben/pytest-589/test_goto_uri_project_root_pat0&apos;)

    def test_goto_uri_project_root_path(qtbot, editorbot, mocker, tmpdir):
        &quot;&quot;&quot;Test that the uri search is working correctly.&quot;&quot;&quot;
        _, code_editor = editorbot
        code_editor.show()
        mock_project_dir = str(tmpdir)
        expected_output_path = os.path.join(mock_project_dir, &quot;some-file.txt&quot;)
        with open(expected_output_path, &quot;w&quot;) as fh:
            fh.write(&quot;BOOM!\n&quot;)
    
        code_editor.set_current_project_path(mock_project_dir)
        code_editor.filename = &quot;foo.txt&quot;
        mocker.patch.object(QDesktopServices, &apos;openUrl&apos;)
    
        # Set text in editor
        code_editor.set_text(&quot;file://^/some-file.txt&quot;)
    
        # Get cursor coordinates
        code_editor.moveCursor(QTextCursor.Start)
        x, y = code_editor.get_coordinates(&apos;cursor&apos;)
    
        # The `+ 23` is to put the mouse on top of the word
        point = code_editor.calculate_real_position(QPoint(x + 23, y))
    
        # Move cursor to end of line
        code_editor.moveCursor(QTextCursor.End)
    
        # Move mouse cursor on top of test word
        qtbot.mouseMove(code_editor, point, delay=500)
    
        # Check valid with project open
        with qtbot.waitSignal(code_editor.sig_file_uri_preprocessed,
                              timeout=3000) as blocker:
            qtbot.keyPress(code_editor, Qt.Key_Control, delay=500)
            args = blocker.args
&gt;           assert args[0] == expected_output_path
E           TypeError: &apos;NoneType&apos; object is not subscriptable

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/plugins/editor/widgets/tests/test_goto.py:157: TypeError</failure></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="170" name="test_goto_uri_message_box" time="0.590"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_goto" file="spyder/plugins/editor/widgets/tests/test_goto.py" line="197" name="test_pattern_highlight_regression" time="41.118"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_indentation" file="spyder/plugins/editor/widgets/tests/test_indentation.py" line="59" name="test_single_line_indent" time="0.141"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_indentation" file="spyder/plugins/editor/widgets/tests/test_indentation.py" line="78" name="test_selection_indent" time="0.110"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_indentation" file="spyder/plugins/editor/widgets/tests/test_indentation.py" line="98" name="test_fix_indentation" time="0.146"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_indentation" file="spyder/plugins/editor/widgets/tests/test_indentation.py" line="128" name="test_single_line_unindent" time="0.137"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_indentation" file="spyder/plugins/editor/widgets/tests/test_indentation.py" line="147" name="test_selection_unindent" time="0.109"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_indentation" file="spyder/plugins/editor/widgets/tests/test_indentation.py" line="166" name="test_single_line_unindent_to_grid" time="0.103"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_indentation" file="spyder/plugins/editor/widgets/tests/test_indentation.py" line="193" name="test_selection_unindent_to_grid" time="0.109"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="288" name="test_automatic_completions_parens_bug" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:288: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_introspection" file="spyder/plugins/editor/widgets/tests/test_introspection.py" line="800" name="test_kite_code_snippets" time="0.000"><skipped message="Only works if rtree is installed.It&apos;s not meant to be run without kite installed and runnning" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_introspection.py:800: Only works if rtree is installed.It&apos;s not meant to be run without kite installed and runnning</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_panels" file="spyder/plugins/editor/widgets/tests/test_panels.py" line="34" name="test_activate_panels[linenumbers-LineNumberArea-True]" time="0.065"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_panels" file="spyder/plugins/editor/widgets/tests/test_panels.py" line="34" name="test_activate_panels[linenumbers-LineNumberArea-False]" time="0.144"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_panels" file="spyder/plugins/editor/widgets/tests/test_panels.py" line="34" name="test_activate_panels[edge_line-EdgeLine-True]" time="0.101"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_panels" file="spyder/plugins/editor/widgets/tests/test_panels.py" line="34" name="test_activate_panels[edge_line-EdgeLine-False]" time="0.135"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_panels" file="spyder/plugins/editor/widgets/tests/test_panels.py" line="34" name="test_activate_panels[scrollflagarea-ScrollFlagArea-True]" time="0.108"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_panels" file="spyder/plugins/editor/widgets/tests/test_panels.py" line="34" name="test_activate_panels[scrollflagarea-ScrollFlagArea-False]" time="0.099"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_panels" file="spyder/plugins/editor/widgets/tests/test_panels.py" line="34" name="test_activate_panels[indent_guides-IndentationGuide-True]" time="0.139"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_panels" file="spyder/plugins/editor/widgets/tests/test_panels.py" line="34" name="test_activate_panels[indent_guides-IndentationGuide-False]" time="0.106"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="29" name="test_recoverydialog_has_cancel_button" time="0.041"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="43" name="test_recoverydialog_table_labels" time="0.013"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="72" name="test_recoverydialog_exec_if_nonempty_when_empty" time="0.006"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="84" name="test_recoverydialog_exec_if_nonempty_when_nonempty" time="0.047"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="94" name="test_recoverydialog_exec_if_nonempty_when_no_autosave_dir" time="0.007"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="109" name="test_recoverydialog_restore_button" time="0.048"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="129" name="test_recoverydialog_restore_when_original_does_not_exist" time="0.046"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="150" name="test_recoverydialog_restore_when_original_not_recorded" time="0.046"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="173" name="test_recoverydialog_restore_fallback" time="0.046"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="196" name="test_recoverydialog_restore_when_error" time="0.048"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="225" name="test_recoverydialog_accepted_after_all_restored" time="0.050"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="247" name="test_recoverydialog_discard_button" time="0.046"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="267" name="test_recoverydialog_discard_when_error" time="0.047"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="293" name="test_recoverydialog_open_button" time="0.013"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_recover" file="spyder/plugins/editor/widgets/tests/test_recover.py" line="312" name="test_recoverydialog_open_when_no_original" time="0.045"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="89" name="test_save_if_changed" time="0.592"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="156" name="test_save" time="0.457"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="203" name="test_file_saved_in_other_editorstack" time="0.908"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="235" name="test_select_savename" time="0.363"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="259" name="test_save_as" time="0.278"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="301" name="test_save_as_with_outline" time="0.334"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="335" name="test_save_copy_as" time="0.280"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="369" name="test_save_all" time="0.308"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="386" name="test_save_as_lsp_calls" time="0.283"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_save" file="spyder/plugins/editor/widgets/tests/test_save.py" line="416" name="test_save_as_change_file_type" time="0.349"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="50" name="test_default_keybinding_values" time="0.001"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="77" name="test_start_and_end_of_document_shortcuts" time="0.127"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="100" name="test_del_undo_redo_shortcuts" time="0.125"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="131" name="test_copy_cut_paste_shortcuts" time="0.143"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="165" name="test_select_all_shortcut" time="0.127"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="181" name="test_delete_line_shortcut" time="0.136"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="199" name="test_go_to_line_shortcut" time="0.136"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="219" name="test_transform_to_lowercase_shortcut" time="0.126"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="237" name="test_transform_to_uppercase_shortcut" time="0.135"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="256" name="test_next_and_previous_word_shortcuts" time="0.128"></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="286" name="test_builtin_shift_del_and_ins" time="0.000"><skipped message="Not valid in macOS" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_shortcuts.py:286: Not valid in macOS</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_shortcuts" file="spyder/plugins/editor/widgets/tests/test_shortcuts.py" line="322" name="test_builtin_undo_redo" time="0.000"><skipped message="Only valid in Windows system" type="pytest.skip">spyder/plugins/editor/widgets/tests/test_shortcuts.py:322: Only valid in Windows system</skipped></testcase><testcase classname="spyder.plugins.editor.widgets.tests.test_status" file="spyder/plugins/editor/widgets/tests/test_status.py" line="33" name="test_status_bar" time="0.006"></testcase><testcase classname="spyder.plugins.explorer.tests.test_explorer_config_dialog" file="spyder/plugins/explorer/tests/test_explorer_config_dialog.py" line="16" name="test_config_dialog[config_dialog0]" time="0.106"><system-err>Traceback (most recent call last):
  File &quot;/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/preferences/tests/conftest.py&quot;, line 88, in __init__
    plugin = plugin(parent=self._main, configuration=CONF)
TypeError: __init__() got an unexpected keyword argument &apos;configuration&apos;
</system-err></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="91" name="test_file_explorer" time="0.071"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="98" name="test_project_explorer" time="0.045"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[FileExplorerTest-create_folders_files0-absolute]" time="0.024"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[FileExplorerTest-create_folders_files0-relative]" time="0.022"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[FileExplorerTest-create_folders_files1-absolute]" time="0.023"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[FileExplorerTest-create_folders_files1-relative]" time="0.022"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[FileExplorerTest-create_folders_files2-absolute]" time="0.037"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[FileExplorerTest-create_folders_files2-relative]" time="0.024"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[ProjectExplorerTest-create_folders_files0-absolute]" time="0.034"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[ProjectExplorerTest-create_folders_files0-relative]" time="0.033"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[ProjectExplorerTest-create_folders_files1-absolute]" time="0.031"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[ProjectExplorerTest-create_folders_files1-relative]" time="0.031"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[ProjectExplorerTest-create_folders_files2-absolute]" time="0.031"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="105" name="test_copy_path[ProjectExplorerTest-create_folders_files2-relative]" time="0.032"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="125" name="test_copy_file[FileExplorerTest-create_folders_files0]" time="0.022"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="125" name="test_copy_file[FileExplorerTest-create_folders_files1]" time="0.022"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="125" name="test_copy_file[FileExplorerTest-create_folders_files2]" time="0.024"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="125" name="test_copy_file[ProjectExplorerTest-create_folders_files0]" time="0.033"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="125" name="test_copy_file[ProjectExplorerTest-create_folders_files1]" time="0.037"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="125" name="test_copy_file[ProjectExplorerTest-create_folders_files2]" time="0.033"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="143" name="test_save_file[FileExplorerTest-create_folders_files0]" time="0.024"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="143" name="test_save_file[FileExplorerTest-create_folders_files1]" time="0.026"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="143" name="test_save_file[FileExplorerTest-create_folders_files2]" time="0.028"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="143" name="test_save_file[ProjectExplorerTest-create_folders_files0]" time="0.033"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="143" name="test_save_file[ProjectExplorerTest-create_folders_files1]" time="0.033"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="143" name="test_save_file[ProjectExplorerTest-create_folders_files2]" time="0.035"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="157" name="test_delete_file[FileExplorerTest-create_folders_files0]" time="0.023"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="157" name="test_delete_file[FileExplorerTest-create_folders_files1]" time="0.024"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="157" name="test_delete_file[FileExplorerTest-create_folders_files2]" time="0.030"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="157" name="test_delete_file[ProjectExplorerTest-create_folders_files0]" time="0.033"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="157" name="test_delete_file[ProjectExplorerTest-create_folders_files1]" time="0.033"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="157" name="test_delete_file[ProjectExplorerTest-create_folders_files2]" time="0.033"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="165" name="test_rename_file_with_files[FileExplorerTest-create_folders_files0]" time="0.023"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="165" name="test_rename_file_with_files[FileExplorerTest-create_folders_files1]" time="0.024"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="165" name="test_rename_file_with_files[FileExplorerTest-create_folders_files2]" time="0.023"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="165" name="test_rename_file_with_files[ProjectExplorerTest-create_folders_files0]" time="0.031"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="165" name="test_rename_file_with_files[ProjectExplorerTest-create_folders_files1]" time="0.033"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="165" name="test_rename_file_with_files[ProjectExplorerTest-create_folders_files2]" time="0.032"></testcase><testcase classname="spyder.plugins.explorer.widgets.tests.test_explorer" file="spyder/plugins/explorer/widgets/tests/test_explorer.py" line="185" name="test_single_click_to_open" time="0.060"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="116" name="test_find_in_files_search" time="0.431"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="134" name="test_exclude_extension_regex[findinfiles0]" time="0.070"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="153" name="test_exclude_extension_string[findinfiles0]" time="0.074"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="172" name="test_exclude_extension_empty_regex[findinfiles0]" time="0.079"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="185" name="test_exclude_extension_string_no_regexp[findinfiles0]" time="0.071"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="198" name="test_exclude_extension_multiple_string[findinfiles0]" time="0.066"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="217" name="test_truncate_result_with_different_input[nnnnn]" time="0.050"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="217" name="test_truncate_result_with_different_input[\xf1and\xfa]" time="0.057"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="242" name="test_case_unsensitive_search[findinfiles0]" time="0.083"><system-out>{&apos;spam.txt&apos;: [(1, 10)], &apos;ham.txt&apos;: [(1, 0), (1, 10), (3, 0), (4, 0), (5, 4), (9, 0), (10, 0)]}
</system-out></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="256" name="test_case_sensitive_search[findinfiles0]" time="0.065"><system-out>{&apos;ham.txt&apos;: [(9, 0)]}
</system-out></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="270" name="test_search_regexp_error[findinfiles0]" time="0.043"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="281" name="test_exclude_regexp_error[findinfiles0]" time="0.054"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="294" name="test_add_external_paths" time="0.021"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="351" name="test_clear_this_list" time="0.021"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="382" name="test_delete_path" time="0.181"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="456" name="test_set_project_path" time="0.052"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="485" name="test_current_search_path[findinfiles0]" time="0.063"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="549" name="test_max_history[searchin_combobox0]" time="0.020"></testcase><testcase classname="spyder.plugins.findinfiles.tests.test_widgets" file="spyder/plugins/findinfiles/tests/test_widgets.py" line="569" name="test_max_results" time="0.089"><system-out>2 2
</system-out></testcase><testcase classname="spyder.plugins.help.tests.test_plugin" file="spyder/plugins/help/tests/test_plugin.py" line="80" name="test_no_docs_message" time="0.000"><skipped message="Segfaults in PyQt 5.10+" type="pytest.skip">spyder/plugins/help/tests/test_plugin.py:80: Segfaults in PyQt 5.10+</skipped></testcase><testcase classname="spyder.plugins.help.tests.test_plugin" file="spyder/plugins/help/tests/test_plugin.py" line="93" name="test_no_further_docs_message" time="0.000"><skipped message="Segfaults in PyQt 5.10+" type="pytest.skip">spyder/plugins/help/tests/test_plugin.py:93: Segfaults in PyQt 5.10+</skipped></testcase><testcase classname="spyder.plugins.help.tests.test_plugin" file="spyder/plugins/help/tests/test_plugin.py" line="110" name="test_help_opens_when_show_tutorial_unit" time="0.000"><skipped message="Segfaults in PyQt 5.10+" type="pytest.skip">spyder/plugins/help/tests/test_plugin.py:110: Segfaults in PyQt 5.10+</skipped></testcase><testcase classname="spyder.plugins.help.tests.test_widgets" file="spyder/plugins/help/tests/test_widgets.py" line="32" name="test_richtext" time="0.013"></testcase><testcase classname="spyder.plugins.help.tests.test_widgets" file="spyder/plugins/help/tests/test_widgets.py" line="37" name="test_plaintext" time="0.009"></testcase><testcase classname="spyder.plugins.history.tests.test_history_config_dialog" file="spyder/plugins/history/tests/test_history_config_dialog.py" line="21" name="test_config_dialog[config_dialog0]" time="0.086"></testcase><testcase classname="spyder.plugins.history.tests.test_plugin" file="spyder/plugins/history/tests/test_plugin.py" line="51" name="test_max_entries" time="0.063"></testcase><testcase classname="spyder.plugins.history.tests.test_plugin" file="spyder/plugins/history/tests/test_plugin.py" line="77" name="test_init" time="0.032"></testcase><testcase classname="spyder.plugins.history.tests.test_plugin" file="spyder/plugins/history/tests/test_plugin.py" line="90" name="test_add_history" time="0.051"></testcase><testcase classname="spyder.plugins.history.tests.test_plugin" file="spyder/plugins/history/tests/test_plugin.py" line="159" name="test_append_to_history" time="0.054"></testcase><testcase classname="spyder.plugins.history.tests.test_plugin" file="spyder/plugins/history/tests/test_plugin.py" line="199" name="test_change_history_depth" time="0.035"></testcase><testcase classname="spyder.plugins.history.tests.test_plugin" file="spyder/plugins/history/tests/test_plugin.py" line="219" name="test_toggle_wrap_mode" time="0.044"></testcase><testcase classname="spyder.plugins.history.tests.test_plugin" file="spyder/plugins/history/tests/test_plugin.py" line="246" name="test_toggle_line_numbers" time="0.042"></testcase><testcase classname="spyder.plugins.ipythonconsole.comms.tests.test_comms" file="spyder/plugins/ipythonconsole/comms/tests/test_comms.py" line="128" name="test_comm_base" time="0.383"></testcase><testcase classname="spyder.plugins.ipythonconsole.comms.tests.test_comms" file="spyder/plugins/ipythonconsole/comms/tests/test_comms.py" line="168" name="test_request" time="0.313"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipython_config_dialog" file="spyder/plugins/ipythonconsole/tests/test_ipython_config_dialog.py" line="26" name="test_config_dialog[config_dialog0]" time="0.128"><system-err>Traceback (most recent call last):
  File &quot;/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/preferences/tests/conftest.py&quot;, line 88, in __init__
    plugin = plugin(parent=self._main, configuration=CONF)
TypeError: __init__() got an unexpected keyword argument &apos;configuration&apos;
</system-err></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="220" name="test_banners" time="1.223"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="243" name="test_get_calltips[arange-signature0-documentation0]" time="0.001"><skipped message="Times out on macOS and fails on Linux" type="pytest.skip">spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py:243: Times out on macOS and fails on Linux</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="243" name="test_get_calltips[vectorize-signature1-documentation1]" time="0.001"><skipped message="Times out on macOS and fails on Linux" type="pytest.skip">spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py:243: Times out on macOS and fails on Linux</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="243" name="test_get_calltips[absolute-signature2-documentation2]" time="0.000"><skipped message="Times out on macOS and fails on Linux" type="pytest.skip">spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py:243: Times out on macOS and fails on Linux</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="292" name="test_auto_backend" time="1.266"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="312" name="test_pylab_client" time="2.319"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="342" name="test_sympy_client" time="3.281"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="374" name="test_cython_client" time="0.003"><skipped message="It only works reliably on Linux and fails for IPython 7.11.0" type="pytest.skip">spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py:374: It only works reliably on Linux and fails for IPython 7.11.0</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="412" name="test_tab_rename_for_slaves" time="1.267"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="432" name="test_no_repeated_tabs_name" time="1.253"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="450" name="test_tabs_preserve_name_after_move" time="1.288"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="467" name="test_conf_env_vars" time="1.296"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="483" name="test_no_stderr_file" time="1.207"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="500" name="test_non_ascii_stderr_file" time="1.197"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="518" name="test_console_import_namespace" time="1.210"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="536" name="test_console_disambiguation" time="1.371"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="573" name="test_console_coloring" time="1.533"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="600" name="test_set_cwd" time="1.375"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="624" name="test_get_cwd" time="1.264"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="657" name="test_request_env" time="1.356"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="678" name="test_request_syspath" time="1.351"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="705" name="test_save_history_dbg" time="3.021"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="789" name="test_dbg_input" time="1.938"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="821" name="test_unicode_vars" time="1.242"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="844" name="test_read_stderr" time="1.200"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="861" name="test_values_dbg" time="1.507"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="919" name="test_execute_events_dbg" time="1.807"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="973" name="test_run_doctest" time="1.399"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1008" name="test_mpl_backend_change" time="1.782"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1039" name="test_ctrl_c_dbg" time="0.002"><skipped message="It fails frequently in PyQt5 and our CIs" type="pytest.skip">spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py:1039: It fails frequently in PyQt5 and our CIs</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1069" name="test_clear_and_reset_magics_dbg" time="2.663"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1109" name="test_restart_kernel" time="7.618"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1130" name="test_load_kernel_file_from_id" time="1.321"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1149" name="test_load_kernel_file_from_location" time="1.341"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1169" name="test_load_kernel_file" time="1.468"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1196" name="test_sys_argv_clear" time="1.382"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1209" name="test_set_elapsed_time" time="4.311"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1240" name="test_stderr_file_is_removed_one_kernel" time="1.415"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1258" name="test_stderr_file_is_removed_two_kernels" time="1.543"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1285" name="test_stderr_file_remains_two_kernels" time="1.569"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1312" name="test_kernel_crash" time="48.601"><system-err>WARNING:traitlets:kernel died: 25.001896142959595
WARNING:traitlets:kernel restarted
WARNING:traitlets:kernel restarted
WARNING:traitlets:kernel died: 25.00407886505127
WARNING:traitlets:kernel died: 25.001539707183838
WARNING:traitlets:kernel died: 25.00507402420044
WARNING:traitlets:kernel died: 24.999913215637207
</system-err></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1344" name="test_remove_old_stderr_files" time="0.004"><skipped message="Only works on Windows" type="pytest.skip">spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py:1344: Only works on Windows</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1357" name="test_console_working_directory" time="1.464"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1371" name="test_console_complete" time="0.001"><skipped message="It only works on Linux with python 3." type="pytest.skip">spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py:1371: It only works on Linux with python 3.</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1507" name="test_pdb_multiline" time="2.895"><system-err>WARNING:traitlets:kernel died: 25.00341510772705
</system-err></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1537" name="test_pdb_ignore_lib[True]" time="48.045"><system-err>WARNING:traitlets:kernel died: 25.009464979171753
WARNING:traitlets:kernel died: 25.008897066116333
WARNING:traitlets:kernel died: 25.004798889160156
WARNING:traitlets:kernel died: 24.999903917312622
</system-err></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1537" name="test_pdb_ignore_lib[False]" time="2.155"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1571" name="test_calltip" time="0.000"><skipped message="Times out on macOS" type="pytest.skip">spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py:1571: Times out on macOS</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1617" name="test_kernel_kill" time="7.391"><system-err>WARNING:traitlets:kernel restarted
</system-err></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1648" name="test_wrong_std_module[True]" time="1.509"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1648" name="test_wrong_std_module[False]" time="1.515"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1691" name="test_kernel_restart_after_manual_restart_and_crash" time="13.949"><system-err>WARNING:traitlets:kernel restarted
</system-err></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1731" name="test_stderr_poll" time="3.280"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1745" name="test_startup_code_pdb" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py:1745: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1771" name="test_pdb_eventloop[inline]" time="1.341"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1771" name="test_pdb_eventloop[qt5]" time="1.448"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1771" name="test_pdb_eventloop[tk]" time="1.684"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1771" name="test_pdb_eventloop[osx]" time="1.416"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1799" name="test_pdb_without_comm" time="1.330"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1820" name="test_recursive_pdb" time="2.295"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1868" name="test_stop_pdb" time="1.866"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1896" name="test_code_cache" time="4.404"></testcase><testcase classname="spyder.plugins.ipythonconsole.tests.test_ipythonconsole" file="spyder/plugins/ipythonconsole/tests/test_ipythonconsole.py" line="1953" name="test_pdb_code_and_cmd_separation" time="1.505"></testcase><testcase classname="spyder.plugins.ipythonconsole.utils.tests.test_spyder_kernel" file="spyder/plugins/ipythonconsole/utils/tests/test_spyder_kernel.py" line="19" name="test_dont_preserve_pypath[True]" time="0.005"></testcase><testcase classname="spyder.plugins.ipythonconsole.utils.tests.test_spyder_kernel" file="spyder/plugins/ipythonconsole/utils/tests/test_spyder_kernel.py" line="19" name="test_dont_preserve_pypath[False]" time="0.005"></testcase><testcase classname="spyder.plugins.ipythonconsole.utils.tests.test_spyder_kernel" file="spyder/plugins/ipythonconsole/utils/tests/test_spyder_kernel.py" line="42" name="test_python_interpreter" time="0.007"></testcase><testcase classname="spyder.plugins.ipythonconsole.utils.tests.test_spyder_kernel" file="spyder/plugins/ipythonconsole/utils/tests/test_spyder_kernel.py" line="59" name="test_env_vars" time="0.000"><skipped message="It only makes sense on Windows and Python 2" type="pytest.skip">spyder/plugins/ipythonconsole/utils/tests/test_spyder_kernel.py:59: It only makes sense on Windows and Python 2</skipped></testcase><testcase classname="spyder.plugins.ipythonconsole.widgets.tests.test_kernelconnect" file="spyder/plugins/ipythonconsole/widgets/tests/test_kernelconnect.py" line="109" name="test_connection_dialog_remembers_input_with_ssh_passphrase" time="0.056"></testcase><testcase classname="spyder.plugins.ipythonconsole.widgets.tests.test_kernelconnect" file="spyder/plugins/ipythonconsole/widgets/tests/test_kernelconnect.py" line="137" name="test_connection_dialog_doesnt_remember_input_with_ssh_passphrase" time="0.037"></testcase><testcase classname="spyder.plugins.ipythonconsole.widgets.tests.test_kernelconnect" file="spyder/plugins/ipythonconsole/widgets/tests/test_kernelconnect.py" line="165" name="test_connection_dialog_remembers_input_with_password" time="0.047"></testcase><testcase classname="spyder.plugins.ipythonconsole.widgets.tests.test_kernelconnect" file="spyder/plugins/ipythonconsole/widgets/tests/test_kernelconnect.py" line="191" name="test_connection_dialog_doesnt_remember_input_with_password" time="0.038"></testcase><testcase classname="spyder.plugins.onlinehelp.tests.test_pydocgui" file="spyder/plugins/onlinehelp/tests/test_pydocgui.py" line="35" name="test_pydocbrowser" time="0.000"><skipped message="Does not work on Mac" type="pytest.skip">spyder/plugins/onlinehelp/tests/test_pydocgui.py:35: Does not work on Mac</skipped></testcase><testcase classname="spyder.plugins.onlinehelp.tests.test_pydocgui" file="spyder/plugins/onlinehelp/tests/test_pydocgui.py" line="43" name="test_get_pydoc[lib0]" time="0.000"><skipped message="Does not work on Mac" type="pytest.skip">spyder/plugins/onlinehelp/tests/test_pydocgui.py:43: Does not work on Mac</skipped></testcase><testcase classname="spyder.plugins.onlinehelp.tests.test_pydocgui" file="spyder/plugins/onlinehelp/tests/test_pydocgui.py" line="43" name="test_get_pydoc[lib1]" time="0.001"><skipped message="Does not work on Mac" type="pytest.skip">spyder/plugins/onlinehelp/tests/test_pydocgui.py:43: Does not work on Mac</skipped></testcase><testcase classname="spyder.plugins.outlineexplorer.tests.test_widgets" file="spyder/plugins/outlineexplorer/tests/test_widgets.py" line="162" name="test_outline_explorer[text]" time="0.190"></testcase><testcase classname="spyder.plugins.outlineexplorer.tests.test_widgets" file="spyder/plugins/outlineexplorer/tests/test_widgets.py" line="192" name="test_go_to_cursor_position" time="0.174"></testcase><testcase classname="spyder.plugins.outlineexplorer.tests.test_widgets" file="spyder/plugins/outlineexplorer/tests/test_widgets.py" line="212" name="test_follow_cursor" time="0.180"></testcase><testcase classname="spyder.plugins.outlineexplorer.tests.test_widgets" file="spyder/plugins/outlineexplorer/tests/test_widgets.py" line="235" name="test_go_to_cursor_position_with_new_file" time="0.176"></testcase><testcase classname="spyder.plugins.outlineexplorer.tests.test_widgets" file="spyder/plugins/outlineexplorer/tests/test_widgets.py" line="254" name="test_go_to_last_item" time="0.177"></testcase><testcase classname="spyder.plugins.outlineexplorer.tests.test_widgets" file="spyder/plugins/outlineexplorer/tests/test_widgets.py" line="277" name="test_code_cell_grouping" time="0.000"><skipped message="Cell support is disabled temporarily" type="pytest.skip">spyder/plugins/outlineexplorer/tests/test_widgets.py:277: Cell support is disabled temporarily</skipped></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="123" name="test_save_figure_to_file[image/png-.png]" time="0.116"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="123" name="test_save_figure_to_file[image/svg+xml-.svg]" time="0.121"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="123" name="test_save_figure_to_file[image/svg+xml-.png]" time="0.111"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="148" name="test_save_all_figures[image/png]" time="0.239"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="148" name="test_save_all_figures[image/svg+xml]" time="0.215"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="179" name="test_get_unique_figname" time="0.002"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="206" name="test_close_current_figure[image/png]" time="0.166"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="206" name="test_close_current_figure[image/svg+xml]" time="0.145"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="228" name="test_close_all_figures[image/png]" time="0.233"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="228" name="test_close_all_figures[image/svg+xml]" time="0.198"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="245" name="test_close_one_thumbnail[image/png]" time="0.376"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="245" name="test_close_one_thumbnail[image/svg+xml]" time="0.338"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="264" name="test_go_prev_next_thumbnail[image/png]" time="0.217"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="264" name="test_go_prev_next_thumbnail[image/svg+xml]" time="0.206"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="289" name="test_scroll_to_item" time="3.011"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="312" name="test_scroll_down_to_newest_plot" time="4.541"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="340" name="test_mouse_clicking_thumbnails[image/png]" time="0.260"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="340" name="test_mouse_clicking_thumbnails[image/svg+xml]" time="0.217"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="354" name="test_save_thumbnails[image/png]" time="0.233"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="354" name="test_save_thumbnails[image/svg+xml]" time="0.211"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="378" name="test_close_thumbnails[image/png]" time="0.238"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="378" name="test_close_thumbnails[image/svg+xml]" time="0.411"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="395" name="test_copy_png_to_clipboard" time="0.237"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="412" name="test_copy_svg_to_clipboard" time="0.230"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="429" name="test_zoom_figure_viewer[image/png]" time="0.111"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="429" name="test_zoom_figure_viewer[image/svg+xml]" time="0.105"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="466" name="test_autofit_figure_viewer[image/png]" time="0.118"></testcase><testcase classname="spyder.plugins.plots.widgets.tests.test_plots_widgets" file="spyder/plugins/plots/widgets/tests/test_plots_widgets.py" line="466" name="test_autofit_figure_viewer[image/svg+xml]" time="0.114"></testcase><testcase classname="spyder.plugins.profiler.tests.test_profiler" file="spyder/plugins/profiler/tests/test_profiler.py" line="42" name="test_format_measure" time="0.029"></testcase><testcase classname="spyder.plugins.profiler.tests.test_profiler" file="spyder/plugins/profiler/tests/test_profiler.py" line="63" name="test_color_string" time="0.030"></testcase><testcase classname="spyder.plugins.profiler.tests.test_profiler" file="spyder/plugins/profiler/tests/test_profiler.py" line="78" name="test_format_output" time="0.031"></testcase><testcase classname="spyder.plugins.profiler.tests.test_profiler_config_dialog" file="spyder/plugins/profiler/tests/test_profiler_config_dialog.py" line="16" name="test_config_dialog[config_dialog0]" time="0.135"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;text_color&quot; not found in section &quot;profiler&quot; of configuration!
</system-out></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="100" name="test_open_project[\u6e2c\u8a66]" time="1.051"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="100" name="test_open_project[\u0627\u062e\u062a\u0628\u0627\u0631]" time="1.039"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="100" name="test_open_project[test_dir]" time="0.045"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="116" name="test_delete_project[\u6e2c\u8a66]" time="1.046"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="116" name="test_delete_project[\u0627\u062e\u062a\u0628\u0627\u0631]" time="0.049"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="116" name="test_delete_project[test_dir]" time="1.042"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="134" name="test_close_project_sets_visible_config[True]" time="1.057"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="134" name="test_close_project_sets_visible_config[False]" time="1.051"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="150" name="test_closing_plugin_sets_visible_config[True]" time="1.052"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="150" name="test_closing_plugin_sets_visible_config[False]" time="1.049"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="169" name="test_open_project_uses_visible_config[True]" time="0.043"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="169" name="test_open_project_uses_visible_config[False]" time="0.039"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="178" name="test_switch_to_plugin[True]" time="0.045"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="178" name="test_switch_to_plugin[False]" time="0.050"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="189" name="test_set_get_project_filenames_when_closing_no_files" time="0.036"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="215" name="test_set_get_project_filenames_when_closing" time="1.039"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="245" name="test_set_get_project_filenames_when_switching" time="0.042"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="277" name="test_recent_projects_menu_action" time="0.054"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="308" name="test_project_explorer_tree_root" time="0.065"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="346" name="test_filesystem_notifications" time="0.130"></testcase><testcase classname="spyder.plugins.projects.tests.test_plugin" file="spyder/plugins/projects/tests/test_plugin.py" line="438" name="test_loaded_and_closed_signals" time="0.035"></testcase><testcase classname="spyder.plugins.projects.utils.tests.test_cookie" file="spyder/plugins/projects/utils/tests/test_cookie.py" line="24" name="test_load_cookiecutter_project_config" time="0.003"></testcase><testcase classname="spyder.plugins.projects.utils.tests.test_cookie" file="spyder/plugins/projects/utils/tests/test_cookie.py" line="42" name="test_load_cookiecutter_project_hooks" time="0.002"></testcase><testcase classname="spyder.plugins.projects.utils.tests.test_cookie" file="spyder/plugins/projects/utils/tests/test_cookie.py" line="67" name="test_generate_cookiecutter_project_defaults" time="0.038"></testcase><testcase classname="spyder.plugins.projects.utils.tests.test_cookie" file="spyder/plugins/projects/utils/tests/test_cookie.py" line="89" name="test_generate_cookiecutter_project_extra_content" time="0.003"></testcase><testcase classname="spyder.plugins.projects.utils.tests.test_cookie" file="spyder/plugins/projects/utils/tests/test_cookie.py" line="112" name="test_generate_cookiecutter_project_exception" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_configdialog" file="spyder/plugins/projects/widgets/tests/test_configdialog.py" line="28" name="test_projects_preferences" time="0.005"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_project" file="spyder/plugins/projects/widgets/tests/test_project.py" line="36" name="test_empty_project" time="3.063"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_project" file="spyder/plugins/projects/widgets/tests/test_project.py" line="50" name="test_set_load_recent_files" time="0.003"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_project_explorer" file="spyder/plugins/projects/widgets/tests/test_project_explorer.py" line="34" name="test_change_directory_in_project_explorer" time="0.026"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_project_explorer" file="spyder/plugins/projects/widgets/tests/test_project_explorer.py" line="58" name="test_project_explorer" time="0.063"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_projectdialog" file="spyder/plugins/projects/widgets/tests/test_projectdialog.py" line="33" name="test_project_dialog" time="0.063"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_projectdialog" file="spyder/plugins/projects/widgets/tests/test_projectdialog.py" line="39" name="test_projectdialog_location" time="0.000"><skipped message="Specific to Windows platform" type="pytest.skip">spyder/plugins/projects/widgets/tests/test_projectdialog.py:39: Specific to Windows platform</skipped></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="29" name="test_cookiecutter_widget_empty" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="38" name="test_cookiecutter_widget_checkbox_yes[opt-y]" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="38" name="test_cookiecutter_widget_checkbox_yes[opt-yes]" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="38" name="test_cookiecutter_widget_checkbox_yes[opt-true]" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="38" name="test_cookiecutter_widget_checkbox_yes[opt-YES]" time="0.005"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="38" name="test_cookiecutter_widget_checkbox_yes[opt-True]" time="0.006"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="54" name="test_cookiecutter_widget_checkbox_no[opt-n]" time="0.005"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="54" name="test_cookiecutter_widget_checkbox_no[opt-no]" time="0.005"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="54" name="test_cookiecutter_widget_checkbox_no[opt-false]" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="54" name="test_cookiecutter_widget_checkbox_no[opt-NO]" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="54" name="test_cookiecutter_widget_checkbox_no[opt-False]" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="70" name="test_cookiecutter_widget_list[opt-value0]" time="0.005"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="81" name="test_cookiecutter_widget_dict[opt-value0]" time="0.005"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="92" name="test_cookiecutter_widget_private_variables[_nope-nothing]" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="92" name="test_cookiecutter_widget_private_variables[__nope_2-nothing]" time="0.004"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="102" name="test_cookiecutter_widget_render" time="0.005"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="111" name="test_cookiecutter_widget_no_render" time="0.006"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="123" name="test_cookiecutter_widget_validate_passes" time="0.132"></testcase><testcase classname="spyder.plugins.projects.widgets.tests.test_qcookiecutter" file="spyder/plugins/projects/widgets/tests/test_qcookiecutter.py" line="137" name="test_cookiecutter_widget_validate_fails" time="0.123"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[None]" time="0.006"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[Script]" time="0.006"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[Working]" time="0.006"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[Project]" time="0.006"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[Home]" time="0.005"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[Script &amp; Home]" time="0.006"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[Working &amp; Project]" time="0.007"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[Script &amp; Working]" time="0.005"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[Project &amp; Home]" time="0.006"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="135" name="test_get_pylintrc_path[All]" time="0.007"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="147" name="test_pylint_widget_noproject" time="0.780"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=32, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;5.56&apos;, &apos;4.44&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 5, &apos; Constant name &quot;e&quot; doesn\&apos;t conform to UPPER_CASE naming style&apos;, &apos;C0103&apos;, &apos;invalid-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[None]" time="0.679"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=33, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;5.56&apos;, &apos;5.56&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 5, &apos; Constant name &quot;e&quot; doesn\&apos;t conform to UPPER_CASE naming style&apos;, &apos;C0103&apos;, &apos;invalid-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[Script]" time="0.674"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=33, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;4.44&apos;, &apos;5.56&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 6, &apos; Black listed name &quot;SCRIPT_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;), (&apos;test_script&apos;, 10, &apos; Black listed name &quot;ALL_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[Working]" time="0.678"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=34, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;4.44&apos;, &apos;4.44&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 7, &apos; Black listed name &quot;WORKING_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;), (&apos;test_script&apos;, 10, &apos; Black listed name &quot;ALL_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[Project]" time="0.681"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=35, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;4.44&apos;, &apos;4.44&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 8, &apos; Black listed name &quot;PROJECT_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;), (&apos;test_script&apos;, 10, &apos; Black listed name &quot;ALL_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[Home]" time="0.675"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=35, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;4.44&apos;, &apos;4.44&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 9, &apos; Black listed name &quot;HOME_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;), (&apos;test_script&apos;, 10, &apos; Black listed name &quot;ALL_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[Script &amp; Home]" time="0.638"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=36, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;4.44&apos;, &apos;4.44&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 6, &apos; Black listed name &quot;SCRIPT_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;), (&apos;test_script&apos;, 10, &apos; Black listed name &quot;ALL_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[Working &amp; Project]" time="0.641"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=37, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;4.44&apos;, &apos;4.44&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 7, &apos; Black listed name &quot;WORKING_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;), (&apos;test_script&apos;, 10, &apos; Black listed name &quot;ALL_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[Script &amp; Working]" time="0.689"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=37, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;4.44&apos;, &apos;4.44&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 6, &apos; Black listed name &quot;SCRIPT_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;), (&apos;test_script&apos;, 10, &apos; Black listed name &quot;ALL_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[Project &amp; Home]" time="0.646"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=38, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;4.44&apos;, &apos;4.44&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 8, &apos; Black listed name &quot;PROJECT_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;), (&apos;test_script&apos;, 10, &apos; Black listed name &quot;ALL_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="165" name="test_pylint_widget_pylintrc[All]" time="0.629"><system-out>(0, (time.struct_time(tm_year=2020, tm_mon=11, tm_mday=19, tm_hour=5, tm_min=38, tm_sec=39, tm_wday=3, tm_yday=324, tm_isdst=0), &apos;4.44&apos;, &apos;4.44&apos;, {&apos;C:&apos;: [(&apos;test_script&apos;, 6, &apos; Black listed name &quot;SCRIPT_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;), (&apos;test_script&apos;, 10, &apos; Black listed name &quot;ALL_DIR&quot;&apos;, &apos;C0102&apos;, &apos;blacklisted-name&apos;)], &apos;R:&apos;: [], &apos;W:&apos;: [(&apos;test_script&apos;, 2, &apos; Unused import math&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 3, &apos; Unused import os&apos;, &apos;W0611&apos;, &apos;unused-import&apos;), (&apos;test_script&apos;, 4, &apos; Unused import sys&apos;, &apos;W0611&apos;, &apos;unused-import&apos;)], &apos;E:&apos;: []}))
</system-out></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint" file="spyder/plugins/pylint/tests/test_pylint.py" line="195" name="test_pylint_max_history_conf" time="0.023"></testcase><testcase classname="spyder.plugins.pylint.tests.test_pylint_config_dialog" file="spyder/plugins/pylint/tests/test_pylint_config_dialog.py" line="29" name="test_config_dialog[config_dialog0]" time="0.097"><system-err>Traceback (most recent call last):
  File &quot;/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/preferences/tests/conftest.py&quot;, line 88, in __init__
    plugin = plugin(parent=self._main, configuration=CONF)
TypeError: __init__() got an unexpected keyword argument &apos;configuration&apos;
</system-err></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="59" name="test_shortcuts" time="0.154"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="69" name="test_shortcut_in_conf_is_filtered_with_shortcut_data" time="0.125"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="87" name="test_shortcuts_filtering" time="0.184"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="115" name="test_shortcut_filtering_context" time="0.132"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="135" name="test_clear_shortcut" time="0.165"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="145" name="test_press_new_sequence" time="0.169"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="158" name="test_press_new_compound_sequence" time="0.170"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="176" name="test_clear_back_new_sequence" time="0.192"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="207" name="test_sequence_conflict" time="0.178"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="228" name="test_sequence_single_key" time="0.171"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="256" name="test_set_sequence_to_default" time="0.163"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts" file="spyder/plugins/shortcuts/tests/test_shortcuts.py" line="271" name="test_invalid_char_in_sequence" time="0.168"></testcase><testcase classname="spyder.plugins.shortcuts.tests.test_shortcuts_config_dialog" file="spyder/plugins/shortcuts/tests/test_shortcuts_config_dialog.py" line="16" name="test_config_dialog[config_dialog0]" time="0.196"></testcase><testcase classname="spyder.plugins.shortcuts.widgets.tests.test_summary" file="spyder/plugins/shortcuts/widgets/tests/test_summary.py" line="28" name="test_shortcutssummary" time="0.218"></testcase><testcase classname="spyder.plugins.shortcuts.widgets.tests.test_summary" file="spyder/plugins/shortcuts/widgets/tests/test_summary.py" line="41" name="test_shortcutssummary_texts" time="0.313"></testcase><testcase classname="spyder.plugins.variableexplorer.tests.test_variableexplorer" file="spyder/plugins/variableexplorer/tests/test_variableexplorer.py" line="22" name="test_get_settings" time="0.002"></testcase><testcase classname="spyder.plugins.variableexplorer.tests.test_variableexplorer_config_dialog" file="spyder/plugins/variableexplorer/tests/test_variableexplorer_config_dialog.py" line="16" name="test_config_dialog[config_dialog0]" time="0.084"><system-err>Traceback (most recent call last):
  File &quot;/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/preferences/tests/conftest.py&quot;, line 88, in __init__
    plugin = plugin(parent=self._main, configuration=CONF)
TypeError: __init__() got an unexpected keyword argument &apos;configuration&apos;
</system-err></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.objectexplorer.tests.test_objectexplorer" file="spyder/plugins/variableexplorer/widgets/objectexplorer/tests/test_objectexplorer.py" line="41" name="test_objectexplorer" time="0.019"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.objectexplorer.tests.test_objectexplorer" file="spyder/plugins/variableexplorer/widgets/objectexplorer/tests/test_objectexplorer.py" line="108" name="test_objectexplorer_collection_types[params0]" time="0.069"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.objectexplorer.tests.test_objectexplorer" file="spyder/plugins/variableexplorer/widgets/objectexplorer/tests/test_objectexplorer.py" line="108" name="test_objectexplorer_collection_types[params1]" time="0.051"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.objectexplorer.tests.test_objectexplorer" file="spyder/plugins/variableexplorer/widgets/objectexplorer/tests/test_objectexplorer.py" line="108" name="test_objectexplorer_collection_types[params2]" time="0.044"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.objectexplorer.tests.test_objectexplorer" file="spyder/plugins/variableexplorer/widgets/objectexplorer/tests/test_objectexplorer.py" line="108" name="test_objectexplorer_collection_types[params3]" time="0.058"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.objectexplorer.tests.test_objectexplorer" file="spyder/plugins/variableexplorer/widgets/objectexplorer/tests/test_objectexplorer.py" line="108" name="test_objectexplorer_collection_types[params4]" time="0.121"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.objectexplorer.tests.test_objectexplorer" file="spyder/plugins/variableexplorer/widgets/objectexplorer/tests/test_objectexplorer.py" line="108" name="test_objectexplorer_collection_types[params5]" time="0.055"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.objectexplorer.tests.test_objectexplorer" file="spyder/plugins/variableexplorer/widgets/objectexplorer/tests/test_objectexplorer.py" line="141" name="test_objectexplorer_types[params0]" time="0.051"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.objectexplorer.tests.test_objectexplorer" file="spyder/plugins/variableexplorer/widgets/objectexplorer/tests/test_objectexplorer.py" line="141" name="test_objectexplorer_types[params1]" time="0.026"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="61" name="test_object_arrays" time="0.049"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="67" name="test_object_arrays_display" time="0.044"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="78" name="test_attribute_errors" time="0.600"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="90" name="test_type_errors" time="0.039"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="103" name="test_arrayeditor_format" time="0.036"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="119" name="test_arrayeditor_with_inf_array" time="0.036"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="127" name="test_arrayeditor_with_string_array" time="0.037"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="132" name="test_arrayeditor_with_unicode_array" time="0.038"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="137" name="test_arrayeditor_with_masked_array" time="0.049"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="142" name="test_arrayeditor_with_record_array" time="0.047"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="148" name="test_arrayeditor_with_record_array_with_titles" time="0.000"><skipped message="It segfaults sometimes on Linux" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py:148: It segfaults sometimes on Linux</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="156" name="test_arrayeditor_with_float_array" time="0.045"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="162" name="test_arrayeditor_with_complex_array" time="0.043"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="170" name="test_arrayeditor_with_bool_array" time="0.039"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="175" name="test_arrayeditor_with_int8_array" time="0.038"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="180" name="test_arrayeditor_with_float16_array" time="0.043"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="185" name="test_arrayeditor_with_3d_array" time="0.051"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="193" name="test_arrayeditor_with_empty_3d_array" time="0.118"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="200" name="test_arrayeditor_edit_1d_array" time="0.045"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="219" name="test_arrayeditor_edit_2d_array" time="0.001"><skipped message="It fails on macOS" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py:219: It fails on macOS</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="241" name="test_arrayeditor_edit_complex_array" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py:241: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="267" name="test_arraymodel_set_data_overflow" time="0.002"><system-out>OverflowError: Python int too large to convert to C long
OverflowError: Python int too large to convert to C long
</system-out></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_arrayeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py" line="294" name="test_arrayeditor_edit_overflow" time="0.001"><skipped message="It fails on macOS" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_arrayeditor.py:294: It fails on macOS</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="85" name="test_dataframe_to_type" time="0.171"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="110" name="test_dataframe_datetimeindex" time="0.012"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="122" name="test_dataframe_simpleindex" time="0.020"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="136" name="test_dataframe_simpleindex_custom_columns" time="0.013"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="151" name="test_dataframe_multiindex" time="0.015"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="180" name="test_header_bom" time="0.013"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="190" name="test_header_encoding" time="0.013"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="212" name="test_dataframemodel_basic" time="0.002"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="222" name="test_dataframemodel_sort" time="0.002"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="233" name="test_dataframemodel_sort_is_stable" time="0.002"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="245" name="test_dataframemodel_max_min_col_update" time="0.001"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="250" name="test_dataframemodel_max_min_col_update_constant" time="0.001"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="256" name="test_dataframemodel_with_timezone_aware_timestamps" time="0.002"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="263" name="test_dataframemodel_with_categories" time="0.002"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="270" name="test_dataframemodel_get_bgcolor_with_numbers" time="0.001"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="285" name="test_dataframemodel_get_bgcolor_with_numbers_using_global_max" time="0.001"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="301" name="test_dataframemodel_get_bgcolor_with_string" time="0.001"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="309" name="test_dataframemodel_get_bgcolor_with_object" time="0.001"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="317" name="test_dataframemodel_get_bgcolor_with_missings" time="0.003"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="337" name="test_dataframemodel_with_format_percent_d_and_nan" time="0.001"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="350" name="test_change_format_emits_signal" time="0.009"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="361" name="test_change_format_with_format_not_starting_with_percent" time="0.016"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="375" name="test_dataframeeditor_with_various_indexes" time="0.088"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="418" name="test_dataframeeditor_with_OutOfBoundsDatetime" time="0.002"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="428" name="test_sort_dataframe_with_duplicate_column" time="0.001"><skipped message="It segfaults too much on Linux" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py:428: It segfaults too much on Linux</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="445" name="test_sort_dataframe_with_category_dtypes" time="0.000"><skipped message="It segfaults too much on Linux" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py:445: It segfaults too much on Linux</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="462" name="test_dataframemodel_set_data_overflow" time="0.002"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="496" name="test_dataframeeditor_edit_overflow" time="0.000"><skipped message="It fails on macOS" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py:496: It fails on macOS</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="552" name="test_dataframemodel_set_data_complex" time="0.003"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="580" name="test_dataframeeditor_edit_complex" time="0.000"><skipped message="It fails on macOS" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py:580: It fails on macOS</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="630" name="test_dataframemodel_set_data_bool" time="0.006"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="655" name="test_dataframeeditor_edit_bool" time="0.000"><skipped message="It fails on macOS" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py:655: It fails on macOS</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="697" name="test_non_ascii_index" time="0.009"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_dataframeeditor" file="spyder/plugins/variableexplorer/widgets/tests/test_dataframeeditor.py" line="716" name="test_no_convert_strings_to_unicode" time="0.010"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_importwizard" file="spyder/plugins/variableexplorer/widgets/tests/test_importwizard.py" line="26" name="test_importwizard" time="0.094"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_namespacebrowser" file="spyder/plugins/variableexplorer/widgets/tests/test_namespacebrowser.py" line="32" name="test_setup_sets_dataframe_format" time="0.007"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_namespacebrowser" file="spyder/plugins/variableexplorer/widgets/tests/test_namespacebrowser.py" line="42" name="test_automatic_column_width" time="0.007"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_namespacebrowser" file="spyder/plugins/variableexplorer/widgets/tests/test_namespacebrowser.py" line="68" name="test_sort_by_column" time="0.049"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_namespacebrowser" file="spyder/plugins/variableexplorer/widgets/tests/test_namespacebrowser.py" line="113" name="test_keys_sorted_and_sort_with_large_rows" time="0.075"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_namespacebrowser" file="spyder/plugins/variableexplorer/widgets/tests/test_namespacebrowser.py" line="165" name="test_filtering_with_large_rows" time="0.131"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_texteditor" file="spyder/plugins/variableexplorer/widgets/tests/test_texteditor.py" line="32" name="test_texteditor" time="0.028"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_texteditor" file="spyder/plugins/variableexplorer/widgets/tests/test_texteditor.py" line="41" name="test_texteditor_setup_and_check" time="0.000"><skipped message="It makes no sense in Python 3" type="pytest.skip">spyder/plugins/variableexplorer/widgets/tests/test_texteditor.py:41: It makes no sense in Python 3</skipped></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_texteditor" file="spyder/plugins/variableexplorer/widgets/tests/test_texteditor.py" line="51" name="test_title[\xf1]" time="0.031"></testcase><testcase classname="spyder.plugins.variableexplorer.widgets.tests.test_texteditor" file="spyder/plugins/variableexplorer/widgets/tests/test_texteditor.py" line="51" name="test_title[r]" time="0.031"></testcase><testcase classname="spyder.plugins.workingdirectory.tests.test_workingdirectory" file="spyder/plugins/workingdirectory/tests/test_workingdirectory.py" line="43" name="test_basic_initialization" time="0.013"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;history&quot; not found in section &quot;workingdir&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;workdir&quot; not found in section &quot;workingdir&quot; of configuration!
</system-out></testcase><testcase classname="spyder.plugins.workingdirectory.tests.test_workingdirectory" file="spyder/plugins/workingdirectory/tests/test_workingdirectory.py" line="51" name="test_get_workingdir" time="0.009"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;history&quot; not found in section &quot;workingdir&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;workdir&quot; not found in section &quot;workingdir&quot; of configuration!
</system-out></testcase><testcase classname="spyder.plugins.workingdirectory.tests.test_workingdirectory" file="spyder/plugins/workingdirectory/tests/test_workingdirectory.py" line="59" name="test_get_workingdir_startup" time="0.012"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;history&quot; not found in section &quot;workingdir&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;workdir&quot; not found in section &quot;workingdir&quot; of configuration!
</system-out></testcase><testcase classname="spyder.plugins.workingdirectory.tests.test_workingdirectory_config_dialog" file="spyder/plugins/workingdirectory/tests/test_workingdirectory_config_dialog.py" line="16" name="test_config_dialog[config_dialog0]" time="0.099"><system-out>
spyder.api.plugins.options_from_conf
Warning: option &quot;history&quot; not found in section &quot;workingdir&quot; of configuration!

spyder.api.plugins.options_from_conf
Warning: option &quot;workdir&quot; not found in section &quot;workingdir&quot; of configuration!
</system-out></testcase><testcase classname="spyder.preferences.tests.test_config_dialog" file="spyder/preferences/tests/test_config_dialog.py" line="12" name="test_config_dialog_save_to_conf" time="0.104"></testcase><testcase classname="spyder.preferences.tests.test_layoutdialog" file="spyder/preferences/tests/test_layoutdialog.py" line="35" name="test_layout_settings_dialog[layout_settings_dialog0]" time="0.053"></testcase><testcase classname="spyder.preferences.tests.test_layoutdialog" file="spyder/preferences/tests/test_layoutdialog.py" line="46" name="test_layout_save_dialog[layout_save_dialog0]" time="0.049"></testcase><testcase classname="spyder.tests.test_dependencies_in_sync" file="spyder/tests/test_dependencies_in_sync.py" line="194" name="test_dependencies_for_binder_in_sync" time="0.007"></testcase><testcase classname="spyder.tests.test_dependencies_in_sync" file="spyder/tests/test_dependencies_in_sync.py" line="220" name="test_dependencies_for_spyder_dialog_in_sync" time="0.001"></testcase><testcase classname="spyder.tests.test_dependencies_in_sync" file="spyder/tests/test_dependencies_in_sync.py" line="246" name="test_dependencies_for_spyder_setup_install_requires_in_sync" time="0.001"></testcase><testcase classname="spyder.tests.test_dependencies_in_sync" file="spyder/tests/test_dependencies_in_sync.py" line="269" name="test_dependencies_for_spyder_setup_extras_requires_in_sync" time="0.001"><system-out>{&apos;coverage&apos;: &apos;&lt;5.0&apos;, &apos;cython&apos;: None, &apos;flaky&apos;: None, &apos;matplotlib&apos;: None, &apos;mock&apos;: None, &apos;pandas&apos;: None, &apos;pillow&apos;: None, &apos;pytest&apos;: &apos;&lt;5.0&apos;, &apos;pytest-cov&apos;: None, &apos;pytest-faulthandler&apos;: &apos;&lt;2.0&apos;, &apos;pytest-lazy-fixture&apos;: None, &apos;pytest-mock&apos;: None, &apos;pytest-ordering&apos;: None, &apos;pytest-qt&apos;: None, &apos;pyyaml&apos;: None, &apos;scipy&apos;: None, &apos;sympy&apos;: None}
</system-out></testcase><testcase classname="spyder.tests.test_dont_use" file="spyder/tests/test_dont_use.py" line="15" name="test_dont_use[isinstance\\(.*,.*str\\)-exclude_patterns0-Don&apos;t use builtin isinstance() function,use spyder.py3compat.is_text_string() instead]" time="0.784"></testcase><testcase classname="spyder.tests.test_dont_use" file="spyder/tests/test_dont_use.py" line="15" name="test_dont_use[^[\\s\\#]*\\bprint\\(((?!file=).)*\\)-exclude_patterns1-message1]" time="0.554"></testcase><testcase classname="spyder.tests.test_dont_use" file="spyder/tests/test_dont_use.py" line="15" name="test_dont_use[^[\\s\\#]*\\bprint\\s+(?!&gt;&gt;)((?!#).)*-exclude_patterns2-message2]" time="0.537"></testcase><testcase classname="spyder.tests.test_dont_use" file="spyder/tests/test_dont_use.py" line="57" name="test_check_charaters_translation[\uff05]" time="0.240"></testcase><testcase classname="spyder.utils.introspection.tests.test_modulecompletion" file="spyder/utils/introspection/tests/test_modulecompletion.py" line="21" name="test_module_completion" time="0.000"><skipped message="It&apos;s very slow in this combo" type="pytest.skip">spyder/utils/introspection/tests/test_modulecompletion.py:21: It&apos;s very slow in this combo</skipped></testcase><testcase classname="spyder.utils.tests.test_bsdsocket" file="spyder/utils/tests/test_bsdsocket.py" line="20" name="test_bsdsockets" time="0.002"></testcase><testcase classname="spyder.utils.tests.test_conda" file="spyder/utils/tests/test_conda.py" line="26" name="test_add_quotes" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_conda" file="spyder/utils/tests/test_conda.py" line="34" name="test_get_conda_activation_script" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_conda" file="spyder/utils/tests/test_conda.py" line="42" name="test_get_conda_env_path" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_conda" file="spyder/utils/tests/test_conda.py" line="50" name="test_get_conda_root_prefix" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_encoding" file="spyder/utils/tests/test_encoding.py" line="56" name="test_permissions" time="0.039"></testcase><testcase classname="spyder.utils.tests.test_encoding" file="spyder/utils/tests/test_encoding.py" line="76" name="test_timestamp" time="0.036"><failure message="assert 1605760727.509178 == 1605760727.509177
  -1605760727.509178
  +1605760727.509177">tmpdir = local(&apos;/private/var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/pytest-of-guillaume.haben/pytest-589/test_timestamp0&apos;)

    @flaky(max_runs=10)
    def test_timestamp(tmpdir):
        &quot;&quot;&quot;Check that the modification timestamp is preserved.&quot;&quot;&quot;
        tmp_file = tmpdir.mkdir(&quot;timestamp&quot;).join(&apos;test_file.txt&apos;)
        tmp_file = to_text_string(tmp_file)
    
        # Write a file
        write(&quot;Test text&quot;, tmp_file)
        st = os.stat(tmp_file)
        actual_creation_time = st.st_atime
    
        # Write the file and check that creation time is preserved.
        write(&apos;New text&apos;, tmp_file)
        creation_time = os.stat(tmp_file).st_atime
&gt;       assert actual_creation_time == creation_time
E       assert 1605760727.509178 == 1605760727.509177
E         -1605760727.509178
E         +1605760727.509177

/Users/guillaume.haben/Documents/Work/projects/pythonDataset/projects/spyder/spyder/utils/tests/test_encoding.py:91: AssertionError</failure></testcase><testcase classname="spyder.utils.tests.test_encoding" file="spyder/utils/tests/test_encoding.py" line="93" name="test_is_text_file" time="0.003"></testcase><testcase classname="spyder.utils.tests.test_encoding" file="spyder/utils/tests/test_encoding.py" line="99" name="test_files_encodings[utf-8-utf-8.txt]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_encoding" file="spyder/utils/tests/test_encoding.py" line="99" name="test_files_encodings[windows-1252-windows-1252.txt]" time="0.002"></testcase><testcase classname="spyder.utils.tests.test_encoding" file="spyder/utils/tests/test_encoding.py" line="99" name="test_files_encodings[ascii-ascii.txt]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_encoding" file="spyder/utils/tests/test_encoding.py" line="99" name="test_files_encodings[Big5-Big5.txt]" time="0.002"></testcase><testcase classname="spyder.utils.tests.test_encoding" file="spyder/utils/tests/test_encoding.py" line="99" name="test_files_encodings[KOI8-R-KOI8-R.txt]" time="0.002"></testcase><testcase classname="spyder.utils.tests.test_environ" file="spyder/utils/tests/test_environ.py" line="41" name="test_environ" time="0.096"></testcase><testcase classname="spyder.utils.tests.test_environ" file="spyder/utils/tests/test_environ.py" line="47" name="test_clean_env" time="0.000"><skipped message="This tests only applies to Python 2." type="pytest.skip">spyder/utils/tests/test_environ.py:47: This tests only applies to Python 2.</skipped></testcase><testcase classname="spyder.utils.tests.test_icons" file="spyder/utils/tests/test_icons.py" line="17" name="test_icon_mapping" time="0.011"></testcase><testcase classname="spyder.utils.tests.test_misc" file="spyder/utils/tests/test_misc.py" line="22" name="test_get_common_path" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_misc" file="spyder/utils/tests/test_misc.py" line="40" name="test_add_pathlist_to_PYTHONPATH[True]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_misc" file="spyder/utils/tests/test_misc.py" line="40" name="test_add_pathlist_to_PYTHONPATH[False]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="72" name="test_is_valid_w_interpreter" time="0.000"><skipped message="It only runs in CI services and Linux does not have pythonw executables." type="pytest.skip">spyder/utils/tests/test_programs.py:72: It only runs in CI services and Linux does not have pythonw executables.</skipped></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="80" name="test_run_python_script_in_terminal" time="2.234"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="166" name="test_find_program" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="171" name="test_shell_split" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="178" name="test_check_version" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="185" name="test_is_module_installed" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="192" name="test_is_module_installed_with_custom_interpreter" time="1.003"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="200" name="test_get_temp_dir_ensure_dir_exists" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="214" name="test_clean_win_application_path" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="223" name="test_get_installed_apps_and_icons" time="0.715"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="233" name="test_parse_linux_desktop_entry" time="0.000"><skipped message="Test for linux only" type="pytest.skip">spyder/utils/tests/test_programs.py:233: Test for linux only</skipped></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="248" name="test_open_files_with_application" time="0.138"><system-err>The application /private/var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/pytest-of-guillaume.haben/pytest-589/test_open_files_with_applicati0/some-new app.app cannot be opened because its executable is missing.
</system-err></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="285" name="test_get_package_version" time="0.004"></testcase><testcase classname="spyder.utils.tests.test_programs" file="spyder/utils/tests/test_programs.py" line="290" name="test_get_module_version" time="0.004"></testcase><testcase classname="spyder.utils.tests.test_sourcecode" file="spyder/utils/tests/test_sourcecode.py" line="14" name="test_normalize_eols" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_sourcecode" file="spyder/utils/tests/test_sourcecode.py" line="19" name="test_get_primary_at" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_sourcecode" file="spyder/utils/tests/test_sourcecode.py" line="24" name="test_get_identifiers" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_sourcecode" file="spyder/utils/tests/test_sourcecode.py" line="30" name="test_split_source" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_sourcecode" file="spyder/utils/tests/test_sourcecode.py" line="37" name="test_path_components" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_sourcecode" file="spyder/utils/tests/test_sourcecode.py" line="46" name="test_differentiate_prefix" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_sourcecode" file="spyder/utils/tests/test_sourcecode.py" line="60" name="test_get_same_name_files" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_sourcecode" file="spyder/utils/tests/test_sourcecode.py" line="79" name="test_shortest_path" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_sourcecode" file="spyder/utils/tests/test_sourcecode.py" line="90" name="test_disambiguate_fname" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_stringmatching" file="spyder/utils/tests/test_stringmatching.py" line="21" name="test_stringmatching_full" time="0.003"></testcase><testcase classname="spyder.utils.tests.test_stringmatching" file="spyder/utils/tests/test_stringmatching.py" line="171" name="test_stringmatching_order_filter" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="23" name="test_HtmlSH_basic" time="0.002"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="41" name="test_HtmlSH_unclosed_commend" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="50" name="test_python_string_prefix" time="0.015"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="75" name="test_Markdown_basic" time="0.002"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="98" name="test_python_outline_explorer_comment[# --- First variant]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="98" name="test_python_outline_explorer_comment[#------ 2nd variant]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="98" name="test_python_outline_explorer_comment[### 3rd variant]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="104" name="test_python_not_an_outline_explorer_comment[#---]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="104" name="test_python_not_an_outline_explorer_comment[#--------]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="104" name="test_python_not_an_outline_explorer_comment[#---   ]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_syntaxhighlighters" file="spyder/utils/tests/test_syntaxhighlighters.py" line="104" name="test_python_not_an_outline_explorer_comment[# -------]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_system" file="spyder/utils/tests/test_system.py" line="19" name="test_system" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_vcs" file="spyder/utils/tests/test_vcs.py" line="31" name="test_vcs_tool" time="0.000"><skipped message="Not to be run outside of CIs" type="pytest.skip">spyder/utils/tests/test_vcs.py:31: Not to be run outside of CIs</skipped></testcase><testcase classname="spyder.utils.tests.test_vcs" file="spyder/utils/tests/test_vcs.py" line="43" name="test_vcs_root" time="0.003"></testcase><testcase classname="spyder.utils.tests.test_vcs" file="spyder/utils/tests/test_vcs.py" line="50" name="test_git_revision" time="0.204"></testcase><testcase classname="spyder.utils.tests.test_vcs" file="spyder/utils/tests/test_vcs.py" line="59" name="test_no_git" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_vcs" file="spyder/utils/tests/test_vcs.py" line="71" name="test_get_git_refs" time="0.343"></testcase><testcase classname="spyder.utils.tests.test_vcs" file="spyder/utils/tests/test_vcs.py" line="79" name="test_get_git_remotes" time="0.094"></testcase><testcase classname="spyder.utils.tests.test_vcs" file="spyder/utils/tests/test_vcs.py" line="85" name="test_remote_to_url[https://github.com/neophnx/spyder.git-https://github.com/neophnx/spyder]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_vcs" file="spyder/utils/tests/test_vcs.py" line="85" name="test_remote_to_url[http://github.com/neophnx/spyder.git-http://github.com/neophnx/spyder]" time="0.001"></testcase><testcase classname="spyder.utils.tests.test_vcs" file="spyder/utils/tests/test_vcs.py" line="85" name="test_remote_to_url[git@github.com:goanpeca/spyder.git-https://github.com/goanpeca/spyder]" time="0.001"></testcase><testcase classname="spyder.widgets.github.tests.test_github_backend" file="spyder/widgets/github/tests/test_github_backend.py" line="70" name="test_invalid_credentials" time="0.272"><system-err>WARNING:spyder.widgets.github.backend:Failed to send bug report on Github. response={&apos;code&apos;: 401, &apos;json&apos;: {&apos;message&apos;: &apos;Bad credentials&apos;, &apos;documentation_url&apos;: &apos;https://docs.github.com/rest&apos;}}
</system-err></testcase><testcase classname="spyder.widgets.github.tests.test_github_backend" file="spyder/widgets/github/tests/test_github_backend.py" line="77" name="test_empty_credentials" time="0.215"><system-err>WARNING:spyder.widgets.github.backend:Failed to send bug report on Github. response={&apos;code&apos;: 404, &apos;json&apos;: {&apos;message&apos;: &apos;Not Found&apos;, &apos;documentation_url&apos;: &apos;https://docs.github.com/rest/reference/issues#create-an-issue&apos;}}
</system-err></testcase><testcase classname="spyder.widgets.github.tests.test_github_backend" file="spyder/widgets/github/tests/test_github_backend.py" line="84" name="test_fake_credentials_bad_repo" time="0.213"><system-err>WARNING:spyder.widgets.github.backend:Failed to send bug report on Github. response={&apos;code&apos;: 401, &apos;json&apos;: {&apos;message&apos;: &apos;Bad credentials&apos;, &apos;documentation_url&apos;: &apos;https://docs.github.com/rest&apos;}}
</system-err></testcase><testcase classname="spyder.widgets.github.tests.test_github_backend" file="spyder/widgets/github/tests/test_github_backend.py" line="91" name="test_get_credentials_from_settings" time="0.002"></testcase><testcase classname="spyder.widgets.github.tests.test_github_backend" file="spyder/widgets/github/tests/test_github_backend.py" line="102" name="test_store_user_credentials" time="0.015"></testcase><testcase classname="spyder.widgets.github.tests.test_github_login" file="spyder/widgets/github/tests/test_github_login.py" line="32" name="test_dialog" time="0.007"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="47" name="test_array_inline_array" time="0.041"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="55" name="test_array_inline_matrix" time="0.037"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="63" name="test_array_inline_array_invalid" time="0.050"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="71" name="test_array_inline_1d_array" time="0.044"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="79" name="test_array_inline_nan_array" time="0.043"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="87" name="test_array_inline_inf_array" time="0.040"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="95" name="test_array_inline_force_float_array" time="0.041"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="103" name="test_array_inline_force_float_error_array" time="0.039"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="111" name="test_array_table_array" time="0.053"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="131" name="test_array_table_matrix" time="0.050"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="151" name="test_array_table_array_empty_items" time="0.050"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="169" name="test_array_table_array_spaces_in_item" time="0.051"></testcase><testcase classname="spyder.widgets.tests.test_array_builder" file="spyder/widgets/tests/test_array_builder.py" line="188" name="test_array_table_matrix_empty" time="0.000"><skipped message="It fails on macOS" type="pytest.skip">spyder/widgets/tests/test_array_builder.py:188: It fails on macOS</skipped></testcase><testcase classname="spyder.widgets.tests.test_browser" file="spyder/widgets/tests/test_browser.py" line="25" name="test_browser" time="0.085"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="84" name="test_rename_variable" time="0.011"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="123" name="test_remove_variable" time="0.010"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="153" name="test_remove_remote_variable" time="0.014"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="221" name="test_filter_rows" time="0.010"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="256" name="test_create_dataframeeditor_with_correct_format" time="0.009"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="268" name="test_accept_sig_option_changed_from_dataframeeditor" time="0.082"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="280" name="test_collectionsmodel_with_two_ints" time="0.001"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="303" name="test_collectionsmodel_with_index" time="0.004"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="318" name="test_shows_dataframeeditor_when_editing_index" time="0.026"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="331" name="test_sort_numpy_numeric_collectionsmodel" time="0.002"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="357" name="test_sort_float_collectionsmodel" time="0.002"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="381" name="test_sort_collectionsmodel" time="0.004"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="450" name="test_sort_and_fetch_collectionsmodel_with_many_rows" time="0.002"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="463" name="test_rename_and_duplicate_item_in_collection_editor" time="0.012"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="481" name="test_edit_datetime" time="0.005"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="501" name="test_edit_mutable_and_immutable_types" time="0.013"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="599" name="test_view_module_in_coledit" time="0.018"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="611" name="test_notimplementederror_multiindex" time="0.005"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="631" name="test_editor_parent_set" time="0.008"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="684" name="test_xml_dom_element_view" time="0.053"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="704" name="test_pandas_dateoffset_view" time="0.043"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="718" name="test_set_nonsettable_objects" time="0.004"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="736" name="test_edit_nonsettable_objects" time="0.672"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="786" name="test_collectionseditor_with_class_having_buggy_copy" time="0.005"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="800" name="test_collectionseditor_with_class_having_correct_copy" time="0.005"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="815" name="test_collectionseditor_when_clicking_on_header_and_large_rows" time="0.031"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="835" name="test_dicts_with_mixed_types_as_key" time="0.004"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="847" name="test_dicts_natural_sorting" time="0.023"></testcase><testcase classname="spyder.widgets.tests.test_collectioneditor" file="spyder/widgets/tests/test_collectioneditor.py" line="868" name="test_dicts_natural_sorting_mixed_types" time="0.006"></testcase><testcase classname="spyder.widgets.tests.test_dependencies" file="spyder/widgets/tests/test_dependencies.py" line="26" name="test_dependencies" time="0.077"></testcase><testcase classname="spyder.widgets.tests.test_findreplace" file="spyder/widgets/tests/test_findreplace.py" line="35" name="test_findreplace_multiline_replacement" time="2.116"></testcase><testcase classname="spyder.widgets.tests.test_findreplace" file="spyder/widgets/tests/test_findreplace.py" line="59" name="test_replace_selection" time="1.263"></testcase><testcase classname="spyder.widgets.tests.test_helperwidgets" file="spyder/widgets/tests/test_helperwidgets.py" line="28" name="test_messagecheckbox" time="0.043"></testcase><testcase classname="spyder.widgets.tests.test_mixins" file="spyder/widgets/tests/test_mixins.py" line="33" name="test_get_current_object[test_object0]" time="0.026"></testcase><testcase classname="spyder.widgets.tests.test_mixins" file="spyder/widgets/tests/test_mixins.py" line="33" name="test_get_current_object[test_object1]" time="0.024"></testcase><testcase classname="spyder.widgets.tests.test_mixins" file="spyder/widgets/tests/test_mixins.py" line="81" name="test_get_current_word" time="0.026"></testcase><testcase classname="spyder.widgets.tests.test_mixins" file="spyder/widgets/tests/test_mixins.py" line="101" name="test_get_unicode_regexp" time="0.023"></testcase><testcase classname="spyder.widgets.tests.test_mixins" file="spyder/widgets/tests/test_mixins.py" line="122" name="test_get_number_matches" time="0.029"></testcase><testcase classname="spyder.widgets.tests.test_mixins" file="spyder/widgets/tests/test_mixins.py" line="178" name="test_get_match_number" time="0.026"></testcase><testcase classname="spyder.widgets.tests.test_mixins" file="spyder/widgets/tests/test_mixins.py" line="211" name="test_get_number_with_words" time="0.023"></testcase><testcase classname="spyder.widgets.tests.test_pathmanager" file="spyder/widgets/tests/test_pathmanager.py" line="37" name="test_pathmanager[pathmanager0]" time="0.066"></testcase><testcase classname="spyder.widgets.tests.test_pathmanager" file="spyder/widgets/tests/test_pathmanager.py" line="46" name="test_check_uncheck_path[pathmanager0]" time="0.007"></testcase><testcase classname="spyder.widgets.tests.test_pathmanager" file="spyder/widgets/tests/test_pathmanager.py" line="59" name="test_synchronize_with_PYTHONPATH[pathmanager0]" time="0.000"><skipped message="This feature is not applicable for Unix systems and pywin32 is needed" type="pytest.skip">spyder/widgets/tests/test_pathmanager.py:59: This feature is not applicable for Unix systems and pywin32 is needed</skipped></testcase><testcase classname="spyder.widgets.tests.test_pathmanager" file="spyder/widgets/tests/test_pathmanager.py" line="111" name="test_invalid_directories[pathmanager0]" time="0.664"></testcase><testcase classname="spyder.widgets.tests.test_pathmanager" file="spyder/widgets/tests/test_pathmanager.py" line="136" name="test_remove_item_and_reply_no[pathmanager0]" time="0.136"></testcase><testcase classname="spyder.widgets.tests.test_pathmanager" file="spyder/widgets/tests/test_pathmanager.py" line="162" name="test_remove_item_and_reply_yes[pathmanager0]" time="0.144"></testcase><testcase classname="spyder.widgets.tests.test_pathmanager" file="spyder/widgets/tests/test_pathmanager.py" line="188" name="test_add_repeated_item[pathmanager0]" time="0.513"><system-out>OrderedDict([(&apos;/private/var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/pytest-of-guillaume.haben/pytest-589/test_add_repeated_item_pathman0/bar&apos;, True), (&apos;/private/var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/pytest-of-guillaume.haben/pytest-589/test_add_repeated_item_pathman0/spam&apos;, True), (&apos;/private/var/folders/3z/d3pjcry13fnb29fcbmq5sdf4gxmft5/T/pytest-of-guillaume.haben/pytest-589/test_add_repeated_item_pathman0/foo&apos;, True)])
</system-out></testcase><testcase classname="spyder.widgets.tests.test_pathmanager" file="spyder/widgets/tests/test_pathmanager.py" line="228" name="test_add_invalid_path[pathmanager0]" time="0.000"><skipped message="This tests only applies to Python 2.It is failing on Linux CI. Works locally!" type="pytest.skip">spyder/widgets/tests/test_pathmanager.py:228: This tests only applies to Python 2.It is failing on Linux CI. Works locally!</skipped></testcase><testcase classname="spyder.widgets.tests.test_pathmanager" file="spyder/widgets/tests/test_pathmanager.py" line="257" name="test_buttons_state[pathmanager0]" time="0.001"><skipped message="This feature is not applicable for Unix systems and pywin32 is needed" type="pytest.skip">spyder/widgets/tests/test_pathmanager.py:257: This feature is not applicable for Unix systems and pywin32 is needed</skipped></testcase><testcase classname="spyder.widgets.tests.test_reporterror" file="spyder/widgets/tests/test_reporterror.py" line="36" name="test_dialog" time="0.129"></testcase><testcase classname="spyder.widgets.tests.test_reporterror" file="spyder/widgets/tests/test_reporterror.py" line="90" name="test_report_issue_url" time="0.002"></testcase><testcase classname="spyder.widgets.tests.test_reporterror" file="spyder/widgets/tests/test_reporterror.py" line="115" name="test_render_issue" time="0.387"></testcase><testcase classname="spyder.widgets.tests.test_status" file="spyder/widgets/tests/test_status.py" line="38" name="test_status_bar_time_based_widgets" time="0.006"></testcase><testcase classname="spyder.widgets.tests.test_status" file="spyder/widgets/tests/test_status.py" line="57" name="test_status_bar_widget_signal" time="0.004"></testcase><testcase classname="spyder.widgets.tests.test_status" file="spyder/widgets/tests/test_status.py" line="68" name="test_status_bar_conda_interpreter_status" time="0.006"></testcase><testcase classname="spyder.widgets.tests.test_status" file="spyder/widgets/tests/test_status.py" line="106" name="test_status_bar_other_interpreter_status" time="0.005"></testcase><testcase classname="spyder.widgets.tests.test_status" file="spyder/widgets/tests/test_status.py" line="121" name="test_status_bar_internal_interpreter_status" time="0.005"></testcase><testcase classname="spyder.widgets.tests.test_switcher" file="spyder/widgets/tests/test_switcher.py" line="59" name="test_switcher" time="0.060"></testcase><testcase classname="spyder.widgets.tests.test_switcher" file="spyder/widgets/tests/test_switcher.py" line="70" name="test_switcher_filter_and_mode" time="5.261"></testcase><testcase classname="spyder.widgets.tests.test_switcher" file="spyder/widgets/tests/test_switcher.py" line="107" name="test_switcher_filter_unicode" time="1.038"></testcase><testcase classname="spyder.workers.tests.test_update" file="spyder/workers/tests/test_update.py" line="12" name="test_update" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/workers/tests/test_update.py:12: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.workers.tests.test_update" file="spyder/workers/tests/test_update.py" line="20" name="test_no_update" time="0.001"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/workers/tests/test_update.py:20: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.workers.tests.test_update" file="spyder/workers/tests/test_update.py" line="28" name="test_no_update_development" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/workers/tests/test_update.py:28: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.workers.tests.test_update" file="spyder/workers/tests/test_update.py" line="37" name="test_update_pre_to_pre" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/workers/tests/test_update.py:37: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.workers.tests.test_update" file="spyder/workers/tests/test_update.py" line="46" name="test_update_pre_to_final" time="0.000"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/workers/tests/test_update.py:46: Need --run-slow option to run</skipped></testcase><testcase classname="spyder.workers.tests.test_update" file="spyder/workers/tests/test_update.py" line="55" name="test_releases_anaconda" time="0.058"><skipped message="Need --run-slow option to run" type="pytest.skip">spyder/workers/tests/test_update.py:55: Need --run-slow option to run</skipped></testcase></testsuite></testsuites>