[
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState savedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE);\n    savedFeatureState.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n    savedFeatureState.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"user1, user2, user3\");\n    stateRepository.setFeatureState(savedFeatureState);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(reflectionEquals(savedFeatureState, loadedFeatureState), org.hamcrest.CoreMatchers.is(true));\n    org.togglz.core.repository.FeatureState featureStateWithoutStrategy = new org.togglz.core.repository.FeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE);\n    stateRepository.setFeatureState(featureStateWithoutStrategy);\n    loadedFeatureState = stateRepository.getFeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(reflectionEquals(featureStateWithoutStrategy, loadedFeatureState), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "CassandraStateRepositoryTest",
        "Commit": "84cbb08a9eaf2cb3a7688db02a06da62af0b8269",
        "CyclomaticComplexity": 0,
        "Date": "Sat, 23 Jan 2016 09:17:49 +0100",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testRemovingOfActivationStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    com.netflix.astyanax.MutationBatch mutationBatch = keyspace.prepareMutationBatch().setConsistencyLevel(ConsistencyLevel.CL_QUORUM);\n    com.netflix.astyanax.ColumnListMutation<java.lang.String> mutation = mutationBatch.withRow(columnFamily, featureState.getFeature().name()).putColumn(org.togglz.cassandra.CassandraStateRepository.ENABLED_COLUMN, featureState.isEnabled());\n    putOrDelete(mutation, org.togglz.cassandra.CassandraStateRepository.STRATEGY_ID_COLUMN, featureState.getStrategyId());\n    putOrDelete(mutation, org.togglz.cassandra.CassandraStateRepository.STRATEGY_PARAMS_COLUMN, mapSerializer.serialize(featureState.getParameterMap()));\n    try {\n        mutationBatch.execute();\n    } catch (com.netflix.astyanax.connectionpool.exceptions.ConnectionException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "CassandraStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        com.netflix.astyanax.model.ColumnList<java.lang.String> state = keyspace.prepareQuery(columnFamily).getRow(feature.name()).execute().getResult();\n        return state.isEmpty() ? null : toFeatureState(feature, state);\n    } catch (com.netflix.astyanax.connectionpool.exceptions.ConnectionException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "CassandraStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1453537069",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertNull(stateRepository.getFeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE));\n    stateRepository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE));\n    org.junit.Assert.assertNotNull(stateRepository.getFeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE));\n}",
        "ClassName": "CassandraStateRepositoryTest",
        "Commit": "84cbb08a9eaf2cb3a7688db02a06da62af0b8269",
        "CyclomaticComplexity": 0,
        "Date": "Sat, 23 Jan 2016 09:17:49 +0100",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureSavingAndLoading",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        com.netflix.astyanax.model.ColumnList<java.lang.String> state = keyspace.prepareQuery(columnFamily).getRow(feature.name()).execute().getResult();\n        return state.isEmpty() ? null : toFeatureState(feature, state);\n    } catch (com.netflix.astyanax.connectionpool.exceptions.ConnectionException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "CassandraStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    com.netflix.astyanax.MutationBatch mutationBatch = keyspace.prepareMutationBatch().setConsistencyLevel(ConsistencyLevel.CL_QUORUM);\n    com.netflix.astyanax.ColumnListMutation<java.lang.String> mutation = mutationBatch.withRow(columnFamily, featureState.getFeature().name()).putColumn(org.togglz.cassandra.CassandraStateRepository.ENABLED_COLUMN, featureState.isEnabled());\n    putOrDelete(mutation, org.togglz.cassandra.CassandraStateRepository.STRATEGY_ID_COLUMN, featureState.getStrategyId());\n    putOrDelete(mutation, org.togglz.cassandra.CassandraStateRepository.STRATEGY_PARAMS_COLUMN, mapSerializer.serialize(featureState.getParameterMap()));\n    try {\n        mutationBatch.execute();\n    } catch (com.netflix.astyanax.connectionpool.exceptions.ConnectionException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "CassandraStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1453537069",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 22,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState savedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE);\n    savedFeatureState.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n    savedFeatureState.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"user1, user2, user3\");\n    stateRepository.setFeatureState(savedFeatureState);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(reflectionEquals(savedFeatureState, loadedFeatureState), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "CassandraStateRepositoryTest",
        "Commit": "84cbb08a9eaf2cb3a7688db02a06da62af0b8269",
        "CyclomaticComplexity": 0,
        "Date": "Sat, 23 Jan 2016 09:17:49 +0100",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testActivationStrategySavingAndLoading",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    com.netflix.astyanax.MutationBatch mutationBatch = keyspace.prepareMutationBatch().setConsistencyLevel(ConsistencyLevel.CL_QUORUM);\n    com.netflix.astyanax.ColumnListMutation<java.lang.String> mutation = mutationBatch.withRow(columnFamily, featureState.getFeature().name()).putColumn(org.togglz.cassandra.CassandraStateRepository.ENABLED_COLUMN, featureState.isEnabled());\n    putOrDelete(mutation, org.togglz.cassandra.CassandraStateRepository.STRATEGY_ID_COLUMN, featureState.getStrategyId());\n    putOrDelete(mutation, org.togglz.cassandra.CassandraStateRepository.STRATEGY_PARAMS_COLUMN, mapSerializer.serialize(featureState.getParameterMap()));\n    try {\n        mutationBatch.execute();\n    } catch (com.netflix.astyanax.connectionpool.exceptions.ConnectionException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "CassandraStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        com.netflix.astyanax.model.ColumnList<java.lang.String> state = keyspace.prepareQuery(columnFamily).getRow(feature.name()).execute().getResult();\n        return state.isEmpty() ? null : toFeatureState(feature, state);\n    } catch (com.netflix.astyanax.connectionpool.exceptions.ConnectionException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "CassandraStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1453537069",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState savedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE).enable();\n    stateRepository.setFeatureState(savedFeatureState);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(loadedFeatureState.isEnabled(), org.hamcrest.CoreMatchers.is(true));\n    stateRepository.setFeatureState(savedFeatureState.disable());\n    loadedFeatureState = stateRepository.getFeatureState(org.togglz.cassandra.CassandraStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(loadedFeatureState.isEnabled(), org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "CassandraStateRepositoryTest",
        "Commit": "84cbb08a9eaf2cb3a7688db02a06da62af0b8269",
        "CyclomaticComplexity": 0,
        "Date": "Sat, 23 Jan 2016 09:17:49 +0100",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledStateSavingAndLoading",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    com.netflix.astyanax.MutationBatch mutationBatch = keyspace.prepareMutationBatch().setConsistencyLevel(ConsistencyLevel.CL_QUORUM);\n    com.netflix.astyanax.ColumnListMutation<java.lang.String> mutation = mutationBatch.withRow(columnFamily, featureState.getFeature().name()).putColumn(org.togglz.cassandra.CassandraStateRepository.ENABLED_COLUMN, featureState.isEnabled());\n    putOrDelete(mutation, org.togglz.cassandra.CassandraStateRepository.STRATEGY_ID_COLUMN, featureState.getStrategyId());\n    putOrDelete(mutation, org.togglz.cassandra.CassandraStateRepository.STRATEGY_PARAMS_COLUMN, mapSerializer.serialize(featureState.getParameterMap()));\n    try {\n        mutationBatch.execute();\n    } catch (com.netflix.astyanax.connectionpool.exceptions.ConnectionException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "CassandraStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        com.netflix.astyanax.model.ColumnList<java.lang.String> state = keyspace.prepareQuery(columnFamily).getRow(feature.name()).execute().getResult();\n        return state.isEmpty() ? null : toFeatureState(feature, state);\n    } catch (com.netflix.astyanax.connectionpool.exceptions.ConnectionException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "CassandraStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1453537069",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 31,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.String columnFamilyName = \"I_dont_exist\";\n    com.netflix.astyanax.Keyspace keyspace = new org.togglz.cassandra.KeyspaceBuilder(\"Test Cluster\", \"TogglzTest\").setThriftPort(9171).build();\n    org.junit.Assert.assertNull(keyspace.describeKeyspace().getColumnFamily(columnFamilyName));\n    org.togglz.cassandra.CassandraStateRepository.newBuilder(keyspace).autoCreateColumnFamily(true).columnFamily(columnFamilyName).build();\n    org.junit.Assert.assertNotNull(keyspace.describeKeyspace().getColumnFamily(columnFamilyName));\n}",
        "ClassName": "CassandraStateRepositoryTest",
        "Commit": "84cbb08a9eaf2cb3a7688db02a06da62af0b8269",
        "CyclomaticComplexity": 0,
        "Date": "Sat, 23 Jan 2016 09:17:49 +0100",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 1,
        "MethodName": "testAutomaticCreationOfColumnFamily",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.clusterName = clusterName;\n    this.keyspaceName = keyspaceName;\n}",
                "ClassName": "KeyspaceBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.netflix.astyanax.AstyanaxContext<com.netflix.astyanax.Keyspace> context = new com.netflix.astyanax.AstyanaxContext.Builder().forCluster(clusterName).forKeyspace(keyspaceName).withAstyanaxConfiguration(new com.netflix.astyanax.impl.AstyanaxConfigurationImpl().setDiscoveryType(org.togglz.cassandra.RING_DESCRIBE)).withConnectionPoolConfiguration(new com.netflix.astyanax.connectionpool.impl.ConnectionPoolConfigurationImpl(\"ConnectionPool\").setPort(thriftPort).setSeeds(hosts)).withConnectionPoolMonitor(new com.netflix.astyanax.connectionpool.impl.CountingConnectionPoolMonitor()).buildKeyspace(com.netflix.astyanax.thrift.ThriftFamilyFactory.getInstance());\n    context.start();\n    java.lang.Runtime.getRuntime().addShutdownHook(new java.lang.Thread() {\n        @java.lang.Override\n        public synchronized void start() {\n            context.shutdown();\n        }\n    });\n    return context.getClient();\n}",
                "ClassName": "KeyspaceBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 4
            },
            {
                "Body": "{\n    this.thriftPort = port;\n    return this;\n}",
                "ClassName": "KeyspaceBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setThriftPort",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.cassandra.CassandraStateRepository.Builder(keyspace);\n}",
                "ClassName": "CassandraStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "newBuilder",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1453537069",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 22,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.springframework.web.context.WebApplicationContext applicationContext = org.springframework.web.context.ContextLoader.getCurrentWebApplicationContext();\n    org.togglz.spring.test.SpringEarlyFeatureUsageService service = applicationContext.getBean(org.togglz.spring.test.SpringEarlyFeatureUsageService.class);\n    org.junit.Assert.assertEquals(false, service.isFeature1Active());\n    org.junit.Assert.assertEquals(false, service.isFeature2Active());\n}",
        "ClassName": "SpringEarlyFeatureUsageTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEarlyFeatureUsage",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return feature1Active;\n}",
                "ClassName": "SpringEarlyFeatureUsageService",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isFeature1Active",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature2Active;\n}",
                "ClassName": "SpringEarlyFeatureUsageService",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isFeature2Active",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"FEATURE1 = false\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"FEATURE2 = true\"));\n}",
        "ClassName": "CDIBasicOperationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCDIBasicFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = ck\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroLoginAsFeatureAdmin",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.String url = (baseUrl + org.togglz.servlet.test.util.HttpServletRequestHolderServlet.URL_PATTERN) + \"?number=42\";\n    com.gargoylesoftware.htmlunit.TextPage page = new com.gargoylesoftware.htmlunit.WebClient().getPage(url);\n    assertThat(page.getWebResponse().getStatusCode()).isEqualTo(200);\n    assertThat(page.getContent()).contains(\"number=42\");\n}",
        "ClassName": "HttpServletRequestHolderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testRequestIsBoundToHolder",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    assertThat(featureManager).isNotNull();\n    assertThat(featureManager.getFeatures()).containsExactly(org.togglz.guice.GuiceFeatures.FEATURE1, org.togglz.guice.GuiceFeatures.FEATURE2);\n}",
        "ClassName": "GuiceIntegrationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 15,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGuiceIntegration",
        "MinimumCyclomaticComplexity": 3,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 15,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.core.context.FeatureContext.getContextClassLoader();\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.cache.get(classLoader);\n    if (featureManager != null) {\n        return featureManager;\n    }\n    featureManager = org.togglz.core.context.FeatureContext.findFeatureManagerInClassLoader(classLoader);\n    if (featureManager != null) {\n        org.togglz.core.manager.FeatureManager previousFeatureManager = org.togglz.core.context.FeatureContext.cache.putIfAbsent(classLoader, featureManager);\n        if (previousFeatureManager != null) {\n            return previousFeatureManager;\n        }\n    }\n    return featureManager;\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManagerOrNull",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=ck\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"DISABLED = false\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testDisabledForAllUsers",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    long start = java.lang.System.currentTimeMillis();\n    for (int i = 0; i < 10; i++) {\n        com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=ck\");\n        org.junit.Assert.assertTrue(page.getContent().contains(\"F1 = false\"));\n    }\n    long duration = java.lang.System.currentTimeMillis() - start;\n    org.junit.Assert.assertTrue(duration < 4000);\n}",
        "ClassName": "CacheRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 1,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertEquals(\"I'm managed by CDI\", org.togglz.core.context.FeatureContext.getFeatureManager().getName());\n}",
        "ClassName": "ManagedFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "containerManagedFeatureManagerShouldBeUsedIfAvailable",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertNotNull(dataSource);\n    org.togglz.core.repository.FeatureState stateNoEntry = featureManager.getFeatureState(org.togglz.servlet.test.repository.jdbc.JDBCFeatures.F1);\n    org.junit.Assert.assertEquals(false, stateNoEntry.isEnabled());\n    org.junit.Assert.assertEquals(null, stateNoEntry.getStrategyId());\n    org.junit.Assert.assertEquals(0, stateNoEntry.getParameterNames().size());\n    int inserted = executeUpdate(\"INSERT INTO MYTABLE \" + (\"(FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) \" + \"VALUES ('F1', 1, 'SomeStrategy', 'param=foobar')\"));\n    org.junit.Assert.assertEquals(1, inserted);\n    org.togglz.core.repository.FeatureState stateEnabled = featureManager.getFeatureState(org.togglz.servlet.test.repository.jdbc.JDBCFeatures.F1);\n    org.junit.Assert.assertEquals(true, stateEnabled.isEnabled());\n    org.junit.Assert.assertEquals(\"SomeStrategy\", stateEnabled.getStrategyId());\n    org.junit.Assert.assertEquals(1, stateEnabled.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"foobar\", stateEnabled.getParameter(\"param\"));\n    executeUpdate(\"UPDATE MYTABLE \" + (\"SET FEATURE_ENABLED = 0, STRATEGY_ID = NULL, STRATEGY_PARAMS = NULL \" + \"WHERE FEATURE_NAME = 'F1'\"));\n    org.togglz.core.repository.FeatureState stateDisabled = featureManager.getFeatureState(org.togglz.servlet.test.repository.jdbc.JDBCFeatures.F1);\n    org.junit.Assert.assertEquals(false, stateDisabled.isEnabled());\n    org.junit.Assert.assertEquals(null, stateDisabled.getStrategyId());\n    org.junit.Assert.assertEquals(0, stateDisabled.getParameterNames().size());\n}",
        "ClassName": "JDBCRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureStateFromJDBCRepository",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 13,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "executeUpdate",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 36,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"FEATURE1 = false\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"FEATURE2 = true\"));\n}",
        "ClassName": "ServletBasicOperationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSerlvetBasicFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"FEATURE1 = false\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"FEATURE2 = true\"));\n}",
        "ClassName": "SpringBasicOperationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSpringBasicFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.spring.test.proxy.SomeService someService = ((org.togglz.spring.test.proxy.SomeService) (getSpringBean(\"someServiceAutoDetectProxyType\")));\n    org.junit.Assert.assertNotNull(someService);\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.spring.test.proxy.ProxyFeatures.SERVICE_TOGGLE, false));\n    org.junit.Assert.assertEquals(\"I'm SomeServiceInactive\", someService.whoAreYou());\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.spring.test.proxy.ProxyFeatures.SERVICE_TOGGLE, true));\n    org.junit.Assert.assertEquals(\"I'm SomeServiceActive\", someService.whoAreYou());\n}",
        "ClassName": "FeatureProxyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testProxyWithAutoDetectedProxyType",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.springframework.web.context.WebApplicationContext applicationContext = org.springframework.web.context.ContextLoader.getCurrentWebApplicationContext();\n    return applicationContext.getBean(name);\n}",
                "ClassName": "FeatureProxyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getSpringBean",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.html.HtmlPage page = client.getPage(url + \"index.jsf\");\n    org.junit.Assert.assertTrue(page.asText().contains(\"Text for ENABLED feature!\"));\n    org.junit.Assert.assertFalse(page.asText().contains(\"Text for DISABLED feature!\"));\n    org.junit.Assert.assertNotNull(page.getElementById(\"enabledDiv\"));\n    org.junit.Assert.assertNull(page.getElementById(\"disabledDiv\"));\n}",
        "ClassName": "JSFMapTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testJSFFeatureMap",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    userRoles.add(\"ROLE_2\");\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"ROLE_1, ROLE_2, ROLE_3\");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnTrueWhenUserHasAnyOfSelectedRoles",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter[] parameters = strategy.getParameters();\n    org.junit.Assert.assertThat(parameters, org.hamcrest.Matchers.notNullValue());\n    org.junit.Assert.assertThat(parameters.length, org.hamcrest.Matchers.is(1));\n    org.togglz.core.activation.Parameter userParam = parameters[0];\n    org.junit.Assert.assertThat(userParam, org.hamcrest.Matchers.notNullValue());\n    org.junit.Assert.assertThat(userParam.getName(), org.hamcrest.Matchers.is(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCorrectParameterList",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.activation.Parameter[]{ org.togglz.core.activation.ParameterBuilder.create(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS).label(\"Users\").largeText().description(\"A list of users for which the feature is active.\") };\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameters",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(testFile);\n    for (int i = 0; i < NUMBER_OF_FEATURES; i++) {\n        java.lang.String name = \"FEATURE\" + i;\n        org.togglz.core.Feature feature = new org.togglz.core.repository.file.FileBasedStateRepositoryConcurrencyTest.TestFeature(name);\n        final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature).setStrategyId(\"strategy-for-\" + name).setParameter(\"param-of-\" + name, \"some-value-of-\" + name);\n        executor.submit(new java.lang.Runnable() {\n            @java.lang.Override\n            public void run() {\n                repo.setFeatureState(state);\n            }\n        });\n    }\n    executor.shutdown();\n    executor.awaitTermination(5, java.util.concurrent.TimeUnit.SECONDS);\n    for (int i = 0; i < NUMBER_OF_FEATURES; i++) {\n        java.lang.String name = \"FEATURE\" + i;\n        org.togglz.core.repository.file.FileBasedStateRepositoryConcurrencyTest.TestFeature feature = new org.togglz.core.repository.file.FileBasedStateRepositoryConcurrencyTest.TestFeature(name);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(feature);\n        assertThat(state).isNotNull();\n        assertThat(state.getStrategyId()).isEqualTo(\"strategy-for-\" + name);\n        assertThat(state.getParameterMap()).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param-of-\" + name, \"some-value-of-\" + name));\n    }\n}",
        "ClassName": "FileBasedStateRepositoryConcurrencyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 2,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkUnderHeavyLoad",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 2,
        "NumberOfLines": 24,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 11,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "TestFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableMap(this.parameters);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterMap",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 2,
        "TotalNumberOfLines": 73,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.disable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.enable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllEnabledTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testToggleFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.disable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.enable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setStrategyId(\"something\");\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(2));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"something\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setStrategyId",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 17,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 64,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = somebody\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroLoginAsNormalUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=ck\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = true\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledForOneUserWithCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    featureUserProvider.setFeatureUser(null);\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    featureUserProvider.setFeatureUser(new org.togglz.core.user.SimpleFeatureUser(\"admin\", false));\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    featureUserProvider.setFeatureUser(new org.togglz.core.user.SimpleFeatureUser(\"somebody\", false));\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    featureUserProvider.setFeatureUser(null);\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.EXPERIMENTAL));\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.MISSING_STRATEGY));\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.EMPTY_STRATEGY));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testIsActive",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureUser = featureUser;\n}",
                "ClassName": "TestFeatureUserProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"my-strategy\");\n    initialProps.setProperty(\"FEATURE1.param.myparam\", \"some-value\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setParameter(\"other\", \"something-else\");\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(4));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"my-strategy\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.myparam\"), org.hamcrest.Matchers.is(\"some-value\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.other\"), org.hamcrest.Matchers.is(\"something-else\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "addNewProperty",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 68,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).enable();\n    javax.sql.DataSource spyedDataSource = org.mockito.Mockito.spy(dataSource);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(spyedDataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n    org.mockito.Mockito.when(spyedDataSource.getConnection()).thenThrow(new java.sql.SQLException(\"Failed to get a connection\"));\n    repository.setFeatureState(state);\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldPropagateTheExceptionWhenWriteFails",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(new org.togglz.core.repository.jdbc.JDBCStateRepository.Builder(dataSource).tableName(tableName).createTable(createTable).serializer(serializer));\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 53,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> result = org.togglz.core.util.FeatureAnnotations.getAnnotations(org.togglz.core.util.FeatureAnnotationsTest.MyFeature2.FEATURE_WITH_NO_ANNOTATIONS);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.size(), org.hamcrest.CoreMatchers.is(0));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationsWillReturnEmptySetWhenThereAreNoAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 14,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> annotations = new java.util.HashSet<java.lang.annotation.Annotation>();\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        java.lang.annotation.Annotation[] fieldAnnotations = featureClass.getField(feature.name()).getAnnotations();\n        java.lang.annotation.Annotation[] classAnnotations = featureClass.getAnnotations();\n        annotations.addAll(java.util.Arrays.asList(fieldAnnotations));\n        annotations.addAll(java.util.Arrays.asList(classAnnotations));\n        return annotations;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return annotations;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotations",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.feature-enums: i.dont.exist.features\");\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureEnumsClassNotFound",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, org.togglz.core.activation.ScriptEngineActivationStrategyTest.INVALID_JAVASCRIPT);\n    boolean active = strategy.isActive(state, aFeatureUser(\"john\"));\n    assertThat(active).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForInvalidJavaScript",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllDisabledTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testActiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"100x\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForInvalidPercentage",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection authorities = new java.util.ArrayList<org.springframework.security.core.GrantedAuthority>();\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_1\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_2\"));\n    when(authentication.getAuthorities()).thenReturn(authorities);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    java.lang.Object authoritiesAttr = user.getAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES);\n    org.junit.Assert.assertThat(authoritiesAttr, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(authoritiesAttr, org.hamcrest.CoreMatchers.is(java.util.Set.class));\n    java.util.Set<java.lang.String> authoritySet = ((java.util.Set<java.lang.String>) (authoritiesAttr));\n    org.junit.Assert.assertThat(authoritySet.size(), org.hamcrest.CoreMatchers.is(2));\n    org.junit.Assert.assertThat(authoritySet.contains(\"ROLE_1\"), org.hamcrest.CoreMatchers.is(true));\n    org.junit.Assert.assertThat(authoritySet.contains(\"ROLE_2\"), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "SpringSecurityUserProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 13,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getCurrentUserWillCopyAuthoritiesFromAuthenticationIntoFeatureUser",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 13,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 14,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.springframework.security.core.context.SecurityContext context = org.springframework.security.core.context.SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication authentication = context.getAuthentication();\n    if (authentication != null) {\n        java.lang.String name = getUserName(authentication);\n        java.util.Set<java.lang.String> authorities = org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n        boolean featureAdmin = isFeatureAdmin(authentication, authorities);\n        org.togglz.core.user.SimpleFeatureUser user = new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin);\n        user.setAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES, authorities);\n        return user;\n    }\n    return null;\n}",
                "ClassName": "SpringSecurityUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 13,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.Weighted prioMinInt = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return java.lang.Integer.MIN_VALUE;\n        }\n    };\n    org.togglz.core.util.Weighted prio50 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 50;\n        }\n    };\n    java.util.List<org.togglz.core.util.Weighted> list = new java.util.ArrayList<org.togglz.core.util.Weighted>();\n    list.add(prio50);\n    list.add(prioMinInt);\n    java.util.Collections.sort(list, new org.togglz.core.util.Weighted.WeightedComparator());\n    assertThat(list).containsExactly(prioMinInt, prio50);\n}",
        "ClassName": "WeightedTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportMinimumIntValue",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "3",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "4",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "WeightedComparator",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    runPerformanceTest(org.togglz.core.repository.file.FileBasedRepositoryPerformanceTest.PerformanceFeatures.MISSING);\n}",
        "ClassName": "FileBasedRepositoryPerformanceTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "readingMissingFeature",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (int l = 0; l < 6; l++) {\n        long start = java.lang.System.currentTimeMillis();\n        for (int i = 0; i < 100000; i++) {\n            repository.getFeatureState(feature);\n        }\n        long time = java.lang.System.currentTimeMillis() - start;\n        java.lang.System.out.println(((\"Time for \" + feature.name()) + \": \") + time);\n    }\n}",
                "ClassName": "FileBasedRepositoryPerformanceTest",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "runPerformanceTest",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertEquals(0, org.togglz.core.util.Strings.splitAndTrim(null, \",\").size());\n    org.junit.Assert.assertEquals(0, org.togglz.core.util.Strings.splitAndTrim(\"   \", \",\").size());\n    java.util.List<java.lang.String> first = org.togglz.core.util.Strings.splitAndTrim(\"   ,foo\", \",\");\n    org.junit.Assert.assertEquals(1, first.size());\n    org.junit.Assert.assertEquals(\"foo\", first.get(0));\n    java.util.List<java.lang.String> second = org.togglz.core.util.Strings.splitAndTrim(\" foo,,,bar  \", \",\");\n    org.junit.Assert.assertEquals(2, second.size());\n    org.junit.Assert.assertEquals(\"foo\", second.get(0));\n    org.junit.Assert.assertEquals(\"bar\", second.get(1));\n}",
        "ClassName": "StringsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 12,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "splitAndTrim",
        "MinimumCyclomaticComplexity": 3,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 12,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 11,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.util.List<java.lang.String> result = new java.util.ArrayList<java.lang.String>();\n    if (org.togglz.core.util.Strings.isNotBlank(value)) {\n        java.lang.String[] segements = value.split(regex);\n        for (java.lang.String segment : segements) {\n            if (org.togglz.core.util.Strings.isNotBlank(segment)) {\n                result.add(segment.trim());\n            }\n        }\n    }\n    return result;\n}",
                "ClassName": "Strings",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "splitAndTrim",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.manager.EnumBasedFeatureProvider(null);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForNull",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    assertThat(manager.getFeatures()).contains(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS, org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.EXPERIMENTAL, org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.MISSING_STRATEGY);\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.appengine.repository.FixedNamespaceStateRepository(\"\", mockedStateRepository);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAcceptEmptyNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 5,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 5,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"0\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(110)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAlwaysReturnFalseForZeroPercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", org.togglz.core.activation.UsernameActivationStrategy.ID);\n    initialProps.setProperty(\"FEATURE1.param.users\", \"chkal,tester\");\n    initialProps.setProperty(\"FEATURE2\", \"false\");\n    initialProps.setProperty(\"FEATURE3\", \"true\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        repo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1, false));\n        repo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE2, true).setStrategyId(\"some-strategy\").setParameter(\"myparam\", \"myvalue\"));\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(5));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"false\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE2\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE2.strategy\"), org.hamcrest.Matchers.is(\"some-strategy\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE2.param.myparam\"), org.hamcrest.Matchers.is(\"myvalue\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE3\"), org.hamcrest.Matchers.is(\"true\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "updateMultipleStates",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 23,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 49,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    counter++;\n    switch (counter) {\n        case 1 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        case 2 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        case 3 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        case 4 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        default :\n            org.junit.Assert.fail(\"Incorrect execution cound\");\n    }\n}",
        "ClassName": "TogglzRuleWithVariations_CalledMultipleTimes_Test",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 13,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 27,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline(\"\\n\");\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"foo\\r\\nbar\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=foo\\\\r\\\\nbar\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"foo\\r\\nbar\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "escapesNewLineInMultilineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true, lineSeparator);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), false);\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(false, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReadFalseStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name, java.lang.Boolean.toString(enabled));\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 42,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 0, NULL, NULL)\");\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(false, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.lang.String sql = \"SELECT FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE% WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement statement = connection.prepareStatement(insertTableName(sql));\n            try {\n                statement.setString(1, feature.name());\n                java.sql.ResultSet resultSet = statement.executeQuery();\n                try {\n                    if (resultSet.next()) {\n                        boolean enabled = resultSet.getInt(org.togglz.core.repository.jdbc.Columns.FEATURE_ENABLED) > 0;\n                        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature, enabled);\n                        java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                        if (org.togglz.core.util.Strings.isNotBlank(strategyId)) {\n                            state.setStrategyId(strategyId.trim());\n                        }\n                        java.lang.String paramData = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS);\n                        if (org.togglz.core.util.Strings.isNotBlank(paramData)) {\n                            java.util.Map<java.lang.String, java.lang.String> params = serializer.deserialize(paramData);\n                            for (java.util.Map.Entry<java.lang.String, java.lang.String> param : params.entrySet()) {\n                                state.setParameter(param.getKey(), param.getValue());\n                            }\n                        }\n                        return state;\n                    }\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to fetch the feature's state from the database\", e);\n    }\n    return null;\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 40,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 69,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.spring.test.proxy.SomeService someService = ((org.togglz.spring.test.proxy.SomeService) (getSpringBean(\"someServiceManuallySetProxyType\")));\n    org.junit.Assert.assertNotNull(someService);\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.spring.test.proxy.ProxyFeatures.SERVICE_TOGGLE, false));\n    org.junit.Assert.assertEquals(\"I'm SomeServiceInactive\", someService.whoAreYou());\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.spring.test.proxy.ProxyFeatures.SERVICE_TOGGLE, true));\n    org.junit.Assert.assertEquals(\"I'm SomeServiceActive\", someService.whoAreYou());\n}",
        "ClassName": "FeatureProxyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testProxyWithManuallySetProxyType",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.springframework.web.context.WebApplicationContext applicationContext = org.springframework.web.context.ContextLoader.getCurrentWebApplicationContext();\n    return applicationContext.getBean(name);\n}",
                "ClassName": "FeatureProxyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getSpringBean",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroWithCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider().addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class).addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getFeatures()).hasSize(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.values().length + org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.values().length).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCombinedFeatureListForMultipleEnums",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if ((featureEnum == null) || (!featureEnum.isEnum())) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnum argument must be an enum\");\n    }\n    addFeatures(java.util.Arrays.asList(featureEnum.getEnumConstants()));\n    return this;\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addFeatureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.feature-manager-name: Custom Feature Manager Name\");\n    org.junit.Assert.assertEquals(\"Custom Feature Manager Name\", this.context.getBean(org.togglz.core.manager.FeatureManager.class).getName());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customFeatureManagerName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.FeatureStateTest.Features.FEATURE1);\n    org.junit.Assert.assertThat(state.isEnabled(), org.hamcrest.Matchers.is(false));\n    org.junit.Assert.assertThat(state.getParameterNames(), org.hamcrest.Matchers.empty());\n    state.enable();\n    org.junit.Assert.assertThat(state.isEnabled(), org.hamcrest.Matchers.is(true));\n    state.setParameter(\"foo\", \"bar\");\n    org.junit.Assert.assertThat(state.getParameterNames().size(), org.hamcrest.Matchers.is(1));\n    org.junit.Assert.assertThat(state.getParameter(\"foo\"), org.hamcrest.Matchers.is(\"bar\"));\n    state.setParameter(\"foo\", null);\n    org.junit.Assert.assertThat(state.getParameterNames().size(), org.hamcrest.Matchers.is(0));\n}",
        "ClassName": "FeatureStateTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSimpleFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(\"test,alpha,dev,uat,rc1\");\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseWhenNoneOfTheVersionsMatchTheServerCurrentVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    when(featureManager.isActive(featureNamed(\"test\"))).thenReturn(true);\n    org.togglz.core.util.FeatureMap map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map.get(new org.togglz.core.util.NamedFeature(\"test\"))).isEqualTo(true);\n    assertThat(map.get(new org.togglz.core.util.NamedFeature(\"other\"))).isEqualTo(false);\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportLookupByFeatureInstance",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.mockito.Matchers.argThat(new org.hamcrest.BaseMatcher<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(java.lang.Object obj) {\n            if (obj instanceof org.togglz.core.Feature) {\n                return ((org.togglz.core.Feature) (obj)).name().equals(name);\n            }\n            return false;\n        }\n\n        @java.lang.Override\n        public void describeTo(org.hamcrest.Description desc) {\n            desc.appendText(\"Does not match: \" + name);\n        }\n    });\n}",
                "ClassName": "FeatureMapTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(key, \"The feature must not be null\");\n    org.togglz.core.Feature feature = null;\n    if (key instanceof org.togglz.core.Feature) {\n        feature = ((org.togglz.core.Feature) (key));\n    } else {\n        feature = new org.togglz.core.util.NamedFeature(key.toString());\n    }\n    return manager.isActive(feature);\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 32,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").doesNotContain(org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy.class.getSimpleName()).doesNotContain(org.togglz.core.activation.DefaultActivationStrategyProviderTest.AnotherCustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldNotContainCustomStrategyIfNotAdded",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1).enable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(repository.kind(), org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1.name());\n    final com.google.appengine.api.datastore.Entity featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(true, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertEquals(\"someId\", featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"param\")));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"foo\")));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(kind(), featureState.getFeature().name());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, featureState.isEnabled());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, featureState.getStrategyId());\n    final java.util.Map<java.lang.String, java.lang.String> params = featureState.getParameterMap();\n    if ((params != null) && (!params.isEmpty())) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>(params.size());\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>(params.size());\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    putInsideTransaction(featureEntity);\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 38,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).enable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(1, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"someId\", query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"param=foo\", query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 84,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"99\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(98)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(199)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkCorrectlyForNinetyNinePercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllEnabledTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testActiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=other\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledForOneUserWithOtherUsers",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.annotation.EnabledByDefault result = org.togglz.core.util.FeatureAnnotations.getAnnotation(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT, org.togglz.core.annotation.EnabledByDefault.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationWillReturnFieldLevelAnnotation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        A fieldAnnotation = featureClass.getField(feature.name()).getAnnotation(annotationType);\n        A classAnnotation = featureClass.getAnnotation(annotationType);\n        return fieldAnnotation != null ? fieldAnnotation : classAnnotation;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return null;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotation",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection<java.lang.String> userRoles = new java.util.ArrayList<java.lang.String>();\n    userRoles.add(\"SOME_ROLE\");\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"SOME_ROLE\");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "doesntFailForOtherCollectionTypes",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.repository.MemcacheStateRepository repository = new org.togglz.appengine.repository.MemcacheStateRepository(delegate);\n    for (int i = 0; i < 10; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n    org.junit.Assert.assertTrue(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n}",
        "ClassName": "MemcacheStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 1,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfReadOperationsWithTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.delegate = delegate;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = ((org.togglz.core.repository.FeatureState) (cache.get(key(feature.name()))));\n    if (state == null) {\n        state = delegate.getFeatureState(feature);\n        cache.put(key(feature.name()), state, getExpiration());\n    }\n    return state;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.MemcacheStateRepository.KEY_PREFIX + featureName;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "key",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.console.path: /custom\");\n    org.junit.Assert.assertEquals(1, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertTrue(this.context.getBean(org.springframework.boot.context.embedded.ServletRegistrationBean.class).getUrlMappings().contains(\"/custom/*\"));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customConsolePath",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    state.setParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS, getMachineIP());\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(true, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForFeatureOnCorrectMachine",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Enumeration<java.net.NetworkInterface> interfaces = java.net.NetworkInterface.getNetworkInterfaces();\n        if (interfaces != null) {\n            while (interfaces.hasMoreElements()) {\n                java.util.Enumeration<java.net.InetAddress> addresses = interfaces.nextElement().getInetAddresses();\n                if (addresses != null) {\n                    while (addresses.hasMoreElements()) {\n                        java.lang.String hostAddress = addresses.nextElement().getHostAddress();\n                        if (hostAddress != null) {\n                            return hostAddress.trim();\n                        }\n                    } \n                }\n            } \n        }\n        return null;\n    } catch (java.net.SocketException e) {\n        return \"<no-ip>\";\n    }\n}",
                "ClassName": "IPActivationStrategyTest",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "getMachineIP",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 21,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 9,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 55,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ck\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID).setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"person1,ck,person2\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(true, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 36,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    manager.disable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldToggleIndividualFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    activeFeatures.add(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.remove(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enable(new org.togglz.core.util.NamedFeature(\"ONE\"));\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    manager.disable(new org.togglz.core.util.NamedFeature(\"ONE\"));\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportTogglingUntypedFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.add(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.remove(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    helper.setEnvIsLoggedIn(false);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertNull(user);\n}",
        "ClassName": "UserServiceUserProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "userIsNotLoggedIn",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.user.SimpleFeatureUser featureUser = null;\n    com.google.appengine.api.users.User user = userService.getCurrentUser();\n    if (user != null) {\n        featureUser = new org.togglz.core.user.SimpleFeatureUser(user.getUserId(), userService.isUserAdmin());\n        featureUser.setAttribute(\"email\", user.getEmail());\n        featureUser.setAttribute(\"nickname\", user.getNickname());\n    }\n    return featureUser;\n}",
                "ClassName": "UserServiceUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.cache.enabled: true\");\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.cache.CachingStateRepository);\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "cacheEnabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.google.appengine.api.NamespaceManager.set(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE);\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            return null;\n        }\n    });\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n    repository.getFeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFallbackToOriginalNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 18,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "5",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.VoidWork() {\n        @java.lang.Override\n        void vrun() {\n            decorated.setFeatureState(featureState);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.Work<org.togglz.core.repository.FeatureState>() {\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState run() {\n            return decorated.getFeatureState(feature);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 41,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertTrue(manager.isActive(new org.togglz.core.util.NamedFeature(\"ONE\")));\n    manager.disable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertFalse(manager.isActive(new org.togglz.core.util.NamedFeature(\"ONE\")));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportReadingWithNamedFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.add(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.remove(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldDetectMissingTable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 22,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isFalse();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyDomainList",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 9,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 0, NULL, NULL)\");\n    javax.sql.DataSource spyedDataSource = org.mockito.Mockito.spy(dataSource);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(spyedDataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n    org.mockito.Mockito.when(spyedDataSource.getConnection()).thenThrow(new java.sql.SQLException(\"Failed to get a connection\"));\n    repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1);\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 15,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldPropagateTheExceptionWhenReadFails",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(new org.togglz.core.repository.jdbc.JDBCStateRepository.Builder(dataSource).tableName(tableName).createTable(createTable).serializer(serializer));\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.lang.String sql = \"SELECT FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE% WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement statement = connection.prepareStatement(insertTableName(sql));\n            try {\n                statement.setString(1, feature.name());\n                java.sql.ResultSet resultSet = statement.executeQuery();\n                try {\n                    if (resultSet.next()) {\n                        boolean enabled = resultSet.getInt(org.togglz.core.repository.jdbc.Columns.FEATURE_ENABLED) > 0;\n                        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature, enabled);\n                        java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                        if (org.togglz.core.util.Strings.isNotBlank(strategyId)) {\n                            state.setStrategyId(strategyId.trim());\n                        }\n                        java.lang.String paramData = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS);\n                        if (org.togglz.core.util.Strings.isNotBlank(paramData)) {\n                            java.util.Map<java.lang.String, java.lang.String> params = serializer.deserialize(paramData);\n                            for (java.util.Map.Entry<java.lang.String, java.lang.String> param : params.entrySet()) {\n                                state.setParameter(param.getKey(), param.getValue());\n                            }\n                        }\n                        return state;\n                    }\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to fetch the feature's state from the database\", e);\n    }\n    return null;\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 40,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 63,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n}",
        "ClassName": "ThreadLocalFeatureManagerProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "firstTest",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.UNKNOWN_LANGUAGE, org.togglz.core.activation.ScriptEngineActivationStrategyTest.SOME_SCRIPT);\n    boolean active = strategy.isActive(state, aFeatureUser(\"john\"));\n    assertThat(active).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForUnsupportedLanguage",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class, org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getFeatures()).hasSize(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.values().length + org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.values().length).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCombinedFeatureListForMultipleEnumsViaConstructor",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.singleline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"foo\\r\\nbar\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=foo\\\\r\\\\nbar\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"foo\\r\\nbar\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "escapesNewLineInSinglelineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(false);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "singleline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.ONE.isActive());\n    org.junit.Assert.assertFalse(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.TWO.isActive());\n}",
        "ClassName": "TogglzRuleWithAnnotationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureShouldBeActiveWithAnnotation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = null;\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID).setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"person1,ck,person2\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForUnknownUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 32,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 0);\n    for (int i = 0; i < 10; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 1,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfReadOperationsWithoutTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityWithSomeOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.Weighted prioMaxInt = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return java.lang.Integer.MAX_VALUE;\n        }\n    };\n    org.togglz.core.util.Weighted prio50 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 50;\n        }\n    };\n    java.util.List<org.togglz.core.util.Weighted> list = new java.util.ArrayList<org.togglz.core.util.Weighted>();\n    list.add(prioMaxInt);\n    list.add(prio50);\n    java.util.Collections.sort(list, new org.togglz.core.util.Weighted.WeightedComparator());\n    assertThat(list).containsExactly(prio50, prioMaxInt);\n}",
        "ClassName": "WeightedTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportMaximumIntValue",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "5",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "6",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "WeightedComparator",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    state.setParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES, org.togglz.servlet.activation.ServerNameActivationStrategyTest.MATCHING_VHOST_NAME);\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isTrue();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForFeatureOnMatchingDomainName",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.repository.cache.CachingStateRepository(delegate, -1);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForNegativeTtl",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertThat(activationStrategy.getId(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.ID));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getIdWillReturnConstant",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.activation.UserRoleActivationStrategy.ID;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"50\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(25)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(49)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(50)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFindCorrectDecisionForIntermediateValues",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    crepo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertNull(repo1.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1));\n    org.junit.Assert.assertTrue(repo2.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureLAST",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : setterSelection.getSelected(repositories)) {\n        repository.setFeatureState(featureState);\n    }\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F1.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F2.isActive() || (!org.togglz.junit.vary.MyFeatures.F2.isActive()));\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F3.isActive() || (!org.togglz.junit.vary.MyFeatures.F3.isActive()));\n}",
        "ClassName": "TogglzRuleWithVariations_HappyCase_Test",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature;true;Group1\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isTrue();\n    assertThat(metadata.getGroups()).hasSize(1).areExactly(1, groupNamed(\"Group1\"));\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithSingleGroup",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.metadata.FeatureGroup>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.metadata.FeatureGroup value) {\n            return (value != null) && value.getLabel().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "groupNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isFalse();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithOnlyLabel",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.DefaultActivationStrategyProvider provider = new org.togglz.core.activation.DefaultActivationStrategyProvider();\n    org.togglz.core.manager.FeatureManagerBuilder.begin().featureEnum(org.togglz.core.manager.FeatureManagerBuilderTest.Features.class).activationStrategyProvider(provider).activationStrategy(new org.togglz.core.manager.FeatureManagerBuilderTest.CustomActivationStrategy()).build();\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.manager.FeatureManagerBuilderTest.CustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "FeatureManagerBuilderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAddStrategyIfUsingDefaultProvider",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (org.togglz.core.spi.ActivationStrategy activationStrategy : java.util.ServiceLoader.load(org.togglz.core.spi.ActivationStrategy.class)) {\n        strategies.add(activationStrategy);\n    }\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (strategyProvider instanceof org.togglz.core.activation.DefaultActivationStrategyProvider) {\n        ((org.togglz.core.activation.DefaultActivationStrategyProvider) (strategyProvider)).addActivationStrategy(strategy);\n        return this;\n    }\n    throw new java.lang.IllegalStateException(\"Adding ActivationStrategies is only allowed when using \" + org.togglz.core.activation.DefaultActivationStrategyProvider.class.getSimpleName());\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyProvider = strategyProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategyProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.manager.FeatureManagerBuilder();\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "begin",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"foo\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setStrategyId(null);\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(1));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "removeStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 17,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 64,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzEndpointTest.FeatureProviderConfig.class }, \"togglz.features.FEATURE_ONE: true\", \"togglz.features.FEATURE_TWO: false\", \"togglz.features.FEATURE_TWO.strategy: release-date\", \"togglz.features.FEATURE_TWO.param.date: 2016-07-01\", \"togglz.features.FEATURE_TWO.param.time: 08:30:00\");\n    org.togglz.spring.boot.autoconfigure.TogglzEndpoint endpoint = this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class);\n    java.util.List<org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature> features = endpoint.invoke();\n    org.junit.Assert.assertEquals(2, features.size());\n    org.junit.Assert.assertEquals(\"FEATURE_ONE\", features.get(0).getName());\n    org.junit.Assert.assertTrue(features.get(0).isEnabled());\n    org.junit.Assert.assertNull(features.get(0).getStrategy());\n    org.junit.Assert.assertEquals(0, features.get(0).getParams().size());\n    org.junit.Assert.assertEquals(\"FEATURE_TWO\", features.get(1).getName());\n    org.junit.Assert.assertFalse(features.get(1).isEnabled());\n    org.junit.Assert.assertEquals(\"release-date\", features.get(1).getStrategy());\n    org.junit.Assert.assertEquals(2, features.get(1).getParams().size());\n    org.junit.Assert.assertEquals(\"2016-07-01\", features.get(1).getParams().get(\"date\"));\n    org.junit.Assert.assertEquals(\"08:30:00\", features.get(1).getParams().get(\"time\"));\n}",
        "ClassName": "TogglzEndpointTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "invoke",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.context.annotation.AnnotationConfigApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzEndpointTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.util.List<org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature> features = new java.util.ArrayList<org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature>();\n    for (org.togglz.core.Feature feature : this.featureManager.getFeatures()) {\n        org.togglz.core.repository.FeatureState featureState = this.featureManager.getFeatureState(feature);\n        features.add(new org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature(feature, featureState));\n    }\n    return features;\n}",
                "ClassName": "TogglzEndpoint",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 1,
                "MethodName": "invoke",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return name;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getName",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategy;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return params;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParams",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 26,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1).disable();\n    repository.setFeatureState(state);\n    final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(repository.kind(), org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1.name());\n    final com.google.appengine.api.datastore.Entity featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(false, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertNull(featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertNull(featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES));\n    org.junit.Assert.assertNull(featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateWithoutStrategyOrParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(kind(), featureState.getFeature().name());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, featureState.isEnabled());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, featureState.getStrategyId());\n    final java.util.Map<java.lang.String, java.lang.String> params = featureState.getParameterMap();\n    if ((params != null) && (!params.isEmpty())) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>(params.size());\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>(params.size());\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    putInsideTransaction(featureEntity);\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 26,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    when(featureManager.isActive(featureNamed(\"test\"))).thenReturn(true);\n    org.togglz.core.util.FeatureMap map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map.get(\"test\")).isEqualTo(true);\n    assertThat(map.get(\"other\")).isEqualTo(false);\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportLookupByFeatureName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.mockito.Matchers.argThat(new org.hamcrest.BaseMatcher<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(java.lang.Object obj) {\n            if (obj instanceof org.togglz.core.Feature) {\n                return ((org.togglz.core.Feature) (obj)).name().equals(name);\n            }\n            return false;\n        }\n\n        @java.lang.Override\n        public void describeTo(org.hamcrest.Description desc) {\n            desc.appendText(\"Does not match: \" + name);\n        }\n    });\n}",
                "ClassName": "FeatureMapTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(key, \"The feature must not be null\");\n    org.togglz.core.Feature feature = null;\n    if (key instanceof org.togglz.core.Feature) {\n        feature = ((org.togglz.core.Feature) (key));\n    } else {\n        feature = new org.togglz.core.util.NamedFeature(key.toString());\n    }\n    return manager.isActive(feature);\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    givenSomeDataSourceWithAutoCommitSetTo(false);\n    whenTheFeatureIsEnabled();\n    thenTheDatabaseShouldBeUpdated();\n}",
        "ClassName": "JDBCRepositoryAutoCommitTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldUpdateWithAutoCommitDisabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String url = (\"jdbc:h2:mem:\" + this.getClass().getSimpleName()) + java.lang.System.currentTimeMillis();\n    org.h2.jdbcx.JdbcConnectionPool pool = org.h2.jdbcx.JdbcConnectionPool.create(url, \"sa\", \"\");\n    dataSource = new org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitTestDataSource(pool, autoCommit);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(dataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "givenSomeDataSourceWithAutoCommitSetTo",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1).enable().setStrategyId(\"foobar\");\n    repository.setFeatureState(state);\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "whenTheFeatureIsEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1);\n    assertThat(state).isNotNull();\n    assertThat(state.isEnabled()).isTrue();\n    assertThat(state.getStrategyId()).isEqualTo(\"foobar\");\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "thenTheDatabaseShouldBeUpdated",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n        org.junit.Assert.assertFalse(updater.isSchemaVersion1());\n        updater.migrateToVersion1();\n        org.junit.Assert.assertTrue(updater.isSchemaVersion1());\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldDetectVersion1",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return columnExists(org.togglz.core.repository.jdbc.Columns.FEATURE_NAME) && (!columnExists(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID));\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isSchemaVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"CREATE TABLE %TABLE% (FEATURE_NAME VARCHAR(100) PRIMARY KEY, FEATURE_ENABLED INTEGER, FEATURE_USERS VARCHAR(2000))\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 28,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"var len = user.name.length();\\r\\n len % 2 == 0;\\n\");\n    assertThat(strategy.isActive(state, aFeatureUser(\"john\"))).isTrue();\n    assertThat(strategy.isActive(state, aFeatureUser(\"jim\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportMultilineScripts",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user?user=ck\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = ck\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = true\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureAdminFlagForAdminUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.Feature feature = new org.togglz.core.util.NamedFeature(\"SAMPLE_FEATURE\");\n    org.togglz.core.repository.FeatureState featureState = new org.togglz.core.repository.FeatureState(feature, true);\n    stateRepository.setFeatureState(featureState);\n    org.togglz.core.repository.FeatureState storedFeatureState = stateRepository.getFeatureState(feature);\n    org.junit.Assert.assertTrue(storedFeatureState.isEnabled());\n    org.junit.Assert.assertTrue(org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(featureState, storedFeatureState, true));\n    featureState.setEnabled(false);\n    stateRepository.setFeatureState(featureState);\n    storedFeatureState = stateRepository.getFeatureState(feature);\n    org.junit.Assert.assertFalse(storedFeatureState.isEnabled());\n    org.junit.Assert.assertTrue(org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(featureState, storedFeatureState, true));\n}",
        "ClassName": "HazelcastStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureStateExistingInMap",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"my-strategy\");\n    initialProps.setProperty(\"FEATURE1.param.myparam\", \"some-value\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setParameter(\"myparam\", null);\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(2));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"my-strategy\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "removeProperty",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 68,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enableAll();\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.TWO));\n    manager.disableAll();\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.TWO));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldToggleAllFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (org.togglz.core.Feature feature : featureEnum.getEnumConstants()) {\n        enable(feature);\n    }\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "enableAll",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.clear();\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disableAll",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    junit.framework.Assert.assertEquals(false, org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITH_LABEL));\n    junit.framework.Assert.assertEquals(false, org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITHOUT_LABEL));\n    junit.framework.Assert.assertEquals(true, org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testIsEnabledByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.util.FeatureAnnotations.isAnnotationPresent(feature, org.togglz.core.annotation.EnabledByDefault.class);\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabledByDefault",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.FeatureGroup result = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.FieldLevelGroup.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.getLabel(), org.hamcrest.CoreMatchers.is(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.FIELD_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(result.contains(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "AnnotationFeatureGroupTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "buildWillReturnFeatureGroupWhenFeatureGroupAnnotationIsPresentForFieldLevelGroup",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (groupAnnotation.isAnnotationPresent(org.togglz.core.annotation.FeatureGroup.class)) {\n        return new org.togglz.core.metadata.enums.AnnotationFeatureGroup(groupAnnotation);\n    }\n    return null;\n}",
                "ClassName": "AnnotationFeatureGroup",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.appengine.repository.FixedNamespaceStateRepository(\"\", null);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldNotAcceptNullDecorated",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 5,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 5,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    runPerformanceTest(org.togglz.core.repository.file.FileBasedRepositoryPerformanceTest.PerformanceFeatures.EXISTING);\n}",
        "ClassName": "FileBasedRepositoryPerformanceTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "readingExistingFeature",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (int l = 0; l < 6; l++) {\n        long start = java.lang.System.currentTimeMillis();\n        for (int i = 0; i < 100000; i++) {\n            repository.getFeatureState(feature);\n        }\n        long time = java.lang.System.currentTimeMillis() - start;\n        java.lang.System.out.println(((\"Time for \" + feature.name()) + \": \") + time);\n    }\n}",
                "ClassName": "FileBasedRepositoryPerformanceTest",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "runPerformanceTest",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user?user=other\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = other\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = false\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureAdminFlagForOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = manager.getFeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS);\n    org.junit.Assert.assertEquals(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(\"admin\", state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    junit.framework.Assert.assertEquals(\"Some feature with a label\", org.togglz.core.util.FeatureAnnotations.getLabel(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITH_LABEL));\n    junit.framework.Assert.assertEquals(\"FEATURE_WITHOUT_LABEL\", org.togglz.core.util.FeatureAnnotations.getLabel(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITHOUT_LABEL));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetLabel",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.annotation.Label label = org.togglz.core.util.FeatureAnnotations.getAnnotation(feature, org.togglz.core.annotation.Label.class);\n    if (label != null) {\n        return label.value();\n    }\n    return feature.name();\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getLabel",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.FeatureGroup result = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.ClassLevelGroup.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.getLabel(), org.hamcrest.CoreMatchers.is(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.CLASS_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(result.contains(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "AnnotationFeatureGroupTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "buildWillReturnFeatureGroupWhenFeatureGroupAnnotationIsPresentForClassLevelGroup",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (groupAnnotation.isAnnotationPresent(org.togglz.core.annotation.FeatureGroup.class)) {\n        return new org.togglz.core.metadata.enums.AnnotationFeatureGroup(groupAnnotation);\n    }\n    return null;\n}",
                "ClassName": "AnnotationFeatureGroup",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.context.FeatureContext.clearCache();\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.enabled: false\");\n    org.junit.Assert.assertNull(org.togglz.core.context.FeatureContext.getFeatureManagerOrNull());\n    org.junit.Assert.assertNull(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.manager.FeatureManager.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.spi.ActivationStrategy.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.repository.StateRepository.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.user.UserProvider.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).size());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "disabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.context.FeatureContext.cache.clear();\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "clearCache",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.core.context.FeatureContext.getContextClassLoader();\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.cache.get(classLoader);\n    if (featureManager != null) {\n        return featureManager;\n    }\n    featureManager = org.togglz.core.context.FeatureContext.findFeatureManagerInClassLoader(classLoader);\n    if (featureManager != null) {\n        org.togglz.core.manager.FeatureManager previousFeatureManager = org.togglz.core.context.FeatureContext.cache.putIfAbsent(classLoader, featureManager);\n        if (previousFeatureManager != null) {\n            return previousFeatureManager;\n        }\n    }\n    return featureManager;\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManagerOrNull",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.endpoint.sensitive: false\");\n    org.junit.Assert.assertFalse(this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).isSensitive());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "endpointNotSensitive",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider featureProvider = mock(org.togglz.core.spi.FeatureProvider.class);\n    org.togglz.core.metadata.FeatureMetaData featureMetaData = mock(org.togglz.core.metadata.FeatureMetaData.class);\n    when(featureMetaData.getDefaultFeatureState()).thenReturn(new org.togglz.core.repository.FeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE, true));\n    when(featureProvider.getMetaData(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE)).thenReturn(featureMetaData);\n    org.togglz.core.manager.FeatureManager manager = new org.togglz.core.manager.FeatureManagerBuilder().featureEnum(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.class).stateRepository(repository).featureProvider(featureProvider).userProvider(featureUserProvider).build();\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testIsActiveUsingDefaultFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.userProvider = userProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "userProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureProvider = featureProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.stateRepository = stateRepository;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "stateRepository",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    helper.setEnvIsLoggedIn(true).setEnvEmail(\"user@togglz.org\").setEnvAuthDomain(\"togglz.org\");\n    com.google.appengine.api.users.UserService userService = com.google.appengine.api.users.UserServiceFactory.getUserService();\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertFalse(user.isFeatureAdmin());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getUserId(), user.getName());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getEmail(), user.getAttribute(\"email\"));\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getNickname(), user.getAttribute(\"nickname\"));\n}",
        "ClassName": "UserServiceUserProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "userIsLoggedIn",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.user.SimpleFeatureUser featureUser = null;\n    com.google.appengine.api.users.User user = userService.getCurrentUser();\n    if (user != null) {\n        featureUser = new org.togglz.core.user.SimpleFeatureUser(user.getUserId(), userService.isUserAdmin());\n        featureUser.setAttribute(\"email\", user.getEmail());\n        featureUser.setAttribute(\"nickname\", user.getNickname());\n    }\n    return featureUser;\n}",
                "ClassName": "UserServiceUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.CURRENT_VERSION + \",alpha,dev,uat\");\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertTrue(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueWhenAtLeastOneOfTheVersionsMatchServerCurrentVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\").largeText();\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertTrue(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testLargeTextParameter",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.largeText = true;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "largeText",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"user.name == 'john'\");\n    assertThat(strategy.isActive(state, aFeatureUser(\"john\"))).isTrue();\n    assertThat(strategy.isActive(state, aFeatureUser(\"jim\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "scriptCanAccessCurrentUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider featureProvider = mock(org.togglz.core.spi.FeatureProvider.class);\n    org.togglz.core.metadata.FeatureMetaData featureMetaData = mock(org.togglz.core.metadata.FeatureMetaData.class);\n    when(featureMetaData.getDefaultFeatureState()).thenReturn(new org.togglz.core.repository.FeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE, true));\n    when(featureProvider.getMetaData(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE)).thenReturn(featureMetaData);\n    org.togglz.core.manager.FeatureManager manager = new org.togglz.core.manager.FeatureManagerBuilder().featureEnum(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.class).stateRepository(repository).featureProvider(featureProvider).userProvider(featureUserProvider).build();\n    org.togglz.core.repository.FeatureState state = manager.getFeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE);\n    org.junit.Assert.assertEquals(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureStateUsingDefaultFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.userProvider = userProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "userProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureProvider = featureProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.stateRepository = stateRepository;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "stateRepository",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo2.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertTrue(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureInSecondBackingRepo",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\").optional();\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertTrue(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testOptionalParameter",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.optional = true;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "optional",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyIPlist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 26,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"1\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(110)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkCorrectlyForOnePercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class, null);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForArrayWithNull",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n}",
        "ClassName": "ThreadLocalFeatureManagerProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "secondTest",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class });\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    java.util.Set<org.togglz.core.Feature> features = featureManager.getFeatures();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertSame(featureManager, org.togglz.core.context.FeatureContext.getFeatureManager());\n    org.junit.Assert.assertSame(this.context, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n    org.junit.Assert.assertEquals(2, features.size());\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.mem.InMemoryStateRepository);\n    org.junit.Assert.assertEquals(1, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertTrue(this.context.getBean(org.springframework.boot.context.embedded.ServletRegistrationBean.class).getUrlMappings().contains(\"/togglz-console/*\"));\n    org.togglz.spring.boot.autoconfigure.TogglzEndpoint togglzEndpoint = this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class);\n    org.junit.Assert.assertEquals(\"togglz\", togglzEndpoint.getId());\n    org.junit.Assert.assertTrue(togglzEndpoint.isEnabled());\n    org.junit.Assert.assertTrue(togglzEndpoint.isSensitive());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "defaultTogglz",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 12,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 18,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 24,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.bind(applicationContext);\n    org.springframework.context.event.ContextClosedEvent contextClosedEvent = mock(org.springframework.context.event.ContextClosedEvent.class);\n    applicationListener.onApplicationEvent(contextClosedEvent);\n    org.junit.Assert.assertNull(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzApplicationContextBinderApplicationListenerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 2,
        "MethodName": "contextClosed",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 2,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.Object old = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.putIfAbsent(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader(), context);\n    if (old != null) {\n        throw new java.lang.IllegalStateException(\"There is already a ApplicationContext associated with the context ClassLoader of the current thread!\");\n    }\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "bind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(null);\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 5,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenThereIsNoRolesAttribute",
        "MinimumCyclomaticComplexity": 5,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 17,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=ck\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledForAllUsers",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNull(state);\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 4,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 27,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullWhenStateDoesntExist",
        "MinimumCyclomaticComplexity": 4,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 27,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 27,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.appengine.repository.FixedNamespaceStateRepository(null, mockedStateRepository);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldNotAcceptNullNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 5,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 5,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1);\n    assertThat(metaData.getAttributes()).doesNotContainValue(\"https://github.com/togglz/togglz/pull/33\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullForInfoLinkByDefault",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.console.path: /custom/\");\n    org.junit.Assert.assertEquals(1, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertTrue(this.context.getBean(org.springframework.boot.context.embedded.ServletRegistrationBean.class).getUrlMappings().contains(\"/custom/*\"));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customConsolePathWithTrailingSlash",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo1.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertTrue(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureInFirstBackingRepo",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"function isJohn(name) { return name == 'john' }; isJohn(user.name);\");\n    assertThat(strategy.isActive(state, aFeatureUser(\"john\"))).isTrue();\n    assertThat(strategy.isActive(state, aFeatureUser(\"jim\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportScriptWithFunction",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManagerBuilderTest.CustomStrategyProvider provider = new org.togglz.core.manager.FeatureManagerBuilderTest.CustomStrategyProvider();\n    org.togglz.core.manager.FeatureManagerBuilder.begin().featureEnum(org.togglz.core.manager.FeatureManagerBuilderTest.Features.class).activationStrategyProvider(provider).activationStrategy(new org.togglz.core.manager.FeatureManagerBuilderTest.CustomActivationStrategy()).build();\n}",
        "ClassName": "FeatureManagerBuilderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailIfAddingStrategyWithCustomProvider",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "CustomStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (strategyProvider instanceof org.togglz.core.activation.DefaultActivationStrategyProvider) {\n        ((org.togglz.core.activation.DefaultActivationStrategyProvider) (strategyProvider)).addActivationStrategy(strategy);\n        return this;\n    }\n    throw new java.lang.IllegalStateException(\"Adding ActivationStrategies is only allowed when using \" + org.togglz.core.activation.DefaultActivationStrategyProvider.class.getSimpleName());\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyProvider = strategyProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategyProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.manager.FeatureManagerBuilder();\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "begin",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection authorities = new java.util.ArrayList<org.springframework.security.core.GrantedAuthority>();\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_1\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_2\"));\n    when(authentication.getAuthorities()).thenReturn(authorities);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertThat(user.isFeatureAdmin(), org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "SpringSecurityUserProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 13,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getCurrentUserWillReturnNormalUserWhenAuthoritiesDoNotContainFeatureAdminAuthority",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 13,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.springframework.security.core.context.SecurityContext context = org.springframework.security.core.context.SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication authentication = context.getAuthentication();\n    if (authentication != null) {\n        java.lang.String name = getUserName(authentication);\n        java.util.Set<java.lang.String> authorities = org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n        boolean featureAdmin = isFeatureAdmin(authentication, authorities);\n        org.togglz.core.user.SimpleFeatureUser user = new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin);\n        user.setAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES, authorities);\n        return user;\n    }\n    return null;\n}",
                "ClassName": "SpringSecurityUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 13,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n            return null;\n        }\n    });\n    repository.getFeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getFeatureStateShouldRunWithinGivenNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 14,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.Work<org.togglz.core.repository.FeatureState>() {\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState run() {\n            return decorated.getFeatureState(feature);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.ActivationStrategyConfig.class });\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.CustomActivationStrategy customActivationStrategy = this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.CustomActivationStrategy.class);\n    org.junit.Assert.assertTrue(featureManager.getActivationStrategies().contains(customActivationStrategy));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customActivationStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertNotNull(dataSource);\n    org.junit.Assert.assertEquals(0L, executeQuery(\"SELECT COUNT(*) FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.togglz.core.repository.FeatureState firstState = new org.togglz.core.repository.FeatureState(org.togglz.servlet.test.repository.jdbc.JDBCFeatures.F2, true);\n    firstState.setStrategyId(\"someId\");\n    firstState.setParameter(\"param\", \"foo\");\n    featureManager.setFeatureState(firstState);\n    org.junit.Assert.assertEquals(1, executeQuery(\"SELECT FEATURE_ENABLED FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(\"someId\", executeQuery(\"SELECT STRATEGY_ID FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(\"param=foo\", executeQuery(\"SELECT STRATEGY_PARAMS FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.togglz.core.repository.FeatureState secondState = new org.togglz.core.repository.FeatureState(org.togglz.servlet.test.repository.jdbc.JDBCFeatures.F2, false);\n    secondState.setStrategyId(null);\n    featureManager.setFeatureState(secondState);\n    org.junit.Assert.assertEquals(0, executeQuery(\"SELECT FEATURE_ENABLED FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(null, executeQuery(\"SELECT STRATEGY_ID FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(null, executeQuery(\"SELECT STRATEGY_PARAMS FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n}",
        "ClassName": "JDBCRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureStateFromJDBCRepository",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 9,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "executeQuery",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 48,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline(\"\\n\");\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1\\nparam2=value2\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(2).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"value1\")).contains(org.assertj.core.data.MapEntry.entry(\"param2\", \"value2\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldConvertInMultilineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true, lineSeparator);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertThat(activationStrategy.getName(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.NAME));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getNameWillReturnConstant",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.activation.UserRoleActivationStrategy.NAME;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getName",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n        updater.migrateToVersion1();\n        org.junit.Assert.assertTrue(updater.isSchemaVersion1());\n        update(connection, \"INSERT INTO TOGGLZ VALUES ('F1', 1, 'ck, admin')\");\n        update(connection, \"INSERT INTO TOGGLZ VALUES ('F2', 1, '')\");\n        update(connection, \"INSERT INTO TOGGLZ VALUES ('F3', 1, NULL)\");\n        java.util.List<java.lang.Object[]> dataBefore = query(connection, \"SELECT FEATURE_NAME, FEATURE_USERS FROM TOGGLZ ORDER BY FEATURE_NAME\");\n        org.junit.Assert.assertEquals(3, dataBefore.size());\n        org.junit.Assert.assertEquals(\"F1\", dataBefore.get(0)[0]);\n        org.junit.Assert.assertEquals(\"ck, admin\", dataBefore.get(0)[1]);\n        updater.migrateToVersion2();\n        org.junit.Assert.assertTrue(querySucceeds(connection, \"SELECT FEATURE_NAME,STRATEGY_ID,STRATEGY_PARAMS FROM TOGGLZ\"));\n        org.junit.Assert.assertFalse(querySucceeds(connection, \"SELECT FEATURE_USERS FROM TOGGLZ\"));\n        java.util.List<java.lang.Object[]> dataAfter = query(connection, \"SELECT FEATURE_NAME, STRATEGY_ID, STRATEGY_PARAMS FROM TOGGLZ ORDER BY FEATURE_NAME\");\n        org.junit.Assert.assertEquals(3, dataBefore.size());\n        org.junit.Assert.assertEquals(\"F1\", dataAfter.get(0)[0]);\n        org.junit.Assert.assertEquals(org.togglz.core.activation.UsernameActivationStrategy.ID, dataAfter.get(0)[1]);\n        org.junit.Assert.assertEquals(\"users=ck, admin\", dataAfter.get(0)[2].toString().trim());\n        org.junit.Assert.assertEquals(\"F2\", dataAfter.get(1)[0]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(1)[1]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(1)[2]);\n        org.junit.Assert.assertEquals(\"F3\", dataAfter.get(2)[0]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(2)[1]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(2)[2]);\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldMigrateToVersion2",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 17,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 32,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"CREATE TABLE %TABLE% (FEATURE_NAME VARCHAR(100) PRIMARY KEY, FEATURE_ENABLED INTEGER, FEATURE_USERS VARCHAR(2000))\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return columnExists(org.togglz.core.repository.jdbc.Columns.FEATURE_NAME) && (!columnExists(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID));\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isSchemaVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.sql.Statement statement = null;\n    try {\n        statement = connection.createStatement();\n        return statement.executeUpdate(sql);\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(statement);\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.sql.Statement statement = null;\n    try {\n        statement = connection.createStatement();\n        java.sql.ResultSet resultSet = null;\n        try {\n            resultSet = statement.executeQuery(sql);\n            java.util.List<java.lang.Object[]> result = new java.util.ArrayList<java.lang.Object[]>();\n            while (resultSet.next()) {\n                java.util.List<java.lang.Object> row = new java.util.ArrayList<java.lang.Object>();\n                for (int i = 0; i < resultSet.getMetaData().getColumnCount(); i++) {\n                    row.add(resultSet.getObject(i + 1));\n                }\n                result.add(row.toArray());\n            } \n            return result;\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n        }\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(statement);\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 23,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"ALTER TABLE %TABLE% ADD STRATEGY_ID VARCHAR(200)\");\n    execute(\"ALTER TABLE %TABLE% ADD STRATEGY_PARAMS VARCHAR(2000)\");\n    java.sql.Statement updateDataStmt = connection.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_UPDATABLE);\n    try {\n        java.sql.ResultSet resultSet = null;\n        try {\n            resultSet = updateDataStmt.executeQuery(substitute(\"SELECT FEATURE_NAME, FEATURE_USERS, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE%\"));\n            while (resultSet.next()) {\n                java.lang.String users = resultSet.getString(org.togglz.core.repository.jdbc.Columns.FEATURE_USERS);\n                if (org.togglz.core.util.Strings.isNotBlank(users)) {\n                    java.util.Map<java.lang.String, java.lang.String> params = new java.util.HashMap<java.lang.String, java.lang.String>();\n                    params.put(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, users);\n                    java.lang.String paramData = serializer.serialize(params);\n                    resultSet.updateString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS, paramData);\n                    java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                    if (org.togglz.core.util.Strings.isBlank(strategyId)) {\n                        resultSet.updateString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID, org.togglz.core.activation.UsernameActivationStrategy.ID);\n                    }\n                    resultSet.updateRow();\n                }\n            } \n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n        }\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(updateDataStmt);\n    }\n    execute(\"ALTER TABLE %TABLE% DROP COLUMN FEATURE_USERS\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion2",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 30,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        query(connection, sql);\n        return true;\n    } catch (java.sql.SQLException e) {\n        return false;\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "querySucceeds",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 98,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(org.togglz.core.util.FeatureStateTest.FEATURE_NAME);\n    org.togglz.core.repository.FeatureState featureState = new org.togglz.core.repository.FeatureState(feature);\n    featureState.setStrategyId(org.togglz.core.util.FeatureStateTest.STRATEGYID);\n    featureState.setParameter(org.togglz.core.util.FeatureStateTest.PARAM_NAME, org.togglz.core.util.FeatureStateTest.PARAM_VALUE);\n    featureState.setEnabled(true);\n    java.io.ByteArrayOutputStream os = new java.io.ByteArrayOutputStream();\n    java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(os);\n    try {\n        try {\n            oos.writeObject(featureState);\n            java.io.InputStream is = new java.io.ByteArrayInputStream(os.toByteArray());\n            java.io.ObjectInputStream ois = new java.io.ObjectInputStream(is);\n            try {\n                org.togglz.core.repository.FeatureState deserializedFeatureState = ((org.togglz.core.repository.FeatureState) (ois.readObject()));\n                org.junit.Assert.assertEquals(\"FeatureState.feature was not correctly serialized/deserialized\", featureState.getFeature(), deserializedFeatureState.getFeature());\n                org.junit.Assert.assertEquals(\"FeatureState.strategyId was not correctly serialized/deserialized\", featureState.getStrategyId(), deserializedFeatureState.getStrategyId());\n                org.junit.Assert.assertEquals(\"FeatureState.parameters were not correctly serialized/deserialized\", featureState.getParameter(org.togglz.core.util.FeatureStateTest.PARAM_NAME), deserializedFeatureState.getParameter(org.togglz.core.util.FeatureStateTest.PARAM_NAME));\n                org.junit.Assert.assertEquals(\"FeatureState.enabled was not correctly serialized/deserialized\", featureState.isEnabled(), deserializedFeatureState.isEnabled());\n            } finally {\n                is.close();\n                ois.close();\n            }\n        } catch (java.io.NotSerializableException e) {\n            org.junit.Assert.fail(\"FeatureState is not serializable\");\n        }\n    } finally {\n        os.close();\n        oos.close();\n    }\n}",
        "ClassName": "FeatureStateTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "serializable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 31,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    state.setParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES, org.togglz.servlet.activation.ServerNameActivationStrategyTest.DIFFERENT_VHOST_NAME);\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isFalse();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForFeatureOnDifferentDomainName",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.repository.MemcacheStateRepository repository = new org.togglz.appengine.repository.MemcacheStateRepository(delegate);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.junit.Assert.assertTrue(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n    repository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertFalse(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.junit.Assert.assertTrue(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(2)).getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1);\n    org.mockito.Mockito.verify(delegate).setFeatureState(org.mockito.Mockito.any(org.togglz.core.repository.FeatureState.class));\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "MemcacheStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 2,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testStateModifyExpiresCache",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 2,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 18,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 4,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.delegate = delegate;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = ((org.togglz.core.repository.FeatureState) (cache.get(key(feature.name()))));\n    if (state == null) {\n        state = delegate.getFeatureState(feature);\n        cache.put(key(feature.name()), state, getExpiration());\n    }\n    return state;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.MemcacheStateRepository.KEY_PREFIX + featureName;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "key",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    delegate.setFeatureState(featureState);\n    cache.delete(key(featureState.getFeature().name()));\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 25,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F1.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F2.isActive() || (!org.togglz.junit.vary.MyFeatures.F2.isActive()));\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F3.isActive() || (!org.togglz.junit.vary.MyFeatures.F3.isActive()));\n}",
        "ClassName": "FeatureVariationsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            return null;\n        }\n    });\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setFeatureStateShouldRunWithinGivenNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "4",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.VoidWork() {\n        @java.lang.Override\n        void vrun() {\n            decorated.setFeatureState(featureState);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).disable();\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(0, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(null, query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(null, query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 18,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateWithoutStrategyOrParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 72,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroWithSomeOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1, true));\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 21,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.List<org.togglz.core.spi.ActivationStrategy> strategies = new java.util.ArrayList<org.togglz.core.spi.ActivationStrategy>();\n    strategies.add(new org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy());\n    strategies.add(new org.togglz.core.activation.DefaultActivationStrategyProviderTest.AnotherCustomActivationStrategy());\n    provider.addActivationStrategies(strategies);\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy.class.getSimpleName()).contains(org.togglz.core.activation.DefaultActivationStrategyProviderTest.AnotherCustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldContainCustomStrategyIfAddedMultipleBefore",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "AnotherCustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategies.addAll(strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.html.HtmlPage page = client.getPage(url + \"jsp-taglib-test.jsp\");\n    assertThat(page.asText()).contains(\"Feature [ACTIVE_FEATURE] is active\").doesNotContain(\"Feature [INACTIVE_FEATURE] is active\");\n}",
        "ClassName": "JspTaglibTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldIncludeOrExcludeBodyCorrectly",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"something\");\n    initialProps.setProperty(\"FEATURE1.param.foo\", \"bar\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.disable();\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(3));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"false\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"something\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.foo\"), org.hamcrest.Matchers.is(\"bar\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "disableFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 20,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 63,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 1, 'myStrategy', 'param23=foobar')\");\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(1, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"myStrategy\", query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"param23=foobar\", query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(0, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"someId\", query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"param=foo\", query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldUpdateExistingDatabaseEntry",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 101,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n        updater.migrateToVersion1();\n        org.junit.Assert.assertTrue(updater.doesTableExist());\n        org.junit.Assert.assertTrue(querySucceeds(connection, \"SELECT FEATURE_NAME FROM TOGGLZ\"));\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldMigrateToVersion1",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"CREATE TABLE %TABLE% (FEATURE_NAME VARCHAR(100) PRIMARY KEY, FEATURE_ENABLED INTEGER, FEATURE_USERS VARCHAR(2000))\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        query(connection, sql);\n        return true;\n    } catch (java.sql.SQLException e) {\n        return false;\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "querySucceeds",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    featureUserProvider.setFeatureUser(new org.togglz.core.user.SimpleFeatureUser(\"admin\", false));\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS);\n    state.setEnabled(false);\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldHandleEnabledFlagCorrectlyWithCustomStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureUser = featureUser;\n}",
                "ClassName": "TestFeatureUserProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo1.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, false));\n    repo2.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    crepo.setIterationOrder(org.togglz.core.repository.composite.CompositeStateRepository.IterationOrder.LIFO);\n    org.junit.Assert.assertTrue(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureLIFO",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.iterationOrder = iterationOrder;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setIterationOrder",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 19,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.Weighted prio10 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 10;\n        }\n    };\n    org.togglz.core.util.Weighted prio20 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 20;\n        }\n    };\n    java.util.List<org.togglz.core.util.Weighted> list = new java.util.ArrayList<org.togglz.core.util.Weighted>();\n    list.add(prio20);\n    list.add(prio10);\n    java.util.Collections.sort(list, new org.togglz.core.util.Weighted.WeightedComparator());\n    assertThat(list).containsExactly(prio10, prio20);\n}",
        "ClassName": "WeightedTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSortCorrectlySimpleIntValues",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "2",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "WeightedComparator",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    long ttl = 5;\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, ttl);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(ttl + 30);\n    }\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(5)).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 1,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCacheExpiryBecauseOfTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    provider.addActivationStrategy(new org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy());\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldContainCustomStrategyIfAddedBefore",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategies.add(strategy);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addActivationStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter[] result = activationStrategy.getParameters();\n    org.junit.Assert.assertThat(result.length, org.hamcrest.CoreMatchers.is(1));\n    org.togglz.core.activation.Parameter param = result[0];\n    org.junit.Assert.assertThat(param.getName(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME));\n    org.junit.Assert.assertThat(param.getDescription(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_DESC));\n    org.junit.Assert.assertThat(param.getLabel(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_LABEL));\n    org.junit.Assert.assertThat(param.isLargeText(), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getParametersWillReturnRoles",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.activation.Parameter[]{ org.togglz.core.activation.ParameterBuilder.create(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME).label(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_LABEL).description(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_DESC).largeText() };\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameters",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), true, \"S1\");\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(\"S1\", state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "withStrategyNoParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(name, enabled);\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name + \".strategy\", strategyName);\n    for (org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param param : params) {\n        org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty((name + \".param.\") + param.key, param.value);\n    }\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 40,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final java.util.Map<java.lang.String, java.lang.String> map = new java.util.HashMap<java.lang.String, java.lang.String>() {\n        {\n            put(\"param23\", \"foobar\");\n        }\n    };\n    update(\"F1\", true, \"myStrategy\", map, null);\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(\"myStrategy\", state.getStrategyId());\n    org.junit.Assert.assertEquals(1, state.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"foobar\", state.getParameter(\"param23\"));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 2,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 45,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    assertThat(provider.getFeatures()).containsSequence(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1, org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE2);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCorrectListOfFeaturesForEnum",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"john\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID).setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"person1,ck,person2\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForDifferentUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 36,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.CharSequence string = org.togglz.core.util.ClassUtils.createInstance(\"java.lang.String\", java.lang.CharSequence.class);\n    org.junit.Assert.assertNotNull(string);\n    org.junit.Assert.assertTrue(string instanceof java.lang.String);\n    org.junit.Assert.assertEquals(\"\", string);\n}",
        "ClassName": "ClassUtilsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 16,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 4,
        "MethodName": "testCreateInstance",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 16,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 4,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = java.lang.Thread.currentThread().getContextClassLoader();\n    if (classLoader == null) {\n        classLoader = interfaceClazz.getClassLoader();\n    }\n    try {\n        java.lang.Class<T> clazz = ((java.lang.Class<T>) (java.lang.Class.forName(classname, true, classLoader)));\n        return clazz.newInstance();\n    } catch (java.lang.ClassNotFoundException e) {\n        throw new java.lang.IllegalArgumentException(\"Unknown class: \" + classname);\n    } catch (java.lang.InstantiationException e) {\n        throw new java.lang.IllegalArgumentException(\"Could not create an instance of class: \" + classname, e);\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.IllegalArgumentException(\"Could not create an instance of class: \" + classname, e);\n    }\n}",
                "ClassName": "ClassUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "createInstance",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 4
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.testing.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "DefaultFeatureStateTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeaturesActiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.enums.EnumFeatureMetaData metaData = new org.togglz.core.metadata.enums.EnumFeatureMetaData(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE_WITH_DEFAULT_STATE);\n    org.togglz.core.repository.FeatureState featureState = metaData.getDefaultFeatureState();\n    org.junit.Assert.assertThat(featureState, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(featureState.isEnabled(), org.hamcrest.CoreMatchers.is(true));\n    org.junit.Assert.assertThat(featureState.getStrategyId(), org.hamcrest.CoreMatchers.is(\"SomeActivationId\"));\n    org.junit.Assert.assertThat(featureState.getParameter(\"SomeParameterName\"), org.hamcrest.CoreMatchers.is(\"someValue1,someValue2\"));\n    org.junit.Assert.assertThat(featureState.getParameter(\"SomeParameterName2\"), org.hamcrest.CoreMatchers.is(\"someValue3,someValue4\"));\n}",
        "ClassName": "EnumFeatureMetaDataTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "constructorWillPopulateDefaultActivationStrategyFromAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.label = org.togglz.core.util.FeatureAnnotations.getLabel(feature);\n    boolean enabledByDefault = org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(feature);\n    this.defaultFeatureState = new org.togglz.core.repository.FeatureState(feature, enabledByDefault);\n    org.togglz.core.annotation.DefaultActivationStrategy defaultActivationStrategy = org.togglz.core.util.FeatureAnnotations.getAnnotation(feature, org.togglz.core.annotation.DefaultActivationStrategy.class);\n    if (defaultActivationStrategy != null) {\n        this.defaultFeatureState.setStrategyId(defaultActivationStrategy.id());\n        for (org.togglz.core.annotation.ActivationParameter parameter : defaultActivationStrategy.parameters()) {\n            this.defaultFeatureState.setParameter(parameter.name(), parameter.value());\n        }\n    }\n    for (java.lang.annotation.Annotation annotation : org.togglz.core.util.FeatureAnnotations.getAnnotations(feature)) {\n        org.togglz.core.metadata.FeatureGroup group = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(annotation.annotationType());\n        if (group != null) {\n            groups.add(group);\n        }\n        java.lang.String[] attribute = org.togglz.core.util.FeatureAnnotations.getFeatureAttribute(annotation);\n        if (attribute != null) {\n            attributes.put(attribute[0], attribute[1]);\n        }\n    }\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 22,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return defaultFeatureState;\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getDefaultFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.FeatureGroup result = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(org.togglz.core.annotation.Label.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.nullValue());\n}",
        "ClassName": "AnnotationFeatureGroupTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "buildWillReturnNullWhenFeatureGroupAnnotationIsNotPresent",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (groupAnnotation.isAnnotationPresent(org.togglz.core.annotation.FeatureGroup.class)) {\n        return new org.togglz.core.metadata.enums.AnnotationFeatureGroup(groupAnnotation);\n    }\n    return null;\n}",
                "ClassName": "AnnotationFeatureGroup",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.CURRENT_VERSION);\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertTrue(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueWhenMatchesServerCurrentVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    crepo.setSetterSelection(org.togglz.core.repository.composite.CompositeStateRepository.SetterSelection.FIRST);\n    crepo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertTrue(repo1.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n    org.junit.Assert.assertNull(repo2.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1));\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureFIRST",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.setterSelection = setterSelection;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setSetterSelection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : setterSelection.getSelected(repositories)) {\n        repository.setFeatureState(featureState);\n    }\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ck\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyUserlist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 28,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.bind(mock(org.springframework.context.ApplicationContext.class));\n    applicationContext = mock(org.springframework.context.ApplicationContext.class);\n    org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent = mock(org.springframework.context.event.ContextRefreshedEvent.class);\n    when(contextRefreshedEvent.getApplicationContext()).thenReturn(applicationContext);\n    applicationListener.onApplicationEvent(contextRefreshedEvent);\n    org.junit.Assert.assertSame(applicationContext, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzApplicationContextBinderApplicationListenerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 2,
        "MethodName": "contextRefreshedWhileContextAlreadyBound",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 2,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.Object old = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.putIfAbsent(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader(), context);\n    if (old != null) {\n        throw new java.lang.IllegalStateException(\"There is already a ApplicationContext associated with the context ClassLoader of the current thread!\");\n    }\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "bind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider().addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class).addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).getLabel()).isEqualTo(\"First feature\");\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE).getLabel()).isEqualTo(\"Additional Feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBuildMetadataForMultipleEnums",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if ((featureEnum == null) || (!featureEnum.isEnum())) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnum argument must be an enum\");\n    }\n    addFeatures(java.util.Arrays.asList(featureEnum.getEnumConstants()));\n    return this;\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addFeatureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent = mock(org.springframework.context.event.ContextRefreshedEvent.class);\n    when(contextRefreshedEvent.getApplicationContext()).thenReturn(applicationContext);\n    applicationListener.onApplicationEvent(contextRefreshedEvent);\n    org.junit.Assert.assertSame(applicationContext, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzApplicationContextBinderApplicationListenerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 2,
        "MethodName": "contextRefreshed",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 2,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.console.enabled: false\");\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "consoleDisabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    state.setParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS, \"1.1.1.1\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForFeatureOnOtherMachine",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature;true\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isTrue();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithLabelAndDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityWithCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    state.setParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS, \"1.1.1.1,2.2.2.2,\" + getMachineIP());\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(true, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "multipleMachineIps",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Enumeration<java.net.NetworkInterface> interfaces = java.net.NetworkInterface.getNetworkInterfaces();\n        if (interfaces != null) {\n            while (interfaces.hasMoreElements()) {\n                java.util.Enumeration<java.net.InetAddress> addresses = interfaces.nextElement().getInetAddresses();\n                if (addresses != null) {\n                    while (addresses.hasMoreElements()) {\n                        java.lang.String hostAddress = addresses.nextElement().getHostAddress();\n                        if (hostAddress != null) {\n                            return hostAddress.trim();\n                        }\n                    } \n                }\n            } \n        }\n        return null;\n    } catch (java.net.SocketException e) {\n        return \"<no-ip>\";\n    }\n}",
                "ClassName": "IPActivationStrategyTest",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "getMachineIP",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 21,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 9,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 55,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(\"F1\", false, null, null, null);\n    final com.google.appengine.api.datastore.Transaction txn = datastoreService.beginTransaction();\n    update(\"F3\", false, null, null, txn);\n    repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    txn.commit();\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkInsideRunningTransaction",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 28,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1);\n    assertThat(metaData.getLabel()).isEqualTo(\"First feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnMetaDataWithCorrectLabel",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = ck\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityFeatureAdminFlagAdminUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> result = org.togglz.core.util.FeatureAnnotations.getAnnotations(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.size(), org.hamcrest.CoreMatchers.is(2));\n    com.google.common.collect.Iterables.find(result, createAnnotationTypePredicate(org.togglz.core.annotation.EnabledByDefault.class));\n    com.google.common.collect.Iterables.find(result, createAnnotationTypePredicate(org.togglz.core.util.FeatureAnnotationsTest.ClassLevelGroup.class));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationsWillReturnBothFieldAndClassLevelAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> annotations = new java.util.HashSet<java.lang.annotation.Annotation>();\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        java.lang.annotation.Annotation[] fieldAnnotations = featureClass.getField(feature.name()).getAnnotations();\n        java.lang.annotation.Annotation[] classAnnotations = featureClass.getAnnotations();\n        annotations.addAll(java.util.Arrays.asList(fieldAnnotations));\n        annotations.addAll(java.util.Arrays.asList(classAnnotations));\n        return annotations;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return annotations;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotations",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new com.google.common.base.Predicate<java.lang.annotation.Annotation>() {\n        @java.lang.Override\n        public boolean apply(java.lang.annotation.Annotation annotation) {\n            return annotation.annotationType().equals(annotationType);\n        }\n    };\n}",
                "ClassName": "FeatureAnnotationsTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createAnnotationTypePredicate",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 22,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.annotation.Label result = org.togglz.core.util.FeatureAnnotations.getAnnotation(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT, org.togglz.core.annotation.Label.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.core.IsNull.nullValue());\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationWillReturnNullWhenAnnotationDoesNotExist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        A fieldAnnotation = featureClass.getField(feature.name()).getAnnotation(annotationType);\n        A classAnnotation = featureClass.getAnnotation(annotationType);\n        return fieldAnnotation != null ? fieldAnnotation : classAnnotation;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return null;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotation",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = somebody\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityFeatureAdminFlagOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.features-file: classpath:/features-file/features.properties\");\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    org.junit.Assert.assertTrue(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertFalse(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.file.FileBasedStateRepository);\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featuresFile",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    expectedException.expect(java.lang.AssertionError.class);\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F1.isActive());\n}",
        "ClassName": "TogglzRuleWithVariations_DisableSadCase_Test",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.EnumBasedFeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider();\n    provider.addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    provider.addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.DuplicateNameFeatureEnum.class);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForDuplicateFeatureName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if ((featureEnum == null) || (!featureEnum.isEnum())) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnum argument must be an enum\");\n    }\n    addFeatures(java.util.Arrays.asList(featureEnum.getEnumConstants()));\n    return this;\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addFeatureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.WITH_OWNER);\n    assertThat(metaData.getAttributes()).containsValue(\"Christian\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnOwnerNameIfAnnotationPresent",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.features.FEATURE_ONE: true\", \"togglz.features.FEATURE_TWO: false\");\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    org.junit.Assert.assertTrue(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertFalse(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.property.PropertyBasedStateRepository);\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "features",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.NotAnEnum.class);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForNonEnumType",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"ID_1\", \"ID 1;true;Group 1,Group Other\");\n    properties.setProperty(\"ID_2\", \"ID 2;false;Group 2\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(2).areExactly(1, featureNamed(\"ID_1\")).areExactly(1, featureNamed(\"ID_2\"));\n    org.togglz.core.metadata.FeatureMetaData metadata1 = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"ID_1\"));\n    assertThat(metadata1).isNotNull();\n    assertThat(metadata1.getLabel()).isEqualTo(\"ID 1\");\n    org.togglz.core.repository.FeatureState defaultFeatureState1 = metadata1.getDefaultFeatureState();\n    assertThat(defaultFeatureState1.isEnabled()).isTrue();\n    assertThat(metadata1.getGroups()).hasSize(2).areExactly(1, groupNamed(\"Group 1\")).areExactly(1, groupNamed(\"Group Other\"));\n    org.togglz.core.metadata.FeatureMetaData metadata2 = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"ID_2\"));\n    assertThat(metadata2).isNotNull();\n    assertThat(metadata2.getLabel()).isEqualTo(\"ID 2\");\n    org.togglz.core.repository.FeatureState defaultFeatureState2 = metadata2.getDefaultFeatureState();\n    assertThat(defaultFeatureState2.isEnabled()).isFalse();\n    assertThat(metadata2.getGroups()).hasSize(1).areExactly(1, groupNamed(\"Group 2\"));\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "canInitializeFromProperties",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 20,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.metadata.FeatureGroup>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.metadata.FeatureGroup value) {\n            return (value != null) && value.getLabel().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "groupNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    SystemProperty.applicationVersion.set(\"\");\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.CURRENT_VERSION);\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseWhenCurrentVersionCannotBeResolved",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testParameterWithCustomName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityWithoutLogin",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final java.lang.String kind = \"CustomKind\";\n    repository = new org.togglz.appengine.repository.DatastoreStateRepository(kind, datastoreService);\n    org.junit.Assert.assertEquals(kind, repository.kind());\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customKindName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(datastoreService);\n    this.kind = kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.testing.MyFeatures.FEATURE_ONE, false));\n}",
        "ClassName": "DefaultFeatureStateTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureManagerImmutable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 1, 'myStrategy', 'param23=foobar')\");\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(\"myStrategy\", state.getStrategyId());\n    org.junit.Assert.assertEquals(1, state.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"foobar\", state.getParameter(\"param23\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.lang.String sql = \"SELECT FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE% WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement statement = connection.prepareStatement(insertTableName(sql));\n            try {\n                statement.setString(1, feature.name());\n                java.sql.ResultSet resultSet = statement.executeQuery();\n                try {\n                    if (resultSet.next()) {\n                        boolean enabled = resultSet.getInt(org.togglz.core.repository.jdbc.Columns.FEATURE_ENABLED) > 0;\n                        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature, enabled);\n                        java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                        if (org.togglz.core.util.Strings.isNotBlank(strategyId)) {\n                            state.setStrategyId(strategyId.trim());\n                        }\n                        java.lang.String paramData = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS);\n                        if (org.togglz.core.util.Strings.isNotBlank(paramData)) {\n                            java.util.Map<java.lang.String, java.lang.String> params = serializer.deserialize(paramData);\n                            for (java.util.Map.Entry<java.lang.String, java.lang.String> param : params.entrySet()) {\n                                state.setParameter(param.getKey(), param.getValue());\n                            }\n                        }\n                        return state;\n                    }\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to fetch the feature's state from the database\", e);\n    }\n    return null;\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 40,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 72,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\").description(\"Some text\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertEquals(param.getDescription(), \"Some text\");\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testParameterWithDescription",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.description = description;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "description",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.ONE.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.TWO.isActive());\n}",
        "ClassName": "TogglzRuleWithAnnotationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldActivateMultipleFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.endpoint.id: features\");\n    org.junit.Assert.assertEquals(\"features\", this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).getId());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customEndpointId",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    java.util.Set<org.togglz.core.Feature> features = new java.util.HashSet<org.togglz.core.Feature>();\n    java.lang.String name1 = \"Feature 1\";\n    java.lang.String name2 = \"Feature 2\";\n    org.togglz.core.Feature feature1 = mock(org.togglz.core.Feature.class, name1);\n    org.togglz.core.Feature feature2 = mock(org.togglz.core.Feature.class, name2);\n    features.add(feature1);\n    features.add(feature2);\n    when(featureManager.getFeatures()).thenReturn(features);\n    when(feature1.name()).thenReturn(name1);\n    when(feature2.name()).thenReturn(name2);\n    when(featureManager.isActive(featureNamed(name1))).thenReturn(true);\n    when(featureManager.isActive(featureNamed(name2))).thenReturn(false);\n    java.util.Map<java.lang.Object, java.lang.Boolean> map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map.size(), org.hamcrest.CoreMatchers.equalTo(2));\n    assertThat(map.isEmpty(), org.hamcrest.CoreMatchers.is(false));\n    assertThat(map.get(name1), org.hamcrest.CoreMatchers.equalTo(true));\n    assertThat(map.get(name2), org.hamcrest.CoreMatchers.equalTo(false));\n    assertThat(map.get(\"unknown\"), org.hamcrest.CoreMatchers.equalTo(false));\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "canBootstrapViaConstructor",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.mockito.Matchers.argThat(new org.hamcrest.BaseMatcher<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(java.lang.Object obj) {\n            if (obj instanceof org.togglz.core.Feature) {\n                return ((org.togglz.core.Feature) (obj)).name().equals(name);\n            }\n            return false;\n        }\n\n        @java.lang.Override\n        public void describeTo(org.hamcrest.Description desc) {\n            desc.appendText(\"Does not match: \" + name);\n        }\n    });\n}",
                "ClassName": "FeatureMapTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 19,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState ageCheck = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"user.getAttribute('age') >= 21\");\n    org.togglz.core.user.SimpleFeatureUser child = aFeatureUser(\"john\");\n    child.setAttribute(\"age\", 12);\n    assertThat(strategy.isActive(ageCheck, child)).isFalse();\n    org.togglz.core.user.SimpleFeatureUser adult = aFeatureUser(\"peter\");\n    adult.setAttribute(\"age\", 25);\n    assertThat(strategy.isActive(ageCheck, adult)).isTrue();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "scriptCanAccessUserAttributes",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        attributes.put(name, value);\n    } else {\n        attributes.remove(name);\n    }\n    return this;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setAttribute",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"F1\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isFalse();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithoutLabel",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final java.util.Map<java.lang.String, java.lang.String> map = new java.util.HashMap<java.lang.String, java.lang.String>() {\n        {\n            put(\"param23\", \"foobar\");\n        }\n    };\n    update(\"F1\", true, \"myStrategy\", map, null);\n    final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(repository.kind(), org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1.name());\n    com.google.appengine.api.datastore.Entity featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(true, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertEquals(\"myStrategy\", featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"param23\")));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"foobar\")));\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(false, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertEquals(\"someId\", featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"param\")));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"foo\")));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldUpdateExistingDatabaseEntry",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "2",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 2,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(kind(), featureState.getFeature().name());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, featureState.isEnabled());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, featureState.getStrategyId());\n    final java.util.Map<java.lang.String, java.lang.String> params = featureState.getParameterMap();\n    if ((params != null) && (!params.isEmpty())) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>(params.size());\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>(params.size());\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    putInsideTransaction(featureEntity);\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 60,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(\"SERIALIZABLE\");\n    java.io.ByteArrayOutputStream os = new java.io.ByteArrayOutputStream();\n    java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(os);\n    try {\n        try {\n            oos.writeObject(feature);\n            java.io.InputStream is = new java.io.ByteArrayInputStream(os.toByteArray());\n            java.io.ObjectInputStream ois = new java.io.ObjectInputStream(is);\n            try {\n                java.lang.Object deserializedFeature = ois.readObject();\n                org.junit.Assert.assertEquals(\"NamedFeature was not correctly serialized/deserialized\", feature, deserializedFeature);\n            } finally {\n                is.close();\n                ois.close();\n            }\n        } catch (java.io.NotSerializableException e) {\n            org.junit.Assert.fail(\"NamedFeature is not serializable\");\n        }\n    } finally {\n        os.close();\n        oos.close();\n    }\n}",
        "ClassName": "NamedFeatureTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "serializable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 24,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.List<org.togglz.core.Feature> features = java.util.Arrays.<org.togglz.core.Feature>asList(new org.togglz.core.util.NamedFeature(\"f1\"), new org.togglz.core.util.NamedFeature(\"f2\"));\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    when(featureManager.getFeatures()).thenReturn(new java.util.HashSet<org.togglz.core.Feature>(features));\n    org.togglz.core.util.FeatureMap map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map).hasSize(2);\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCorrectSize",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    int ttl = 5;\n    org.togglz.appengine.repository.MemcacheStateRepository repository = new org.togglz.appengine.repository.MemcacheStateRepository(delegate, ttl);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(ttl + 10);\n    }\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(5)).getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "MemcacheStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 1,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCacheExpiryBecauseOfTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(delegate);\n    this.expiration = com.google.appengine.api.memcache.Expiration.byDeltaMillis(ttlInSeconds);\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = ((org.togglz.core.repository.FeatureState) (cache.get(key(feature.name()))));\n    if (state == null) {\n        state = delegate.getFeatureState(feature);\n        cache.put(key(feature.name()), state, getExpiration());\n    }\n    return state;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.String username = \"named-user\";\n    boolean featureAdmin = true;\n    org.togglz.core.user.UserProvider userProvider = new org.togglz.core.user.SingleUserProvider(username, featureAdmin);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.hamcrest.MatcherAssert.assertThat(user.getName(), org.hamcrest.CoreMatchers.equalTo(username));\n    org.hamcrest.MatcherAssert.assertThat(user.isFeatureAdmin(), org.hamcrest.CoreMatchers.equalTo(featureAdmin));\n}",
        "ClassName": "SingleUserProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "canProvideNamedUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin));\n}",
                "ClassName": "SingleUserProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState stateAlwaysTrue = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"1 == 1\");\n    assertThat(strategy.isActive(stateAlwaysTrue, aFeatureUser(\"john\"))).isTrue();\n    org.togglz.core.repository.FeatureState stateAlwaysFalse = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"0 == 1\");\n    assertThat(strategy.isActive(stateAlwaysFalse, aFeatureUser(\"john\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnSameResultAsScriptForLiterals",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(\"F1\", false, null, null, null);\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(false, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 40,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo1.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, false));\n    repo2.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertFalse(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureFIFO",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    helper.setEnvIsLoggedIn(true).setEnvIsAdmin(true).setEnvEmail(\"admin@togglz.org\").setEnvAuthDomain(\"togglz.org\");\n    com.google.appengine.api.users.UserService userService = com.google.appengine.api.users.UserServiceFactory.getUserService();\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertTrue(user.isFeatureAdmin());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getUserId(), user.getName());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getEmail(), user.getAttribute(\"email\"));\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getNickname(), user.getAttribute(\"nickname\"));\n}",
        "ClassName": "UserServiceUserProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "userIsLoggedInAsAdmin",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.user.SimpleFeatureUser featureUser = null;\n    com.google.appengine.api.users.User user = userService.getCurrentUser();\n    if (user != null) {\n        featureUser = new org.togglz.core.user.SimpleFeatureUser(user.getUserId(), userService.isUserAdmin());\n        featureUser.setAttribute(\"email\", user.getEmail());\n        featureUser.setAttribute(\"nickname\", user.getNickname());\n    }\n    return featureUser;\n}",
                "ClassName": "UserServiceUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.singleline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1&param2=value2\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(2).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"value1\")).contains(org.assertj.core.data.MapEntry.entry(\"param2\", \"value2\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldConvertInSinglelineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(false);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "singleline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class });\n    org.junit.Assert.assertSame(this.context, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 1,
        "MethodName": "applicationContextBinder",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    com.google.appengine.api.NamespaceManager.set(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE);\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            return null;\n        }\n    });\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setFeatureStateShouldRunWithinGivenNamespaceWhenCurrentNamespaceIsNotDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "3",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.VoidWork() {\n        @java.lang.Override\n        void vrun() {\n            decorated.setFeatureState(featureState);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.enable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.disable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllDisabledTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testToggleFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.enable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.disable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 10000);\n    for (int i = 0; i < 10; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 1,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfReadOperationsWithTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"uniqueId\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testMinimalParameter",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1\\nparam2=value2\");\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "lineSeparatorShouldDefaultSimpleNewLine",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.feature-enums: org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures\");\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    java.util.Set<org.togglz.core.Feature> features = featureManager.getFeatures();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertEquals(2, features.size());\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureEnums",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 0);\n    for (int i = 0; i < 10; i++) {\n        org.togglz.core.Feature feature = ((i % 2) == 0) ? org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST : new org.togglz.core.util.NamedFeature(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST.name());\n        org.junit.Assert.assertTrue(repository.getFeatureState(feature).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 1,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCacheWithDifferentFeatureImplementations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), true);\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReadTrueStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name, java.lang.Boolean.toString(enabled));\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 42,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureShouldBeInactiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature;true;\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isTrue();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithLabelAndDefaultAndTrailingSemicolon",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertNull(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1));\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureNotFound",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 9,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.FeatureStateTest.Features.FEATURE1, true, java.util.Arrays.asList(\"ck\", \"admin\"));\n    org.junit.Assert.assertThat(state.isEnabled(), org.hamcrest.Matchers.is(true));\n    org.junit.Assert.assertThat(state.getParameterNames(), org.hamcrest.Matchers.contains(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n    org.junit.Assert.assertThat(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS), org.hamcrest.Matchers.is(\"ck,admin\"));\n    org.junit.Assert.assertThat(state.getUsers(), org.hamcrest.Matchers.contains(\"ck\", \"admin\"));\n    state.addUser(\"tester\");\n    org.junit.Assert.assertThat(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS), org.hamcrest.Matchers.is(\"ck,admin,tester\"));\n    org.junit.Assert.assertThat(state.getUsers(), org.hamcrest.Matchers.contains(\"ck\", \"admin\", \"tester\"));\n}",
        "ClassName": "FeatureStateTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testOldUsersApiHandling",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n    this.strategyId = org.togglz.core.activation.UsernameActivationStrategy.ID;\n    this.addUsers(users);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String value = getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(value)) {\n        return org.togglz.core.util.Strings.splitAndTrim(value, \",\");\n    }\n    return java.util.Collections.emptyList();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getUsers",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.addUsers(java.util.Arrays.asList(user));\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 25,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class, org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).getLabel()).isEqualTo(\"First feature\");\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE).getLabel()).isEqualTo(\"Additional Feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBuildMetadataForMultipleEnumsViaConstructor",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.Feature feature = new org.togglz.core.util.NamedFeature(\"SAMPLE_FEATURE\");\n    org.togglz.core.repository.FeatureState featureState = new org.togglz.core.repository.FeatureState(feature, true);\n    stateRepository.setFeatureState(featureState);\n    org.togglz.core.repository.FeatureState storedFeatureState = stateRepository.getFeatureState(feature);\n    org.junit.Assert.assertTrue(org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(featureState, storedFeatureState, true));\n}",
        "ClassName": "HazelcastStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureStateNotExisitingInMap",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.endpoint.enabled: false\");\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).size());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "endpointDisabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    int currentYear = java.util.Calendar.getInstance().get(java.util.GregorianCalendar.YEAR) - 1900;\n    org.togglz.core.repository.FeatureState trueForCurrentYear = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"date.year == \" + currentYear);\n    assertThat(strategy.isActive(trueForCurrentYear, aFeatureUser(\"john\"))).isTrue();\n    org.togglz.core.repository.FeatureState trueForNextYear = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"date.year > \" + currentYear);\n    assertThat(strategy.isActive(trueForNextYear, aFeatureUser(\"john\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "scriptCanAccessCurrentDate",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"   \");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenRolesParamIsBlank",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection authorities = new java.util.ArrayList<org.springframework.security.core.GrantedAuthority>();\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_1\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_ADMIN\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_2\"));\n    when(authentication.getAuthorities()).thenReturn(authorities);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertThat(user.isFeatureAdmin(), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "SpringSecurityUserProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 13,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getCurrentUserWillReturnFeatureAdminWhenAuthoritiesContainFeatureAdminAuthority",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 13,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.springframework.security.core.context.SecurityContext context = org.springframework.security.core.context.SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication authentication = context.getAuthentication();\n    if (authentication != null) {\n        java.lang.String name = getUserName(authentication);\n        java.util.Set<java.lang.String> authorities = org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n        boolean featureAdmin = isFeatureAdmin(authentication, authorities);\n        org.togglz.core.user.SimpleFeatureUser user = new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin);\n        user.setAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES, authorities);\n        return user;\n    }\n    return null;\n}",
                "ClassName": "SpringSecurityUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 13,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.WITH_LINK);\n    assertThat(metaData.getAttributes()).containsValue(\"https://github.com/togglz/togglz/pull/33\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnInfoLinkIfAnnotationPresent",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.singleline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"foo&bar\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=foo\\\\u0026bar\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"foo&bar\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "escapesAmpersandInSinglelineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(false);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "singleline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline(\"%\");\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1%param2=value2\");\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldUseCustomLineSeparator",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true, lineSeparator);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.FeatureAnnotationsTest.ClassLevelGroup result = org.togglz.core.util.FeatureAnnotations.getAnnotation(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT, org.togglz.core.util.FeatureAnnotationsTest.ClassLevelGroup.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationWillReturnClassLevelAnnotation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        A fieldAnnotation = featureClass.getField(feature.name()).getAnnotation(annotationType);\n        A classAnnotation = featureClass.getAnnotation(annotationType);\n        return fieldAnnotation != null ? fieldAnnotation : classAnnotation;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return null;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotation",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"false\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"something\");\n    initialProps.setProperty(\"FEATURE1.param.foo\", \"bar\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.enable();\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(3));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"something\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.foo\"), org.hamcrest.Matchers.is(\"bar\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "enableFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 20,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 63,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNull(state);\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullWhenStateDoesntExist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    givenSomeDataSourceWithAutoCommitSetTo(true);\n    whenTheFeatureIsEnabled();\n    thenTheDatabaseShouldBeUpdated();\n}",
        "ClassName": "JDBCRepositoryAutoCommitTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldUpdateWithAutoCommitEnabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String url = (\"jdbc:h2:mem:\" + this.getClass().getSimpleName()) + java.lang.System.currentTimeMillis();\n    org.h2.jdbcx.JdbcConnectionPool pool = org.h2.jdbcx.JdbcConnectionPool.create(url, \"sa\", \"\");\n    dataSource = new org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitTestDataSource(pool, autoCommit);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(dataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "givenSomeDataSourceWithAutoCommitSetTo",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1).enable().setStrategyId(\"foobar\");\n    repository.setFeatureState(state);\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "whenTheFeatureIsEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1);\n    assertThat(state).isNotNull();\n    assertThat(state.isEnabled()).isTrue();\n    assertThat(state.getStrategyId()).isEqualTo(\"foobar\");\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "thenTheDatabaseShouldBeUpdated",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(\"\");\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").matching(\"[a-z]+\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"uniqueId\");\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n    org.junit.Assert.assertTrue(param.isValid(\"lowercase\"));\n    org.junit.Assert.assertFalse(param.isValid(\"UPPERCASE\"));\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testParameterWithRegularExpression",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(regex, \"regex is required\");\n    this.pattern = java.util.regex.Pattern.compile(regex);\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "matching",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 10000);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    repository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST, true));\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(2)).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verify(delegate).setFeatureState(org.mockito.Mockito.any(org.togglz.core.repository.FeatureState.class));\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 2,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testStateModifyExpiresCache",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 2,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 4,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(new org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureImpl(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1.name()));\n    assertThat(metaData.getLabel()).isEqualTo(\"First feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnMetaDataWhenRequestedWithOtherFeatureImplementation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "OtherFeatureImpl",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(null);\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForNullVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"ROLE_1, ROLE_2, ROLE_3\");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenUserHasNoneOfSelectedRoles",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    boolean result = activationStrategy.isActive(state, null);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 5,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenThereIsNoUser",
        "MinimumCyclomaticComplexity": 5,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 17,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    expectedException.expect(java.lang.AssertionError.class);\n    org.junit.Assert.assertFalse(org.togglz.junit.vary.MyFeatures.F1.isActive());\n}",
        "ClassName": "TogglzRuleWithVariations_EnableSadCase_Test",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.html.HtmlPage page = client.getPage(url + \"jsp-taglib-inverse-test.jsp\");\n    assertThat(page.asText()).contains(\"Feature [INACTIVE_FEATURE] is inactive\").doesNotContain(\"Feature [ACTIVE_FEATURE] is inactive\");\n}",
        "ClassName": "JspTaglibTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldIncludeOrExcludeBodyCorrectlyInverseCondition",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(null);\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenThereIsNoRolesParam",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.activation.UsernameActivationStrategy.ID).contains(org.togglz.core.activation.GradualActivationStrategy.ID).contains(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).contains(org.togglz.core.activation.ReleaseDateActivationStrategy.ID).contains(org.togglz.core.activation.ServerIpActivationStrategy.ID).contains(org.togglz.core.activation.UserRoleActivationStrategy.ID);\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldLoadDefaultStrategies",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.users\", \"chkal,tester\");\n    initialProps.setProperty(\"FEATURE2\", \"false\");\n    initialProps.setProperty(\"FEATURE3\", \"true\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state1 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        org.junit.Assert.assertEquals(true, state1.isEnabled());\n        org.junit.Assert.assertEquals(org.togglz.core.activation.UsernameActivationStrategy.ID, state1.getStrategyId());\n        org.junit.Assert.assertEquals(1, state1.getParameterNames().size());\n        org.junit.Assert.assertEquals(\"chkal,tester\", state1.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n        org.togglz.core.repository.FeatureState state2 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE2);\n        org.junit.Assert.assertEquals(false, state2.isEnabled());\n        org.junit.Assert.assertEquals(null, state2.getStrategyId());\n        org.junit.Assert.assertEquals(0, state2.getParameterNames().size());\n        org.togglz.core.repository.FeatureState state3 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE3);\n        org.junit.Assert.assertEquals(true, state3.isEnabled());\n        org.junit.Assert.assertEquals(null, state2.getStrategyId());\n        org.junit.Assert.assertEquals(0, state3.getParameterNames().size());\n        org.togglz.core.repository.FeatureState state4 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE4);\n        org.junit.Assert.assertNull(state4);\n        state1.disable();\n        repo.setFeatureState(state1);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"false\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(org.togglz.core.activation.UsernameActivationStrategy.ID));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.users\"), org.hamcrest.Matchers.is(\"chkal,tester\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.users\"), org.hamcrest.Matchers.nullValue());\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 2,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "readFeatureStateFromOldFormat",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 15,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 35,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 75,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.google.appengine.api.NamespaceManager.set(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE);\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n            return null;\n        }\n    });\n    repository.getFeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getFeatureStateShouldRunWithinGivenNamespaceWhenCurrentNamespaceIsNotDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "2",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.Work<org.togglz.core.repository.FeatureState>() {\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState run() {\n            return decorated.getFeatureState(feature);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    state.setParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES, java.lang.String.format(\"%s,%s\", org.togglz.servlet.activation.ServerNameActivationStrategyTest.MATCHING_VHOST_NAME, org.togglz.servlet.activation.ServerNameActivationStrategyTest.DIFFERENT_VHOST_NAME));\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isTrue();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForFeatureOnMatchingOneDomainNameFromDomainList",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.enums.EnumFeatureMetaData metaData = new org.togglz.core.metadata.enums.EnumFeatureMetaData(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE);\n    java.util.Set<org.togglz.core.metadata.FeatureGroup> groups = metaData.getGroups();\n    org.junit.Assert.assertThat(groups, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(groups.size(), org.hamcrest.CoreMatchers.is(2));\n    org.togglz.core.metadata.FeatureGroup group1 = com.google.common.collect.Iterables.find(groups, createFeatureGroupLabelPredicate(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.FIELD_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(group1.contains(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n    org.togglz.core.metadata.FeatureGroup group2 = com.google.common.collect.Iterables.find(groups, createFeatureGroupLabelPredicate(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.CLASS_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(group2.contains(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "EnumFeatureMetaDataTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "constructorWillPopulateGroupsFromAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.label = org.togglz.core.util.FeatureAnnotations.getLabel(feature);\n    boolean enabledByDefault = org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(feature);\n    this.defaultFeatureState = new org.togglz.core.repository.FeatureState(feature, enabledByDefault);\n    org.togglz.core.annotation.DefaultActivationStrategy defaultActivationStrategy = org.togglz.core.util.FeatureAnnotations.getAnnotation(feature, org.togglz.core.annotation.DefaultActivationStrategy.class);\n    if (defaultActivationStrategy != null) {\n        this.defaultFeatureState.setStrategyId(defaultActivationStrategy.id());\n        for (org.togglz.core.annotation.ActivationParameter parameter : defaultActivationStrategy.parameters()) {\n            this.defaultFeatureState.setParameter(parameter.name(), parameter.value());\n        }\n    }\n    for (java.lang.annotation.Annotation annotation : org.togglz.core.util.FeatureAnnotations.getAnnotations(feature)) {\n        org.togglz.core.metadata.FeatureGroup group = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(annotation.annotationType());\n        if (group != null) {\n            groups.add(group);\n        }\n        java.lang.String[] attribute = org.togglz.core.util.FeatureAnnotations.getFeatureAttribute(annotation);\n        if (attribute != null) {\n            attributes.put(attribute[0], attribute[1]);\n        }\n    }\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 22,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return groups;\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getGroups",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new com.google.common.base.Predicate<org.togglz.core.metadata.FeatureGroup>() {\n        @java.lang.Override\n        public boolean apply(org.togglz.core.metadata.FeatureGroup group) {\n            return group.getLabel().equals(label);\n        }\n    };\n}",
                "ClassName": "EnumFeatureMetaDataTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createFeatureGroupLabelPredicate",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), true, \"S1\", new org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param(\"one\", \"A\"), new org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param(\"two\", \"B\"));\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertEquals(2, state.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"A\", state.getParameter(\"one\"));\n    org.junit.Assert.assertEquals(\"B\", state.getParameter(\"two\"));\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "withStrategyParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.key = key;\n    this.value = value;\n}",
                "ClassName": "Param",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(name, enabled);\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name + \".strategy\", strategyName);\n    for (org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param param : params) {\n        org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty((name + \".param.\") + param.key, param.value);\n    }\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 44,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1);\n    assertThat(metaData.getAttributes()).doesNotContainValue(\"Christian\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullForOwnerNameByDefault",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroAsAnonymousUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"100\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(110)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAlwaysReturnTrueForOneHundredPercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.ONE.isActive());\n    org.junit.Assert.assertFalse(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.TWO.isActive());\n}",
        "ClassName": "TogglzRuleWithAnnotationTest",
        "Commit": "3ad266a54dd2dbe0bdb198fd14d8159fccb4cb26",
        "CyclomaticComplexity": 0,
        "Date": "Tue, 17 May 2016 06:30:14 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureShouldBeInactiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1463459414",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeFalseIfPropertyDoesNotExist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    userRoles.add(\"ROLE_2\");\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"ROLE_1, ROLE_2, ROLE_3\");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnTrueWhenUserHasAnyOfSelectedRoles",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter[] parameters = strategy.getParameters();\n    org.junit.Assert.assertThat(parameters, org.hamcrest.Matchers.notNullValue());\n    org.junit.Assert.assertThat(parameters.length, org.hamcrest.Matchers.is(1));\n    org.togglz.core.activation.Parameter userParam = parameters[0];\n    org.junit.Assert.assertThat(userParam, org.hamcrest.Matchers.notNullValue());\n    org.junit.Assert.assertThat(userParam.getName(), org.hamcrest.Matchers.is(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCorrectParameterList",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.activation.Parameter[]{ org.togglz.core.activation.ParameterBuilder.create(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS).label(\"Users\").largeText().description(\"A list of users for which the feature is active.\") };\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameters",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(testFile);\n    for (int i = 0; i < NUMBER_OF_FEATURES; i++) {\n        java.lang.String name = \"FEATURE\" + i;\n        org.togglz.core.Feature feature = new org.togglz.core.repository.file.FileBasedStateRepositoryConcurrencyTest.TestFeature(name);\n        final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature).setStrategyId(\"strategy-for-\" + name).setParameter(\"param-of-\" + name, \"some-value-of-\" + name);\n        executor.submit(new java.lang.Runnable() {\n            @java.lang.Override\n            public void run() {\n                repo.setFeatureState(state);\n            }\n        });\n    }\n    executor.shutdown();\n    executor.awaitTermination(5, java.util.concurrent.TimeUnit.SECONDS);\n    for (int i = 0; i < NUMBER_OF_FEATURES; i++) {\n        java.lang.String name = \"FEATURE\" + i;\n        org.togglz.core.repository.file.FileBasedStateRepositoryConcurrencyTest.TestFeature feature = new org.togglz.core.repository.file.FileBasedStateRepositoryConcurrencyTest.TestFeature(name);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(feature);\n        assertThat(state).isNotNull();\n        assertThat(state.getStrategyId()).isEqualTo(\"strategy-for-\" + name);\n        assertThat(state.getParameterMap()).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param-of-\" + name, \"some-value-of-\" + name));\n    }\n}",
        "ClassName": "FileBasedStateRepositoryConcurrencyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 2,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkUnderHeavyLoad",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 2,
        "NumberOfLines": 24,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 11,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "TestFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableMap(this.parameters);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterMap",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 2,
        "TotalNumberOfLines": 73,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.disable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.enable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllEnabledTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testToggleFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.disable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.enable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setStrategyId(\"something\");\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(2));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"something\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setStrategyId",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 17,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 64,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = somebody\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroLoginAsNormalUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=ck\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = true\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledForOneUserWithCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    featureUserProvider.setFeatureUser(null);\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    featureUserProvider.setFeatureUser(new org.togglz.core.user.SimpleFeatureUser(\"admin\", false));\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    featureUserProvider.setFeatureUser(new org.togglz.core.user.SimpleFeatureUser(\"somebody\", false));\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    featureUserProvider.setFeatureUser(null);\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.EXPERIMENTAL));\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.MISSING_STRATEGY));\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.EMPTY_STRATEGY));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testIsActive",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureUser = featureUser;\n}",
                "ClassName": "TestFeatureUserProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"my-strategy\");\n    initialProps.setProperty(\"FEATURE1.param.myparam\", \"some-value\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setParameter(\"other\", \"something-else\");\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(4));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"my-strategy\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.myparam\"), org.hamcrest.Matchers.is(\"some-value\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.other\"), org.hamcrest.Matchers.is(\"something-else\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "addNewProperty",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 68,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).enable();\n    javax.sql.DataSource spyedDataSource = org.mockito.Mockito.spy(dataSource);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(spyedDataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n    org.mockito.Mockito.when(spyedDataSource.getConnection()).thenThrow(new java.sql.SQLException(\"Failed to get a connection\"));\n    repository.setFeatureState(state);\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldPropagateTheExceptionWhenWriteFails",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(new org.togglz.core.repository.jdbc.JDBCStateRepository.Builder(dataSource).tableName(tableName).createTable(createTable).serializer(serializer));\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 53,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> result = org.togglz.core.util.FeatureAnnotations.getAnnotations(org.togglz.core.util.FeatureAnnotationsTest.MyFeature2.FEATURE_WITH_NO_ANNOTATIONS);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.size(), org.hamcrest.CoreMatchers.is(0));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationsWillReturnEmptySetWhenThereAreNoAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 14,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> annotations = new java.util.HashSet<java.lang.annotation.Annotation>();\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        java.lang.annotation.Annotation[] fieldAnnotations = featureClass.getField(feature.name()).getAnnotations();\n        java.lang.annotation.Annotation[] classAnnotations = featureClass.getAnnotations();\n        annotations.addAll(java.util.Arrays.asList(fieldAnnotations));\n        annotations.addAll(java.util.Arrays.asList(classAnnotations));\n        return annotations;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return annotations;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotations",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.feature-enums: i.dont.exist.features\");\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureEnumsClassNotFound",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, org.togglz.core.activation.ScriptEngineActivationStrategyTest.INVALID_JAVASCRIPT);\n    boolean active = strategy.isActive(state, aFeatureUser(\"john\"));\n    assertThat(active).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForInvalidJavaScript",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllDisabledTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testActiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"100x\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForInvalidPercentage",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection authorities = new java.util.ArrayList<org.springframework.security.core.GrantedAuthority>();\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_1\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_2\"));\n    when(authentication.getAuthorities()).thenReturn(authorities);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    java.lang.Object authoritiesAttr = user.getAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES);\n    org.junit.Assert.assertThat(authoritiesAttr, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(authoritiesAttr, org.hamcrest.CoreMatchers.is(java.util.Set.class));\n    java.util.Set<java.lang.String> authoritySet = ((java.util.Set<java.lang.String>) (authoritiesAttr));\n    org.junit.Assert.assertThat(authoritySet.size(), org.hamcrest.CoreMatchers.is(2));\n    org.junit.Assert.assertThat(authoritySet.contains(\"ROLE_1\"), org.hamcrest.CoreMatchers.is(true));\n    org.junit.Assert.assertThat(authoritySet.contains(\"ROLE_2\"), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "SpringSecurityUserProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 13,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getCurrentUserWillCopyAuthoritiesFromAuthenticationIntoFeatureUser",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 13,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 14,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.springframework.security.core.context.SecurityContext context = org.springframework.security.core.context.SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication authentication = context.getAuthentication();\n    if (authentication != null) {\n        java.lang.String name = getUserName(authentication);\n        java.util.Set<java.lang.String> authorities = org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n        boolean featureAdmin = isFeatureAdmin(authentication, authorities);\n        org.togglz.core.user.SimpleFeatureUser user = new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin);\n        user.setAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES, authorities);\n        return user;\n    }\n    return null;\n}",
                "ClassName": "SpringSecurityUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 13,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.Weighted prioMinInt = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return java.lang.Integer.MIN_VALUE;\n        }\n    };\n    org.togglz.core.util.Weighted prio50 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 50;\n        }\n    };\n    java.util.List<org.togglz.core.util.Weighted> list = new java.util.ArrayList<org.togglz.core.util.Weighted>();\n    list.add(prio50);\n    list.add(prioMinInt);\n    java.util.Collections.sort(list, new org.togglz.core.util.Weighted.WeightedComparator());\n    assertThat(list).containsExactly(prioMinInt, prio50);\n}",
        "ClassName": "WeightedTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportMinimumIntValue",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "3",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "4",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "WeightedComparator",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    runPerformanceTest(org.togglz.core.repository.file.FileBasedRepositoryPerformanceTest.PerformanceFeatures.MISSING);\n}",
        "ClassName": "FileBasedRepositoryPerformanceTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "readingMissingFeature",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (int l = 0; l < 6; l++) {\n        long start = java.lang.System.currentTimeMillis();\n        for (int i = 0; i < 100000; i++) {\n            repository.getFeatureState(feature);\n        }\n        long time = java.lang.System.currentTimeMillis() - start;\n        java.lang.System.out.println(((\"Time for \" + feature.name()) + \": \") + time);\n    }\n}",
                "ClassName": "FileBasedRepositoryPerformanceTest",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "runPerformanceTest",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertEquals(0, org.togglz.core.util.Strings.splitAndTrim(null, \",\").size());\n    org.junit.Assert.assertEquals(0, org.togglz.core.util.Strings.splitAndTrim(\"   \", \",\").size());\n    java.util.List<java.lang.String> first = org.togglz.core.util.Strings.splitAndTrim(\"   ,foo\", \",\");\n    org.junit.Assert.assertEquals(1, first.size());\n    org.junit.Assert.assertEquals(\"foo\", first.get(0));\n    java.util.List<java.lang.String> second = org.togglz.core.util.Strings.splitAndTrim(\" foo,,,bar  \", \",\");\n    org.junit.Assert.assertEquals(2, second.size());\n    org.junit.Assert.assertEquals(\"foo\", second.get(0));\n    org.junit.Assert.assertEquals(\"bar\", second.get(1));\n}",
        "ClassName": "StringsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 12,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "splitAndTrim",
        "MinimumCyclomaticComplexity": 3,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 12,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 11,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.util.List<java.lang.String> result = new java.util.ArrayList<java.lang.String>();\n    if (org.togglz.core.util.Strings.isNotBlank(value)) {\n        java.lang.String[] segements = value.split(regex);\n        for (java.lang.String segment : segements) {\n            if (org.togglz.core.util.Strings.isNotBlank(segment)) {\n                result.add(segment.trim());\n            }\n        }\n    }\n    return result;\n}",
                "ClassName": "Strings",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "splitAndTrim",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.manager.EnumBasedFeatureProvider(null);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForNull",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    assertThat(manager.getFeatures()).contains(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS, org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.EXPERIMENTAL, org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.MISSING_STRATEGY);\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.appengine.repository.FixedNamespaceStateRepository(\"\", mockedStateRepository);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAcceptEmptyNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 5,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 5,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"0\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(110)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAlwaysReturnFalseForZeroPercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", org.togglz.core.activation.UsernameActivationStrategy.ID);\n    initialProps.setProperty(\"FEATURE1.param.users\", \"chkal,tester\");\n    initialProps.setProperty(\"FEATURE2\", \"false\");\n    initialProps.setProperty(\"FEATURE3\", \"true\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        repo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1, false));\n        repo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE2, true).setStrategyId(\"some-strategy\").setParameter(\"myparam\", \"myvalue\"));\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(5));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"false\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE2\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE2.strategy\"), org.hamcrest.Matchers.is(\"some-strategy\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE2.param.myparam\"), org.hamcrest.Matchers.is(\"myvalue\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE3\"), org.hamcrest.Matchers.is(\"true\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "updateMultipleStates",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 23,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 49,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    counter++;\n    switch (counter) {\n        case 1 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        case 2 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        case 3 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        case 4 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        default :\n            org.junit.Assert.fail(\"Incorrect execution cound\");\n    }\n}",
        "ClassName": "TogglzRuleWithVariations_CalledMultipleTimes_Test",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 13,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 27,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline(\"\\n\");\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"foo\\r\\nbar\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=foo\\\\r\\\\nbar\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"foo\\r\\nbar\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "escapesNewLineInMultilineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true, lineSeparator);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), false);\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(false, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReadFalseStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name, java.lang.Boolean.toString(enabled));\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 42,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 0, NULL, NULL)\");\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(false, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.lang.String sql = \"SELECT FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE% WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement statement = connection.prepareStatement(insertTableName(sql));\n            try {\n                statement.setString(1, feature.name());\n                java.sql.ResultSet resultSet = statement.executeQuery();\n                try {\n                    if (resultSet.next()) {\n                        boolean enabled = resultSet.getInt(org.togglz.core.repository.jdbc.Columns.FEATURE_ENABLED) > 0;\n                        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature, enabled);\n                        java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                        if (org.togglz.core.util.Strings.isNotBlank(strategyId)) {\n                            state.setStrategyId(strategyId.trim());\n                        }\n                        java.lang.String paramData = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS);\n                        if (org.togglz.core.util.Strings.isNotBlank(paramData)) {\n                            java.util.Map<java.lang.String, java.lang.String> params = serializer.deserialize(paramData);\n                            for (java.util.Map.Entry<java.lang.String, java.lang.String> param : params.entrySet()) {\n                                state.setParameter(param.getKey(), param.getValue());\n                            }\n                        }\n                        return state;\n                    }\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to fetch the feature's state from the database\", e);\n    }\n    return null;\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 40,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 69,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.spring.test.proxy.SomeService someService = ((org.togglz.spring.test.proxy.SomeService) (getSpringBean(\"someServiceManuallySetProxyType\")));\n    org.junit.Assert.assertNotNull(someService);\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.spring.test.proxy.ProxyFeatures.SERVICE_TOGGLE, false));\n    org.junit.Assert.assertEquals(\"I'm SomeServiceInactive\", someService.whoAreYou());\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.spring.test.proxy.ProxyFeatures.SERVICE_TOGGLE, true));\n    org.junit.Assert.assertEquals(\"I'm SomeServiceActive\", someService.whoAreYou());\n}",
        "ClassName": "FeatureProxyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testProxyWithManuallySetProxyType",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.springframework.web.context.WebApplicationContext applicationContext = org.springframework.web.context.ContextLoader.getCurrentWebApplicationContext();\n    return applicationContext.getBean(name);\n}",
                "ClassName": "FeatureProxyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getSpringBean",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroWithCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider().addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class).addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getFeatures()).hasSize(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.values().length + org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.values().length).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCombinedFeatureListForMultipleEnums",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if ((featureEnum == null) || (!featureEnum.isEnum())) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnum argument must be an enum\");\n    }\n    addFeatures(java.util.Arrays.asList(featureEnum.getEnumConstants()));\n    return this;\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addFeatureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.feature-manager-name: Custom Feature Manager Name\");\n    org.junit.Assert.assertEquals(\"Custom Feature Manager Name\", this.context.getBean(org.togglz.core.manager.FeatureManager.class).getName());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customFeatureManagerName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setState(\"foo.bar\", \"foobar\");\n    java.lang.System.setProperty(\"foo.bar\", \"foobar\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeTrueIfPropertyStringsMatch",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.SystemPropertyActivationStrategyTest.ScriptFeature.FEATURE).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME, propName).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE, propValue).setStrategyId(org.togglz.core.activation.SystemPropertyActivationStrategy.ID);\n}",
                "ClassName": "SystemPropertyActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.FeatureStateTest.Features.FEATURE1);\n    org.junit.Assert.assertThat(state.isEnabled(), org.hamcrest.Matchers.is(false));\n    org.junit.Assert.assertThat(state.getParameterNames(), org.hamcrest.Matchers.empty());\n    state.enable();\n    org.junit.Assert.assertThat(state.isEnabled(), org.hamcrest.Matchers.is(true));\n    state.setParameter(\"foo\", \"bar\");\n    org.junit.Assert.assertThat(state.getParameterNames().size(), org.hamcrest.Matchers.is(1));\n    org.junit.Assert.assertThat(state.getParameter(\"foo\"), org.hamcrest.Matchers.is(\"bar\"));\n    state.setParameter(\"foo\", null);\n    org.junit.Assert.assertThat(state.getParameterNames().size(), org.hamcrest.Matchers.is(0));\n}",
        "ClassName": "FeatureStateTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSimpleFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(\"test,alpha,dev,uat,rc1\");\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseWhenNoneOfTheVersionsMatchTheServerCurrentVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    when(featureManager.isActive(featureNamed(\"test\"))).thenReturn(true);\n    org.togglz.core.util.FeatureMap map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map.get(new org.togglz.core.util.NamedFeature(\"test\"))).isEqualTo(true);\n    assertThat(map.get(new org.togglz.core.util.NamedFeature(\"other\"))).isEqualTo(false);\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportLookupByFeatureInstance",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.mockito.Matchers.argThat(new org.hamcrest.BaseMatcher<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(java.lang.Object obj) {\n            if (obj instanceof org.togglz.core.Feature) {\n                return ((org.togglz.core.Feature) (obj)).name().equals(name);\n            }\n            return false;\n        }\n\n        @java.lang.Override\n        public void describeTo(org.hamcrest.Description desc) {\n            desc.appendText(\"Does not match: \" + name);\n        }\n    });\n}",
                "ClassName": "FeatureMapTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(key, \"The feature must not be null\");\n    org.togglz.core.Feature feature = null;\n    if (key instanceof org.togglz.core.Feature) {\n        feature = ((org.togglz.core.Feature) (key));\n    } else {\n        feature = new org.togglz.core.util.NamedFeature(key.toString());\n    }\n    return manager.isActive(feature);\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 32,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").doesNotContain(org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy.class.getSimpleName()).doesNotContain(org.togglz.core.activation.DefaultActivationStrategyProviderTest.AnotherCustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldNotContainCustomStrategyIfNotAdded",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1).enable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(repository.kind(), org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1.name());\n    final com.google.appengine.api.datastore.Entity featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(true, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertEquals(\"someId\", featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"param\")));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"foo\")));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(kind(), featureState.getFeature().name());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, featureState.isEnabled());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, featureState.getStrategyId());\n    final java.util.Map<java.lang.String, java.lang.String> params = featureState.getParameterMap();\n    if ((params != null) && (!params.isEmpty())) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>(params.size());\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>(params.size());\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    putInsideTransaction(featureEntity);\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 38,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).enable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(1, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"someId\", query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"param=foo\", query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 84,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"99\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(98)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(199)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkCorrectlyForNinetyNinePercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllEnabledTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testActiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=other\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledForOneUserWithOtherUsers",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.annotation.EnabledByDefault result = org.togglz.core.util.FeatureAnnotations.getAnnotation(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT, org.togglz.core.annotation.EnabledByDefault.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationWillReturnFieldLevelAnnotation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        A fieldAnnotation = featureClass.getField(feature.name()).getAnnotation(annotationType);\n        A classAnnotation = featureClass.getAnnotation(annotationType);\n        return fieldAnnotation != null ? fieldAnnotation : classAnnotation;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return null;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotation",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection<java.lang.String> userRoles = new java.util.ArrayList<java.lang.String>();\n    userRoles.add(\"SOME_ROLE\");\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"SOME_ROLE\");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "doesntFailForOtherCollectionTypes",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.repository.MemcacheStateRepository repository = new org.togglz.appengine.repository.MemcacheStateRepository(delegate);\n    for (int i = 0; i < 10; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n    org.junit.Assert.assertTrue(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n}",
        "ClassName": "MemcacheStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfReadOperationsWithTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.delegate = delegate;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = ((org.togglz.core.repository.FeatureState) (cache.get(key(feature.name()))));\n    if (state == null) {\n        state = delegate.getFeatureState(feature);\n        cache.put(key(feature.name()), state, getExpiration());\n    }\n    return state;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.MemcacheStateRepository.KEY_PREFIX + featureName;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "key",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.console.path: /custom\");\n    org.junit.Assert.assertEquals(1, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertTrue(this.context.getBean(org.springframework.boot.context.embedded.ServletRegistrationBean.class).getUrlMappings().contains(\"/custom/*\"));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customConsolePath",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    state.setParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS, getMachineIP());\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(true, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForFeatureOnCorrectMachine",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Enumeration<java.net.NetworkInterface> interfaces = java.net.NetworkInterface.getNetworkInterfaces();\n        if (interfaces != null) {\n            while (interfaces.hasMoreElements()) {\n                java.util.Enumeration<java.net.InetAddress> addresses = interfaces.nextElement().getInetAddresses();\n                if (addresses != null) {\n                    while (addresses.hasMoreElements()) {\n                        java.lang.String hostAddress = addresses.nextElement().getHostAddress();\n                        if (hostAddress != null) {\n                            return hostAddress.trim();\n                        }\n                    } \n                }\n            } \n        }\n        return null;\n    } catch (java.net.SocketException e) {\n        return \"<no-ip>\";\n    }\n}",
                "ClassName": "IPActivationStrategyTest",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "getMachineIP",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 21,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 9,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 55,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ck\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID).setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"person1,ck,person2\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(true, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 36,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    manager.disable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldToggleIndividualFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    activeFeatures.add(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.remove(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enable(new org.togglz.core.util.NamedFeature(\"ONE\"));\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    manager.disable(new org.togglz.core.util.NamedFeature(\"ONE\"));\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportTogglingUntypedFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.add(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.remove(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    helper.setEnvIsLoggedIn(false);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertNull(user);\n}",
        "ClassName": "UserServiceUserProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "userIsNotLoggedIn",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.user.SimpleFeatureUser featureUser = null;\n    com.google.appengine.api.users.User user = userService.getCurrentUser();\n    if (user != null) {\n        featureUser = new org.togglz.core.user.SimpleFeatureUser(user.getUserId(), userService.isUserAdmin());\n        featureUser.setAttribute(\"email\", user.getEmail());\n        featureUser.setAttribute(\"nickname\", user.getNickname());\n    }\n    return featureUser;\n}",
                "ClassName": "UserServiceUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.cache.enabled: true\");\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.cache.CachingStateRepository);\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "cacheEnabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.google.appengine.api.NamespaceManager.set(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE);\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            return null;\n        }\n    });\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n    repository.getFeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFallbackToOriginalNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 18,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "5",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.VoidWork() {\n        @java.lang.Override\n        void vrun() {\n            decorated.setFeatureState(featureState);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.Work<org.togglz.core.repository.FeatureState>() {\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState run() {\n            return decorated.getFeatureState(feature);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 41,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertTrue(manager.isActive(new org.togglz.core.util.NamedFeature(\"ONE\")));\n    manager.disable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertFalse(manager.isActive(new org.togglz.core.util.NamedFeature(\"ONE\")));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportReadingWithNamedFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.add(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.remove(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldDetectMissingTable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 22,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Map<java.lang.String, java.lang.String> initialData = new java.util.HashMap<>();\n    initialData.put(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TEST_ZNODE + \"/FEATURE\", \"{\\\"enabled\\\":true,\\\"strategyId\\\":null,\\\"parameters\\\":{}}\");\n    setupTestWithData(initialData);\n    org.togglz.core.repository.FeatureState expectedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    expectedFeatureState.setEnabled(true);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(reflectionEquals(expectedFeatureState, loadedFeatureState), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "ZookeeperStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testLoadingWithSavedState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    serverClientPair = org.togglz.zookeeper.ZookeeperStateRepositoryTest.startServer(initialParameters);\n    stateRepository = org.togglz.zookeeper.ZookeeperStateRepository.newBuilder(serverClientPair.client, org.togglz.zookeeper.ZookeeperStateRepositoryTest.TEST_ZNODE).build();\n}",
                "ClassName": "ZookeeperStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setupTestWithData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = states.get(feature.name());\n    if (wrapper != null) {\n        return featureStateForWrapper(feature, wrapper);\n    }\n    return null;\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 1
    },
    {
        "Body": "{\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isFalse();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyDomainList",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 9,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 0, NULL, NULL)\");\n    javax.sql.DataSource spyedDataSource = org.mockito.Mockito.spy(dataSource);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(spyedDataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n    org.mockito.Mockito.when(spyedDataSource.getConnection()).thenThrow(new java.sql.SQLException(\"Failed to get a connection\"));\n    repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1);\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 15,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldPropagateTheExceptionWhenReadFails",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(new org.togglz.core.repository.jdbc.JDBCStateRepository.Builder(dataSource).tableName(tableName).createTable(createTable).serializer(serializer));\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.lang.String sql = \"SELECT FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE% WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement statement = connection.prepareStatement(insertTableName(sql));\n            try {\n                statement.setString(1, feature.name());\n                java.sql.ResultSet resultSet = statement.executeQuery();\n                try {\n                    if (resultSet.next()) {\n                        boolean enabled = resultSet.getInt(org.togglz.core.repository.jdbc.Columns.FEATURE_ENABLED) > 0;\n                        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature, enabled);\n                        java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                        if (org.togglz.core.util.Strings.isNotBlank(strategyId)) {\n                            state.setStrategyId(strategyId.trim());\n                        }\n                        java.lang.String paramData = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS);\n                        if (org.togglz.core.util.Strings.isNotBlank(paramData)) {\n                            java.util.Map<java.lang.String, java.lang.String> params = serializer.deserialize(paramData);\n                            for (java.util.Map.Entry<java.lang.String, java.lang.String> param : params.entrySet()) {\n                                state.setParameter(param.getKey(), param.getValue());\n                            }\n                        }\n                        return state;\n                    }\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to fetch the feature's state from the database\", e);\n    }\n    return null;\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 40,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 63,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n}",
        "ClassName": "ThreadLocalFeatureManagerProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "firstTest",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.UNKNOWN_LANGUAGE, org.togglz.core.activation.ScriptEngineActivationStrategyTest.SOME_SCRIPT);\n    boolean active = strategy.isActive(state, aFeatureUser(\"john\"));\n    assertThat(active).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForUnsupportedLanguage",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class, org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getFeatures()).hasSize(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.values().length + org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.values().length).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCombinedFeatureListForMultipleEnumsViaConstructor",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.singleline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"foo\\r\\nbar\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=foo\\\\r\\\\nbar\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"foo\\r\\nbar\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "escapesNewLineInSinglelineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(false);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "singleline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.ONE.isActive());\n    org.junit.Assert.assertFalse(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.TWO.isActive());\n}",
        "ClassName": "TogglzRuleWithAnnotationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureShouldBeActiveWithAnnotation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = null;\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID).setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"person1,ck,person2\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForUnknownUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 32,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 0);\n    for (int i = 0; i < 10; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfReadOperationsWithoutTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityWithSomeOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.Weighted prioMaxInt = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return java.lang.Integer.MAX_VALUE;\n        }\n    };\n    org.togglz.core.util.Weighted prio50 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 50;\n        }\n    };\n    java.util.List<org.togglz.core.util.Weighted> list = new java.util.ArrayList<org.togglz.core.util.Weighted>();\n    list.add(prioMaxInt);\n    list.add(prio50);\n    java.util.Collections.sort(list, new org.togglz.core.util.Weighted.WeightedComparator());\n    assertThat(list).containsExactly(prio50, prioMaxInt);\n}",
        "ClassName": "WeightedTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportMaximumIntValue",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "5",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "6",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "WeightedComparator",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    state.setParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES, org.togglz.servlet.activation.ServerNameActivationStrategyTest.MATCHING_VHOST_NAME);\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isTrue();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForFeatureOnMatchingDomainName",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.repository.cache.CachingStateRepository(delegate, -1);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForNegativeTtl",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertThat(activationStrategy.getId(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.ID));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getIdWillReturnConstant",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.activation.UserRoleActivationStrategy.ID;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"50\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(25)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(49)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(50)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFindCorrectDecisionForIntermediateValues",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    crepo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertNull(repo1.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1));\n    org.junit.Assert.assertTrue(repo2.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureLAST",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : setterSelection.getSelected(repositories)) {\n        repository.setFeatureState(featureState);\n    }\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F1.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F2.isActive() || (!org.togglz.junit.vary.MyFeatures.F2.isActive()));\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F3.isActive() || (!org.togglz.junit.vary.MyFeatures.F3.isActive()));\n}",
        "ClassName": "TogglzRuleWithVariations_HappyCase_Test",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature;true;Group1\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isTrue();\n    assertThat(metadata.getGroups()).hasSize(1).areExactly(1, groupNamed(\"Group1\"));\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithSingleGroup",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.metadata.FeatureGroup>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.metadata.FeatureGroup value) {\n            return (value != null) && value.getLabel().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "groupNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isFalse();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithOnlyLabel",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.DefaultActivationStrategyProvider provider = new org.togglz.core.activation.DefaultActivationStrategyProvider();\n    org.togglz.core.manager.FeatureManagerBuilder.begin().featureEnum(org.togglz.core.manager.FeatureManagerBuilderTest.Features.class).activationStrategyProvider(provider).activationStrategy(new org.togglz.core.manager.FeatureManagerBuilderTest.CustomActivationStrategy()).build();\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.manager.FeatureManagerBuilderTest.CustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "FeatureManagerBuilderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAddStrategyIfUsingDefaultProvider",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (org.togglz.core.spi.ActivationStrategy activationStrategy : java.util.ServiceLoader.load(org.togglz.core.spi.ActivationStrategy.class)) {\n        strategies.add(activationStrategy);\n    }\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (strategyProvider instanceof org.togglz.core.activation.DefaultActivationStrategyProvider) {\n        ((org.togglz.core.activation.DefaultActivationStrategyProvider) (strategyProvider)).addActivationStrategy(strategy);\n        return this;\n    }\n    throw new java.lang.IllegalStateException(\"Adding ActivationStrategies is only allowed when using \" + org.togglz.core.activation.DefaultActivationStrategyProvider.class.getSimpleName());\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyProvider = strategyProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategyProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.manager.FeatureManagerBuilder();\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "begin",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"foo\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setStrategyId(null);\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(1));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "removeStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 17,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 64,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzEndpointTest.FeatureProviderConfig.class }, \"togglz.features.FEATURE_ONE: true\", \"togglz.features.FEATURE_TWO: false\", \"togglz.features.FEATURE_TWO.strategy: release-date\", \"togglz.features.FEATURE_TWO.param.date: 2016-07-01\", \"togglz.features.FEATURE_TWO.param.time: 08:30:00\");\n    org.togglz.spring.boot.autoconfigure.TogglzEndpoint endpoint = this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class);\n    java.util.List<org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature> features = endpoint.invoke();\n    org.junit.Assert.assertEquals(2, features.size());\n    org.junit.Assert.assertEquals(\"FEATURE_ONE\", features.get(0).getName());\n    org.junit.Assert.assertTrue(features.get(0).isEnabled());\n    org.junit.Assert.assertNull(features.get(0).getStrategy());\n    org.junit.Assert.assertEquals(0, features.get(0).getParams().size());\n    org.junit.Assert.assertEquals(\"FEATURE_TWO\", features.get(1).getName());\n    org.junit.Assert.assertFalse(features.get(1).isEnabled());\n    org.junit.Assert.assertEquals(\"release-date\", features.get(1).getStrategy());\n    org.junit.Assert.assertEquals(2, features.get(1).getParams().size());\n    org.junit.Assert.assertEquals(\"2016-07-01\", features.get(1).getParams().get(\"date\"));\n    org.junit.Assert.assertEquals(\"08:30:00\", features.get(1).getParams().get(\"time\"));\n}",
        "ClassName": "TogglzEndpointTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "invoke",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.context.annotation.AnnotationConfigApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzEndpointTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.util.List<org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature> features = new java.util.ArrayList<org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature>();\n    for (org.togglz.core.Feature feature : this.featureManager.getFeatures()) {\n        org.togglz.core.repository.FeatureState featureState = this.featureManager.getFeatureState(feature);\n        features.add(new org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature(feature, featureState));\n    }\n    return features;\n}",
                "ClassName": "TogglzEndpoint",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 1,
                "MethodName": "invoke",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return name;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getName",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategy;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return params;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParams",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 26,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1).disable();\n    repository.setFeatureState(state);\n    final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(repository.kind(), org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1.name());\n    final com.google.appengine.api.datastore.Entity featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(false, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertNull(featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertNull(featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES));\n    org.junit.Assert.assertNull(featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateWithoutStrategyOrParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(kind(), featureState.getFeature().name());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, featureState.isEnabled());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, featureState.getStrategyId());\n    final java.util.Map<java.lang.String, java.lang.String> params = featureState.getParameterMap();\n    if ((params != null) && (!params.isEmpty())) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>(params.size());\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>(params.size());\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    putInsideTransaction(featureEntity);\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 26,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    when(featureManager.isActive(featureNamed(\"test\"))).thenReturn(true);\n    org.togglz.core.util.FeatureMap map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map.get(\"test\")).isEqualTo(true);\n    assertThat(map.get(\"other\")).isEqualTo(false);\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportLookupByFeatureName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.mockito.Matchers.argThat(new org.hamcrest.BaseMatcher<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(java.lang.Object obj) {\n            if (obj instanceof org.togglz.core.Feature) {\n                return ((org.togglz.core.Feature) (obj)).name().equals(name);\n            }\n            return false;\n        }\n\n        @java.lang.Override\n        public void describeTo(org.hamcrest.Description desc) {\n            desc.appendText(\"Does not match: \" + name);\n        }\n    });\n}",
                "ClassName": "FeatureMapTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(key, \"The feature must not be null\");\n    org.togglz.core.Feature feature = null;\n    if (key instanceof org.togglz.core.Feature) {\n        feature = ((org.togglz.core.Feature) (key));\n    } else {\n        feature = new org.togglz.core.util.NamedFeature(key.toString());\n    }\n    return manager.isActive(feature);\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    givenSomeDataSourceWithAutoCommitSetTo(false);\n    whenTheFeatureIsEnabled();\n    thenTheDatabaseShouldBeUpdated();\n}",
        "ClassName": "JDBCRepositoryAutoCommitTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldUpdateWithAutoCommitDisabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String url = (\"jdbc:h2:mem:\" + this.getClass().getSimpleName()) + java.lang.System.currentTimeMillis();\n    org.h2.jdbcx.JdbcConnectionPool pool = org.h2.jdbcx.JdbcConnectionPool.create(url, \"sa\", \"\");\n    dataSource = new org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitTestDataSource(pool, autoCommit);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(dataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "givenSomeDataSourceWithAutoCommitSetTo",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1).enable().setStrategyId(\"foobar\");\n    repository.setFeatureState(state);\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "whenTheFeatureIsEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1);\n    assertThat(state).isNotNull();\n    assertThat(state.isEnabled()).isTrue();\n    assertThat(state.getStrategyId()).isEqualTo(\"foobar\");\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "thenTheDatabaseShouldBeUpdated",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n        org.junit.Assert.assertFalse(updater.isSchemaVersion1());\n        updater.migrateToVersion1();\n        org.junit.Assert.assertTrue(updater.isSchemaVersion1());\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldDetectVersion1",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return columnExists(org.togglz.core.repository.jdbc.Columns.FEATURE_NAME) && (!columnExists(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID));\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isSchemaVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"CREATE TABLE %TABLE% (FEATURE_NAME VARCHAR(100) PRIMARY KEY, FEATURE_ENABLED INTEGER, FEATURE_USERS VARCHAR(2000))\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 28,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"var len = user.name.length();\\r\\n len % 2 == 0;\\n\");\n    assertThat(strategy.isActive(state, aFeatureUser(\"john\"))).isTrue();\n    assertThat(strategy.isActive(state, aFeatureUser(\"jim\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportMultilineScripts",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user?user=ck\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = ck\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = true\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureAdminFlagForAdminUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.Feature feature = new org.togglz.core.util.NamedFeature(\"SAMPLE_FEATURE\");\n    org.togglz.core.repository.FeatureState featureState = new org.togglz.core.repository.FeatureState(feature, true);\n    stateRepository.setFeatureState(featureState);\n    org.togglz.core.repository.FeatureState storedFeatureState = stateRepository.getFeatureState(feature);\n    org.junit.Assert.assertTrue(storedFeatureState.isEnabled());\n    org.junit.Assert.assertTrue(org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(featureState, storedFeatureState, true));\n    featureState.setEnabled(false);\n    stateRepository.setFeatureState(featureState);\n    storedFeatureState = stateRepository.getFeatureState(feature);\n    org.junit.Assert.assertFalse(storedFeatureState.isEnabled());\n    org.junit.Assert.assertTrue(org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(featureState, storedFeatureState, true));\n}",
        "ClassName": "HazelcastStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureStateExistingInMap",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"my-strategy\");\n    initialProps.setProperty(\"FEATURE1.param.myparam\", \"some-value\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setParameter(\"myparam\", null);\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(2));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"my-strategy\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "removeProperty",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 68,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enableAll();\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.TWO));\n    manager.disableAll();\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.TWO));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldToggleAllFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (org.togglz.core.Feature feature : featureEnum.getEnumConstants()) {\n        enable(feature);\n    }\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "enableAll",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.clear();\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disableAll",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    junit.framework.Assert.assertEquals(false, org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITH_LABEL));\n    junit.framework.Assert.assertEquals(false, org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITHOUT_LABEL));\n    junit.framework.Assert.assertEquals(true, org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testIsEnabledByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.util.FeatureAnnotations.isAnnotationPresent(feature, org.togglz.core.annotation.EnabledByDefault.class);\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabledByDefault",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.FeatureGroup result = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.FieldLevelGroup.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.getLabel(), org.hamcrest.CoreMatchers.is(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.FIELD_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(result.contains(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "AnnotationFeatureGroupTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "buildWillReturnFeatureGroupWhenFeatureGroupAnnotationIsPresentForFieldLevelGroup",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (groupAnnotation.isAnnotationPresent(org.togglz.core.annotation.FeatureGroup.class)) {\n        return new org.togglz.core.metadata.enums.AnnotationFeatureGroup(groupAnnotation);\n    }\n    return null;\n}",
                "ClassName": "AnnotationFeatureGroup",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.appengine.repository.FixedNamespaceStateRepository(\"\", null);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldNotAcceptNullDecorated",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 5,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 5,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    runPerformanceTest(org.togglz.core.repository.file.FileBasedRepositoryPerformanceTest.PerformanceFeatures.EXISTING);\n}",
        "ClassName": "FileBasedRepositoryPerformanceTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "readingExistingFeature",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (int l = 0; l < 6; l++) {\n        long start = java.lang.System.currentTimeMillis();\n        for (int i = 0; i < 100000; i++) {\n            repository.getFeatureState(feature);\n        }\n        long time = java.lang.System.currentTimeMillis() - start;\n        java.lang.System.out.println(((\"Time for \" + feature.name()) + \": \") + time);\n    }\n}",
                "ClassName": "FileBasedRepositoryPerformanceTest",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "runPerformanceTest",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user?user=other\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = other\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = false\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureAdminFlagForOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setupTestWithEmptyDatastore();\n    org.junit.Assert.assertNull(stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE));\n    stateRepository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE));\n    org.junit.Assert.assertNotNull(stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE));\n}",
        "ClassName": "ZookeeperStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureSavingAndLoading",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    setupTestWithData(java.util.Collections.EMPTY_MAP);\n}",
                "ClassName": "ZookeeperStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setupTestWithEmptyDatastore",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = states.get(feature.name());\n    if (wrapper != null) {\n        return featureStateForWrapper(feature, wrapper);\n    }\n    return null;\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = wrapperForFeatureState(featureState);\n    try {\n        java.lang.String json = org.togglz.zookeeper.ZookeeperStateRepository.objectMapper.writeValueAsString(wrapper);\n        java.lang.String path = (featuresZnode + \"/\") + featureState.getFeature().name();\n        curatorFramework.createContainers(path);\n        curatorFramework.setData().forPath(path, json.getBytes(\"UTF-8\"));\n        states.put(featureState.getFeature().name(), wrapper);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 25,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = manager.getFeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS);\n    org.junit.Assert.assertEquals(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(\"admin\", state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    junit.framework.Assert.assertEquals(\"Some feature with a label\", org.togglz.core.util.FeatureAnnotations.getLabel(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITH_LABEL));\n    junit.framework.Assert.assertEquals(\"FEATURE_WITHOUT_LABEL\", org.togglz.core.util.FeatureAnnotations.getLabel(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITHOUT_LABEL));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetLabel",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.annotation.Label label = org.togglz.core.util.FeatureAnnotations.getAnnotation(feature, org.togglz.core.annotation.Label.class);\n    if (label != null) {\n        return label.value();\n    }\n    return feature.name();\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getLabel",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.FeatureGroup result = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.ClassLevelGroup.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.getLabel(), org.hamcrest.CoreMatchers.is(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.CLASS_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(result.contains(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "AnnotationFeatureGroupTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "buildWillReturnFeatureGroupWhenFeatureGroupAnnotationIsPresentForClassLevelGroup",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (groupAnnotation.isAnnotationPresent(org.togglz.core.annotation.FeatureGroup.class)) {\n        return new org.togglz.core.metadata.enums.AnnotationFeatureGroup(groupAnnotation);\n    }\n    return null;\n}",
                "ClassName": "AnnotationFeatureGroup",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.context.FeatureContext.clearCache();\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.enabled: false\");\n    org.junit.Assert.assertNull(org.togglz.core.context.FeatureContext.getFeatureManagerOrNull());\n    org.junit.Assert.assertNull(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.manager.FeatureManager.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.spi.ActivationStrategy.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.repository.StateRepository.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.user.UserProvider.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).size());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "disabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.context.FeatureContext.cache.clear();\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "clearCache",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.core.context.FeatureContext.getContextClassLoader();\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.cache.get(classLoader);\n    if (featureManager != null) {\n        return featureManager;\n    }\n    featureManager = org.togglz.core.context.FeatureContext.findFeatureManagerInClassLoader(classLoader);\n    if (featureManager != null) {\n        org.togglz.core.manager.FeatureManager previousFeatureManager = org.togglz.core.context.FeatureContext.cache.putIfAbsent(classLoader, featureManager);\n        if (previousFeatureManager != null) {\n            return previousFeatureManager;\n        }\n    }\n    return featureManager;\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManagerOrNull",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.endpoint.sensitive: false\");\n    org.junit.Assert.assertFalse(this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).isSensitive());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "endpointNotSensitive",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider featureProvider = mock(org.togglz.core.spi.FeatureProvider.class);\n    org.togglz.core.metadata.FeatureMetaData featureMetaData = mock(org.togglz.core.metadata.FeatureMetaData.class);\n    when(featureMetaData.getDefaultFeatureState()).thenReturn(new org.togglz.core.repository.FeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE, true));\n    when(featureProvider.getMetaData(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE)).thenReturn(featureMetaData);\n    org.togglz.core.manager.FeatureManager manager = new org.togglz.core.manager.FeatureManagerBuilder().featureEnum(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.class).stateRepository(repository).featureProvider(featureProvider).userProvider(featureUserProvider).build();\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testIsActiveUsingDefaultFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.userProvider = userProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "userProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureProvider = featureProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.stateRepository = stateRepository;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "stateRepository",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    helper.setEnvIsLoggedIn(true).setEnvEmail(\"user@togglz.org\").setEnvAuthDomain(\"togglz.org\");\n    com.google.appengine.api.users.UserService userService = com.google.appengine.api.users.UserServiceFactory.getUserService();\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertFalse(user.isFeatureAdmin());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getUserId(), user.getName());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getEmail(), user.getAttribute(\"email\"));\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getNickname(), user.getAttribute(\"nickname\"));\n}",
        "ClassName": "UserServiceUserProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "userIsLoggedIn",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.user.SimpleFeatureUser featureUser = null;\n    com.google.appengine.api.users.User user = userService.getCurrentUser();\n    if (user != null) {\n        featureUser = new org.togglz.core.user.SimpleFeatureUser(user.getUserId(), userService.isUserAdmin());\n        featureUser.setAttribute(\"email\", user.getEmail());\n        featureUser.setAttribute(\"nickname\", user.getNickname());\n    }\n    return featureUser;\n}",
                "ClassName": "UserServiceUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.CURRENT_VERSION + \",alpha,dev,uat\");\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertTrue(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueWhenAtLeastOneOfTheVersionsMatchServerCurrentVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\").largeText();\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertTrue(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testLargeTextParameter",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.largeText = true;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "largeText",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"user.name == 'john'\");\n    assertThat(strategy.isActive(state, aFeatureUser(\"john\"))).isTrue();\n    assertThat(strategy.isActive(state, aFeatureUser(\"jim\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "scriptCanAccessCurrentUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider featureProvider = mock(org.togglz.core.spi.FeatureProvider.class);\n    org.togglz.core.metadata.FeatureMetaData featureMetaData = mock(org.togglz.core.metadata.FeatureMetaData.class);\n    when(featureMetaData.getDefaultFeatureState()).thenReturn(new org.togglz.core.repository.FeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE, true));\n    when(featureProvider.getMetaData(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE)).thenReturn(featureMetaData);\n    org.togglz.core.manager.FeatureManager manager = new org.togglz.core.manager.FeatureManagerBuilder().featureEnum(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.class).stateRepository(repository).featureProvider(featureProvider).userProvider(featureUserProvider).build();\n    org.togglz.core.repository.FeatureState state = manager.getFeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE);\n    org.junit.Assert.assertEquals(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureStateUsingDefaultFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.userProvider = userProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "userProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureProvider = featureProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.stateRepository = stateRepository;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "stateRepository",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo2.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertTrue(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureInSecondBackingRepo",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\").optional();\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertTrue(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testOptionalParameter",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.optional = true;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "optional",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyIPlist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 26,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"1\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(110)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkCorrectlyForOnePercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class, null);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForArrayWithNull",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setupTestWithEmptyDatastore();\n    org.togglz.core.repository.FeatureState savedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    savedFeatureState.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n    savedFeatureState.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"user1, user2, user3\");\n    stateRepository.setFeatureState(savedFeatureState);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(reflectionEquals(savedFeatureState, loadedFeatureState), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "ZookeeperStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testActivationStrategySavingAndLoading",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    setupTestWithData(java.util.Collections.EMPTY_MAP);\n}",
                "ClassName": "ZookeeperStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setupTestWithEmptyDatastore",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = wrapperForFeatureState(featureState);\n    try {\n        java.lang.String json = org.togglz.zookeeper.ZookeeperStateRepository.objectMapper.writeValueAsString(wrapper);\n        java.lang.String path = (featuresZnode + \"/\") + featureState.getFeature().name();\n        curatorFramework.createContainers(path);\n        curatorFramework.setData().forPath(path, json.getBytes(\"UTF-8\"));\n        states.put(featureState.getFeature().name(), wrapper);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = states.get(feature.name());\n    if (wrapper != null) {\n        return featureStateForWrapper(feature, wrapper);\n    }\n    return null;\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n}",
        "ClassName": "ThreadLocalFeatureManagerProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "secondTest",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class });\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    java.util.Set<org.togglz.core.Feature> features = featureManager.getFeatures();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertSame(featureManager, org.togglz.core.context.FeatureContext.getFeatureManager());\n    org.junit.Assert.assertSame(this.context, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n    org.junit.Assert.assertEquals(2, features.size());\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.mem.InMemoryStateRepository);\n    org.junit.Assert.assertEquals(1, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertTrue(this.context.getBean(org.springframework.boot.context.embedded.ServletRegistrationBean.class).getUrlMappings().contains(\"/togglz-console/*\"));\n    org.togglz.spring.boot.autoconfigure.TogglzEndpoint togglzEndpoint = this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class);\n    org.junit.Assert.assertEquals(\"togglz\", togglzEndpoint.getId());\n    org.junit.Assert.assertTrue(togglzEndpoint.isEnabled());\n    org.junit.Assert.assertTrue(togglzEndpoint.isSensitive());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "defaultTogglz",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 12,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 18,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 24,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.bind(applicationContext);\n    org.springframework.context.event.ContextClosedEvent contextClosedEvent = mock(org.springframework.context.event.ContextClosedEvent.class);\n    applicationListener.onApplicationEvent(contextClosedEvent);\n    org.junit.Assert.assertNull(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzApplicationContextBinderApplicationListenerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 2,
        "MethodName": "contextClosed",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 2,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.Object old = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.putIfAbsent(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader(), context);\n    if (old != null) {\n        throw new java.lang.IllegalStateException(\"There is already a ApplicationContext associated with the context ClassLoader of the current thread!\");\n    }\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "bind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(null);\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 5,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenThereIsNoRolesAttribute",
        "MinimumCyclomaticComplexity": 5,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 17,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=ck\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledForAllUsers",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNull(state);\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 4,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 27,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullWhenStateDoesntExist",
        "MinimumCyclomaticComplexity": 4,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 27,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 27,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.appengine.repository.FixedNamespaceStateRepository(null, mockedStateRepository);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldNotAcceptNullNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 5,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 5,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1);\n    assertThat(metaData.getAttributes()).doesNotContainValue(\"https://github.com/togglz/togglz/pull/33\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullForInfoLinkByDefault",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.System.setProperty(\"foo.bar\", \"foobar\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeFalseIfPropertyExistsButisInvalid",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.console.path: /custom/\");\n    org.junit.Assert.assertEquals(1, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertTrue(this.context.getBean(org.springframework.boot.context.embedded.ServletRegistrationBean.class).getUrlMappings().contains(\"/custom/*\"));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customConsolePathWithTrailingSlash",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo1.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertTrue(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureInFirstBackingRepo",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"function isJohn(name) { return name == 'john' }; isJohn(user.name);\");\n    assertThat(strategy.isActive(state, aFeatureUser(\"john\"))).isTrue();\n    assertThat(strategy.isActive(state, aFeatureUser(\"jim\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportScriptWithFunction",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManagerBuilderTest.CustomStrategyProvider provider = new org.togglz.core.manager.FeatureManagerBuilderTest.CustomStrategyProvider();\n    org.togglz.core.manager.FeatureManagerBuilder.begin().featureEnum(org.togglz.core.manager.FeatureManagerBuilderTest.Features.class).activationStrategyProvider(provider).activationStrategy(new org.togglz.core.manager.FeatureManagerBuilderTest.CustomActivationStrategy()).build();\n}",
        "ClassName": "FeatureManagerBuilderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailIfAddingStrategyWithCustomProvider",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "CustomStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (strategyProvider instanceof org.togglz.core.activation.DefaultActivationStrategyProvider) {\n        ((org.togglz.core.activation.DefaultActivationStrategyProvider) (strategyProvider)).addActivationStrategy(strategy);\n        return this;\n    }\n    throw new java.lang.IllegalStateException(\"Adding ActivationStrategies is only allowed when using \" + org.togglz.core.activation.DefaultActivationStrategyProvider.class.getSimpleName());\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyProvider = strategyProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategyProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.manager.FeatureManagerBuilder();\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "begin",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection authorities = new java.util.ArrayList<org.springframework.security.core.GrantedAuthority>();\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_1\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_2\"));\n    when(authentication.getAuthorities()).thenReturn(authorities);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertThat(user.isFeatureAdmin(), org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "SpringSecurityUserProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 13,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getCurrentUserWillReturnNormalUserWhenAuthoritiesDoNotContainFeatureAdminAuthority",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 13,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.springframework.security.core.context.SecurityContext context = org.springframework.security.core.context.SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication authentication = context.getAuthentication();\n    if (authentication != null) {\n        java.lang.String name = getUserName(authentication);\n        java.util.Set<java.lang.String> authorities = org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n        boolean featureAdmin = isFeatureAdmin(authentication, authorities);\n        org.togglz.core.user.SimpleFeatureUser user = new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin);\n        user.setAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES, authorities);\n        return user;\n    }\n    return null;\n}",
                "ClassName": "SpringSecurityUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 13,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n            return null;\n        }\n    });\n    repository.getFeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getFeatureStateShouldRunWithinGivenNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 14,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.Work<org.togglz.core.repository.FeatureState>() {\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState run() {\n            return decorated.getFeatureState(feature);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.ActivationStrategyConfig.class });\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.CustomActivationStrategy customActivationStrategy = this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.CustomActivationStrategy.class);\n    org.junit.Assert.assertTrue(featureManager.getActivationStrategies().contains(customActivationStrategy));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customActivationStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertNotNull(dataSource);\n    org.junit.Assert.assertEquals(0L, executeQuery(\"SELECT COUNT(*) FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.togglz.core.repository.FeatureState firstState = new org.togglz.core.repository.FeatureState(org.togglz.servlet.test.repository.jdbc.JDBCFeatures.F2, true);\n    firstState.setStrategyId(\"someId\");\n    firstState.setParameter(\"param\", \"foo\");\n    featureManager.setFeatureState(firstState);\n    org.junit.Assert.assertEquals(1, executeQuery(\"SELECT FEATURE_ENABLED FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(\"someId\", executeQuery(\"SELECT STRATEGY_ID FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(\"param=foo\", executeQuery(\"SELECT STRATEGY_PARAMS FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.togglz.core.repository.FeatureState secondState = new org.togglz.core.repository.FeatureState(org.togglz.servlet.test.repository.jdbc.JDBCFeatures.F2, false);\n    secondState.setStrategyId(null);\n    featureManager.setFeatureState(secondState);\n    org.junit.Assert.assertEquals(0, executeQuery(\"SELECT FEATURE_ENABLED FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(null, executeQuery(\"SELECT STRATEGY_ID FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(null, executeQuery(\"SELECT STRATEGY_PARAMS FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n}",
        "ClassName": "JDBCRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureStateFromJDBCRepository",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 9,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "executeQuery",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 48,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline(\"\\n\");\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1\\nparam2=value2\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(2).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"value1\")).contains(org.assertj.core.data.MapEntry.entry(\"param2\", \"value2\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldConvertInMultilineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true, lineSeparator);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setState(\"foo.bar\", \"false\");\n    java.lang.System.setProperty(\"foo.bar\", \"false\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeTrueIfPropertyAndStateValueMatchFalse",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.SystemPropertyActivationStrategyTest.ScriptFeature.FEATURE).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME, propName).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE, propValue).setStrategyId(org.togglz.core.activation.SystemPropertyActivationStrategy.ID);\n}",
                "ClassName": "SystemPropertyActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertThat(activationStrategy.getName(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.NAME));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getNameWillReturnConstant",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.activation.UserRoleActivationStrategy.NAME;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getName",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n        updater.migrateToVersion1();\n        org.junit.Assert.assertTrue(updater.isSchemaVersion1());\n        update(connection, \"INSERT INTO TOGGLZ VALUES ('F1', 1, 'ck, admin')\");\n        update(connection, \"INSERT INTO TOGGLZ VALUES ('F2', 1, '')\");\n        update(connection, \"INSERT INTO TOGGLZ VALUES ('F3', 1, NULL)\");\n        java.util.List<java.lang.Object[]> dataBefore = query(connection, \"SELECT FEATURE_NAME, FEATURE_USERS FROM TOGGLZ ORDER BY FEATURE_NAME\");\n        org.junit.Assert.assertEquals(3, dataBefore.size());\n        org.junit.Assert.assertEquals(\"F1\", dataBefore.get(0)[0]);\n        org.junit.Assert.assertEquals(\"ck, admin\", dataBefore.get(0)[1]);\n        updater.migrateToVersion2();\n        org.junit.Assert.assertTrue(querySucceeds(connection, \"SELECT FEATURE_NAME,STRATEGY_ID,STRATEGY_PARAMS FROM TOGGLZ\"));\n        org.junit.Assert.assertFalse(querySucceeds(connection, \"SELECT FEATURE_USERS FROM TOGGLZ\"));\n        java.util.List<java.lang.Object[]> dataAfter = query(connection, \"SELECT FEATURE_NAME, STRATEGY_ID, STRATEGY_PARAMS FROM TOGGLZ ORDER BY FEATURE_NAME\");\n        org.junit.Assert.assertEquals(3, dataBefore.size());\n        org.junit.Assert.assertEquals(\"F1\", dataAfter.get(0)[0]);\n        org.junit.Assert.assertEquals(org.togglz.core.activation.UsernameActivationStrategy.ID, dataAfter.get(0)[1]);\n        org.junit.Assert.assertEquals(\"users=ck, admin\", dataAfter.get(0)[2].toString().trim());\n        org.junit.Assert.assertEquals(\"F2\", dataAfter.get(1)[0]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(1)[1]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(1)[2]);\n        org.junit.Assert.assertEquals(\"F3\", dataAfter.get(2)[0]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(2)[1]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(2)[2]);\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldMigrateToVersion2",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 17,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 32,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"CREATE TABLE %TABLE% (FEATURE_NAME VARCHAR(100) PRIMARY KEY, FEATURE_ENABLED INTEGER, FEATURE_USERS VARCHAR(2000))\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return columnExists(org.togglz.core.repository.jdbc.Columns.FEATURE_NAME) && (!columnExists(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID));\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isSchemaVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.sql.Statement statement = null;\n    try {\n        statement = connection.createStatement();\n        return statement.executeUpdate(sql);\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(statement);\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.sql.Statement statement = null;\n    try {\n        statement = connection.createStatement();\n        java.sql.ResultSet resultSet = null;\n        try {\n            resultSet = statement.executeQuery(sql);\n            java.util.List<java.lang.Object[]> result = new java.util.ArrayList<java.lang.Object[]>();\n            while (resultSet.next()) {\n                java.util.List<java.lang.Object> row = new java.util.ArrayList<java.lang.Object>();\n                for (int i = 0; i < resultSet.getMetaData().getColumnCount(); i++) {\n                    row.add(resultSet.getObject(i + 1));\n                }\n                result.add(row.toArray());\n            } \n            return result;\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n        }\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(statement);\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 23,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"ALTER TABLE %TABLE% ADD STRATEGY_ID VARCHAR(200)\");\n    execute(\"ALTER TABLE %TABLE% ADD STRATEGY_PARAMS VARCHAR(2000)\");\n    java.sql.Statement updateDataStmt = connection.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_UPDATABLE);\n    try {\n        java.sql.ResultSet resultSet = null;\n        try {\n            resultSet = updateDataStmt.executeQuery(substitute(\"SELECT FEATURE_NAME, FEATURE_USERS, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE%\"));\n            while (resultSet.next()) {\n                java.lang.String users = resultSet.getString(org.togglz.core.repository.jdbc.Columns.FEATURE_USERS);\n                if (org.togglz.core.util.Strings.isNotBlank(users)) {\n                    java.util.Map<java.lang.String, java.lang.String> params = new java.util.HashMap<java.lang.String, java.lang.String>();\n                    params.put(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, users);\n                    java.lang.String paramData = serializer.serialize(params);\n                    resultSet.updateString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS, paramData);\n                    java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                    if (org.togglz.core.util.Strings.isBlank(strategyId)) {\n                        resultSet.updateString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID, org.togglz.core.activation.UsernameActivationStrategy.ID);\n                    }\n                    resultSet.updateRow();\n                }\n            } \n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n        }\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(updateDataStmt);\n    }\n    execute(\"ALTER TABLE %TABLE% DROP COLUMN FEATURE_USERS\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion2",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 30,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        query(connection, sql);\n        return true;\n    } catch (java.sql.SQLException e) {\n        return false;\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "querySucceeds",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 98,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(org.togglz.core.util.FeatureStateTest.FEATURE_NAME);\n    org.togglz.core.repository.FeatureState featureState = new org.togglz.core.repository.FeatureState(feature);\n    featureState.setStrategyId(org.togglz.core.util.FeatureStateTest.STRATEGYID);\n    featureState.setParameter(org.togglz.core.util.FeatureStateTest.PARAM_NAME, org.togglz.core.util.FeatureStateTest.PARAM_VALUE);\n    featureState.setEnabled(true);\n    java.io.ByteArrayOutputStream os = new java.io.ByteArrayOutputStream();\n    java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(os);\n    try {\n        try {\n            oos.writeObject(featureState);\n            java.io.InputStream is = new java.io.ByteArrayInputStream(os.toByteArray());\n            java.io.ObjectInputStream ois = new java.io.ObjectInputStream(is);\n            try {\n                org.togglz.core.repository.FeatureState deserializedFeatureState = ((org.togglz.core.repository.FeatureState) (ois.readObject()));\n                org.junit.Assert.assertEquals(\"FeatureState.feature was not correctly serialized/deserialized\", featureState.getFeature(), deserializedFeatureState.getFeature());\n                org.junit.Assert.assertEquals(\"FeatureState.strategyId was not correctly serialized/deserialized\", featureState.getStrategyId(), deserializedFeatureState.getStrategyId());\n                org.junit.Assert.assertEquals(\"FeatureState.parameters were not correctly serialized/deserialized\", featureState.getParameter(org.togglz.core.util.FeatureStateTest.PARAM_NAME), deserializedFeatureState.getParameter(org.togglz.core.util.FeatureStateTest.PARAM_NAME));\n                org.junit.Assert.assertEquals(\"FeatureState.enabled was not correctly serialized/deserialized\", featureState.isEnabled(), deserializedFeatureState.isEnabled());\n            } finally {\n                is.close();\n                ois.close();\n            }\n        } catch (java.io.NotSerializableException e) {\n            org.junit.Assert.fail(\"FeatureState is not serializable\");\n        }\n    } finally {\n        os.close();\n        oos.close();\n    }\n}",
        "ClassName": "FeatureStateTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "serializable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 31,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    state.setParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES, org.togglz.servlet.activation.ServerNameActivationStrategyTest.DIFFERENT_VHOST_NAME);\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isFalse();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForFeatureOnDifferentDomainName",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.repository.MemcacheStateRepository repository = new org.togglz.appengine.repository.MemcacheStateRepository(delegate);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.junit.Assert.assertTrue(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n    repository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertFalse(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.junit.Assert.assertTrue(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(2)).getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1);\n    org.mockito.Mockito.verify(delegate).setFeatureState(org.mockito.Mockito.any(org.togglz.core.repository.FeatureState.class));\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "MemcacheStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 2,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testStateModifyExpiresCache",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 2,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 18,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 4,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.delegate = delegate;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = ((org.togglz.core.repository.FeatureState) (cache.get(key(feature.name()))));\n    if (state == null) {\n        state = delegate.getFeatureState(feature);\n        cache.put(key(feature.name()), state, getExpiration());\n    }\n    return state;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.MemcacheStateRepository.KEY_PREFIX + featureName;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "key",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    delegate.setFeatureState(featureState);\n    cache.delete(key(featureState.getFeature().name()));\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 25,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F1.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F2.isActive() || (!org.togglz.junit.vary.MyFeatures.F2.isActive()));\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F3.isActive() || (!org.togglz.junit.vary.MyFeatures.F3.isActive()));\n}",
        "ClassName": "FeatureVariationsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            return null;\n        }\n    });\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setFeatureStateShouldRunWithinGivenNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "4",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.VoidWork() {\n        @java.lang.Override\n        void vrun() {\n            decorated.setFeatureState(featureState);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).disable();\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(0, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(null, query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(null, query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 18,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateWithoutStrategyOrParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 72,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroWithSomeOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1, true));\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 21,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.List<org.togglz.core.spi.ActivationStrategy> strategies = new java.util.ArrayList<org.togglz.core.spi.ActivationStrategy>();\n    strategies.add(new org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy());\n    strategies.add(new org.togglz.core.activation.DefaultActivationStrategyProviderTest.AnotherCustomActivationStrategy());\n    provider.addActivationStrategies(strategies);\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy.class.getSimpleName()).contains(org.togglz.core.activation.DefaultActivationStrategyProviderTest.AnotherCustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldContainCustomStrategyIfAddedMultipleBefore",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "AnotherCustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategies.addAll(strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.html.HtmlPage page = client.getPage(url + \"jsp-taglib-test.jsp\");\n    assertThat(page.asText()).contains(\"Feature [ACTIVE_FEATURE] is active\").doesNotContain(\"Feature [INACTIVE_FEATURE] is active\");\n}",
        "ClassName": "JspTaglibTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldIncludeOrExcludeBodyCorrectly",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"something\");\n    initialProps.setProperty(\"FEATURE1.param.foo\", \"bar\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.disable();\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(3));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"false\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"something\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.foo\"), org.hamcrest.Matchers.is(\"bar\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "disableFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 20,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 63,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 1, 'myStrategy', 'param23=foobar')\");\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(1, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"myStrategy\", query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"param23=foobar\", query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(0, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"someId\", query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"param=foo\", query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldUpdateExistingDatabaseEntry",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 101,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n        updater.migrateToVersion1();\n        org.junit.Assert.assertTrue(updater.doesTableExist());\n        org.junit.Assert.assertTrue(querySucceeds(connection, \"SELECT FEATURE_NAME FROM TOGGLZ\"));\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldMigrateToVersion1",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"CREATE TABLE %TABLE% (FEATURE_NAME VARCHAR(100) PRIMARY KEY, FEATURE_ENABLED INTEGER, FEATURE_USERS VARCHAR(2000))\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        query(connection, sql);\n        return true;\n    } catch (java.sql.SQLException e) {\n        return false;\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "querySucceeds",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    featureUserProvider.setFeatureUser(new org.togglz.core.user.SimpleFeatureUser(\"admin\", false));\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS);\n    state.setEnabled(false);\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldHandleEnabledFlagCorrectlyWithCustomStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureUser = featureUser;\n}",
                "ClassName": "TestFeatureUserProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo1.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, false));\n    repo2.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    crepo.setIterationOrder(org.togglz.core.repository.composite.CompositeStateRepository.IterationOrder.LIFO);\n    org.junit.Assert.assertTrue(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureLIFO",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.iterationOrder = iterationOrder;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setIterationOrder",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 19,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.Weighted prio10 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 10;\n        }\n    };\n    org.togglz.core.util.Weighted prio20 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 20;\n        }\n    };\n    java.util.List<org.togglz.core.util.Weighted> list = new java.util.ArrayList<org.togglz.core.util.Weighted>();\n    list.add(prio20);\n    list.add(prio10);\n    java.util.Collections.sort(list, new org.togglz.core.util.Weighted.WeightedComparator());\n    assertThat(list).containsExactly(prio10, prio20);\n}",
        "ClassName": "WeightedTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSortCorrectlySimpleIntValues",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "2",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "WeightedComparator",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    long ttl = 5;\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, ttl);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(ttl + 30);\n    }\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(5)).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCacheExpiryBecauseOfTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    provider.addActivationStrategy(new org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy());\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldContainCustomStrategyIfAddedBefore",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategies.add(strategy);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addActivationStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter[] result = activationStrategy.getParameters();\n    org.junit.Assert.assertThat(result.length, org.hamcrest.CoreMatchers.is(1));\n    org.togglz.core.activation.Parameter param = result[0];\n    org.junit.Assert.assertThat(param.getName(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME));\n    org.junit.Assert.assertThat(param.getDescription(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_DESC));\n    org.junit.Assert.assertThat(param.getLabel(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_LABEL));\n    org.junit.Assert.assertThat(param.isLargeText(), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getParametersWillReturnRoles",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.activation.Parameter[]{ org.togglz.core.activation.ParameterBuilder.create(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME).label(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_LABEL).description(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_DESC).largeText() };\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameters",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), true, \"S1\");\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(\"S1\", state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "withStrategyNoParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(name, enabled);\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name + \".strategy\", strategyName);\n    for (org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param param : params) {\n        org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty((name + \".param.\") + param.key, param.value);\n    }\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 40,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final java.util.Map<java.lang.String, java.lang.String> map = new java.util.HashMap<java.lang.String, java.lang.String>() {\n        {\n            put(\"param23\", \"foobar\");\n        }\n    };\n    update(\"F1\", true, \"myStrategy\", map, null);\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(\"myStrategy\", state.getStrategyId());\n    org.junit.Assert.assertEquals(1, state.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"foobar\", state.getParameter(\"param23\"));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 2,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 45,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    assertThat(provider.getFeatures()).containsSequence(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1, org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE2);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCorrectListOfFeaturesForEnum",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"john\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID).setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"person1,ck,person2\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForDifferentUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 36,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.CharSequence string = org.togglz.core.util.ClassUtils.createInstance(\"java.lang.String\", java.lang.CharSequence.class);\n    org.junit.Assert.assertNotNull(string);\n    org.junit.Assert.assertTrue(string instanceof java.lang.String);\n    org.junit.Assert.assertEquals(\"\", string);\n}",
        "ClassName": "ClassUtilsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 16,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 4,
        "MethodName": "testCreateInstance",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 16,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 4,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = java.lang.Thread.currentThread().getContextClassLoader();\n    if (classLoader == null) {\n        classLoader = interfaceClazz.getClassLoader();\n    }\n    try {\n        java.lang.Class<T> clazz = ((java.lang.Class<T>) (java.lang.Class.forName(classname, true, classLoader)));\n        return clazz.newInstance();\n    } catch (java.lang.ClassNotFoundException e) {\n        throw new java.lang.IllegalArgumentException(\"Unknown class: \" + classname);\n    } catch (java.lang.InstantiationException e) {\n        throw new java.lang.IllegalArgumentException(\"Could not create an instance of class: \" + classname, e);\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.IllegalArgumentException(\"Could not create an instance of class: \" + classname, e);\n    }\n}",
                "ClassName": "ClassUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "createInstance",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 4
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.testing.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "DefaultFeatureStateTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeaturesActiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.enums.EnumFeatureMetaData metaData = new org.togglz.core.metadata.enums.EnumFeatureMetaData(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE_WITH_DEFAULT_STATE);\n    org.togglz.core.repository.FeatureState featureState = metaData.getDefaultFeatureState();\n    org.junit.Assert.assertThat(featureState, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(featureState.isEnabled(), org.hamcrest.CoreMatchers.is(true));\n    org.junit.Assert.assertThat(featureState.getStrategyId(), org.hamcrest.CoreMatchers.is(\"SomeActivationId\"));\n    org.junit.Assert.assertThat(featureState.getParameter(\"SomeParameterName\"), org.hamcrest.CoreMatchers.is(\"someValue1,someValue2\"));\n    org.junit.Assert.assertThat(featureState.getParameter(\"SomeParameterName2\"), org.hamcrest.CoreMatchers.is(\"someValue3,someValue4\"));\n}",
        "ClassName": "EnumFeatureMetaDataTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "constructorWillPopulateDefaultActivationStrategyFromAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.label = org.togglz.core.util.FeatureAnnotations.getLabel(feature);\n    boolean enabledByDefault = org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(feature);\n    this.defaultFeatureState = new org.togglz.core.repository.FeatureState(feature, enabledByDefault);\n    org.togglz.core.annotation.DefaultActivationStrategy defaultActivationStrategy = org.togglz.core.util.FeatureAnnotations.getAnnotation(feature, org.togglz.core.annotation.DefaultActivationStrategy.class);\n    if (defaultActivationStrategy != null) {\n        this.defaultFeatureState.setStrategyId(defaultActivationStrategy.id());\n        for (org.togglz.core.annotation.ActivationParameter parameter : defaultActivationStrategy.parameters()) {\n            this.defaultFeatureState.setParameter(parameter.name(), parameter.value());\n        }\n    }\n    for (java.lang.annotation.Annotation annotation : org.togglz.core.util.FeatureAnnotations.getAnnotations(feature)) {\n        org.togglz.core.metadata.FeatureGroup group = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(annotation.annotationType());\n        if (group != null) {\n            groups.add(group);\n        }\n        java.lang.String[] attribute = org.togglz.core.util.FeatureAnnotations.getFeatureAttribute(annotation);\n        if (attribute != null) {\n            attributes.put(attribute[0], attribute[1]);\n        }\n    }\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 22,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return defaultFeatureState;\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getDefaultFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.FeatureGroup result = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(org.togglz.core.annotation.Label.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.nullValue());\n}",
        "ClassName": "AnnotationFeatureGroupTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "buildWillReturnNullWhenFeatureGroupAnnotationIsNotPresent",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (groupAnnotation.isAnnotationPresent(org.togglz.core.annotation.FeatureGroup.class)) {\n        return new org.togglz.core.metadata.enums.AnnotationFeatureGroup(groupAnnotation);\n    }\n    return null;\n}",
                "ClassName": "AnnotationFeatureGroup",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.CURRENT_VERSION);\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertTrue(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueWhenMatchesServerCurrentVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    crepo.setSetterSelection(org.togglz.core.repository.composite.CompositeStateRepository.SetterSelection.FIRST);\n    crepo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertTrue(repo1.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n    org.junit.Assert.assertNull(repo2.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1));\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureFIRST",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.setterSelection = setterSelection;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setSetterSelection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : setterSelection.getSelected(repositories)) {\n        repository.setFeatureState(featureState);\n    }\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ck\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyUserlist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 28,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.bind(mock(org.springframework.context.ApplicationContext.class));\n    applicationContext = mock(org.springframework.context.ApplicationContext.class);\n    org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent = mock(org.springframework.context.event.ContextRefreshedEvent.class);\n    when(contextRefreshedEvent.getApplicationContext()).thenReturn(applicationContext);\n    applicationListener.onApplicationEvent(contextRefreshedEvent);\n    org.junit.Assert.assertSame(applicationContext, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzApplicationContextBinderApplicationListenerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 2,
        "MethodName": "contextRefreshedWhileContextAlreadyBound",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 2,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.Object old = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.putIfAbsent(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader(), context);\n    if (old != null) {\n        throw new java.lang.IllegalStateException(\"There is already a ApplicationContext associated with the context ClassLoader of the current thread!\");\n    }\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "bind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider().addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class).addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).getLabel()).isEqualTo(\"First feature\");\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE).getLabel()).isEqualTo(\"Additional Feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBuildMetadataForMultipleEnums",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if ((featureEnum == null) || (!featureEnum.isEnum())) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnum argument must be an enum\");\n    }\n    addFeatures(java.util.Arrays.asList(featureEnum.getEnumConstants()));\n    return this;\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addFeatureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent = mock(org.springframework.context.event.ContextRefreshedEvent.class);\n    when(contextRefreshedEvent.getApplicationContext()).thenReturn(applicationContext);\n    applicationListener.onApplicationEvent(contextRefreshedEvent);\n    org.junit.Assert.assertSame(applicationContext, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzApplicationContextBinderApplicationListenerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 2,
        "MethodName": "contextRefreshed",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 2,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.console.enabled: false\");\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "consoleDisabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    state.setParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS, \"1.1.1.1\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForFeatureOnOtherMachine",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature;true\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isTrue();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithLabelAndDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityWithCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    state.setParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS, \"1.1.1.1,2.2.2.2,\" + getMachineIP());\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(true, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "multipleMachineIps",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Enumeration<java.net.NetworkInterface> interfaces = java.net.NetworkInterface.getNetworkInterfaces();\n        if (interfaces != null) {\n            while (interfaces.hasMoreElements()) {\n                java.util.Enumeration<java.net.InetAddress> addresses = interfaces.nextElement().getInetAddresses();\n                if (addresses != null) {\n                    while (addresses.hasMoreElements()) {\n                        java.lang.String hostAddress = addresses.nextElement().getHostAddress();\n                        if (hostAddress != null) {\n                            return hostAddress.trim();\n                        }\n                    } \n                }\n            } \n        }\n        return null;\n    } catch (java.net.SocketException e) {\n        return \"<no-ip>\";\n    }\n}",
                "ClassName": "IPActivationStrategyTest",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "getMachineIP",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 21,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 9,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 55,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.System.setProperty(\"foo.bar\", \"false\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeFalseIfPropertyExistsButisFalse",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(\"F1\", false, null, null, null);\n    final com.google.appengine.api.datastore.Transaction txn = datastoreService.beginTransaction();\n    update(\"F3\", false, null, null, txn);\n    repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    txn.commit();\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkInsideRunningTransaction",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 28,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1);\n    assertThat(metaData.getLabel()).isEqualTo(\"First feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnMetaDataWithCorrectLabel",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = ck\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityFeatureAdminFlagAdminUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> result = org.togglz.core.util.FeatureAnnotations.getAnnotations(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.size(), org.hamcrest.CoreMatchers.is(2));\n    com.google.common.collect.Iterables.find(result, createAnnotationTypePredicate(org.togglz.core.annotation.EnabledByDefault.class));\n    com.google.common.collect.Iterables.find(result, createAnnotationTypePredicate(org.togglz.core.util.FeatureAnnotationsTest.ClassLevelGroup.class));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationsWillReturnBothFieldAndClassLevelAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> annotations = new java.util.HashSet<java.lang.annotation.Annotation>();\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        java.lang.annotation.Annotation[] fieldAnnotations = featureClass.getField(feature.name()).getAnnotations();\n        java.lang.annotation.Annotation[] classAnnotations = featureClass.getAnnotations();\n        annotations.addAll(java.util.Arrays.asList(fieldAnnotations));\n        annotations.addAll(java.util.Arrays.asList(classAnnotations));\n        return annotations;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return annotations;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotations",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new com.google.common.base.Predicate<java.lang.annotation.Annotation>() {\n        @java.lang.Override\n        public boolean apply(java.lang.annotation.Annotation annotation) {\n            return annotation.annotationType().equals(annotationType);\n        }\n    };\n}",
                "ClassName": "FeatureAnnotationsTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createAnnotationTypePredicate",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 22,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.annotation.Label result = org.togglz.core.util.FeatureAnnotations.getAnnotation(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT, org.togglz.core.annotation.Label.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.core.IsNull.nullValue());\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationWillReturnNullWhenAnnotationDoesNotExist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        A fieldAnnotation = featureClass.getField(feature.name()).getAnnotation(annotationType);\n        A classAnnotation = featureClass.getAnnotation(annotationType);\n        return fieldAnnotation != null ? fieldAnnotation : classAnnotation;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return null;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotation",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = somebody\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityFeatureAdminFlagOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setupTestWithEmptyDatastore();\n    org.togglz.core.repository.FeatureState savedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE).enable();\n    stateRepository.setFeatureState(savedFeatureState);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(loadedFeatureState.isEnabled(), org.hamcrest.CoreMatchers.is(true));\n    stateRepository.setFeatureState(savedFeatureState.disable());\n    loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(loadedFeatureState.isEnabled(), org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "ZookeeperStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledStateSavingAndLoading",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    setupTestWithData(java.util.Collections.EMPTY_MAP);\n}",
                "ClassName": "ZookeeperStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setupTestWithEmptyDatastore",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = wrapperForFeatureState(featureState);\n    try {\n        java.lang.String json = org.togglz.zookeeper.ZookeeperStateRepository.objectMapper.writeValueAsString(wrapper);\n        java.lang.String path = (featuresZnode + \"/\") + featureState.getFeature().name();\n        curatorFramework.createContainers(path);\n        curatorFramework.setData().forPath(path, json.getBytes(\"UTF-8\"));\n        states.put(featureState.getFeature().name(), wrapper);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = states.get(feature.name());\n    if (wrapper != null) {\n        return featureStateForWrapper(feature, wrapper);\n    }\n    return null;\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.features-file: classpath:/features-file/features.properties\");\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    org.junit.Assert.assertTrue(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertFalse(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.file.FileBasedStateRepository);\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featuresFile",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    expectedException.expect(java.lang.AssertionError.class);\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F1.isActive());\n}",
        "ClassName": "TogglzRuleWithVariations_DisableSadCase_Test",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.EnumBasedFeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider();\n    provider.addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    provider.addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.DuplicateNameFeatureEnum.class);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForDuplicateFeatureName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if ((featureEnum == null) || (!featureEnum.isEnum())) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnum argument must be an enum\");\n    }\n    addFeatures(java.util.Arrays.asList(featureEnum.getEnumConstants()));\n    return this;\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addFeatureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.WITH_OWNER);\n    assertThat(metaData.getAttributes()).containsValue(\"Christian\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnOwnerNameIfAnnotationPresent",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.features.FEATURE_ONE: true\", \"togglz.features.FEATURE_TWO: false\");\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    org.junit.Assert.assertTrue(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertFalse(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.property.PropertyBasedStateRepository);\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "features",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.System.setProperty(\"foo.bar\", \"true\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeTrueIfPropertyExistsAndIsTrue",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.NotAnEnum.class);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForNonEnumType",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"ID_1\", \"ID 1;true;Group 1,Group Other\");\n    properties.setProperty(\"ID_2\", \"ID 2;false;Group 2\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(2).areExactly(1, featureNamed(\"ID_1\")).areExactly(1, featureNamed(\"ID_2\"));\n    org.togglz.core.metadata.FeatureMetaData metadata1 = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"ID_1\"));\n    assertThat(metadata1).isNotNull();\n    assertThat(metadata1.getLabel()).isEqualTo(\"ID 1\");\n    org.togglz.core.repository.FeatureState defaultFeatureState1 = metadata1.getDefaultFeatureState();\n    assertThat(defaultFeatureState1.isEnabled()).isTrue();\n    assertThat(metadata1.getGroups()).hasSize(2).areExactly(1, groupNamed(\"Group 1\")).areExactly(1, groupNamed(\"Group Other\"));\n    org.togglz.core.metadata.FeatureMetaData metadata2 = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"ID_2\"));\n    assertThat(metadata2).isNotNull();\n    assertThat(metadata2.getLabel()).isEqualTo(\"ID 2\");\n    org.togglz.core.repository.FeatureState defaultFeatureState2 = metadata2.getDefaultFeatureState();\n    assertThat(defaultFeatureState2.isEnabled()).isFalse();\n    assertThat(metadata2.getGroups()).hasSize(1).areExactly(1, groupNamed(\"Group 2\"));\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "canInitializeFromProperties",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 20,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.metadata.FeatureGroup>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.metadata.FeatureGroup value) {\n            return (value != null) && value.getLabel().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "groupNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    SystemProperty.applicationVersion.set(\"\");\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.CURRENT_VERSION);\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseWhenCurrentVersionCannotBeResolved",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testParameterWithCustomName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityWithoutLogin",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final java.lang.String kind = \"CustomKind\";\n    repository = new org.togglz.appengine.repository.DatastoreStateRepository(kind, datastoreService);\n    org.junit.Assert.assertEquals(kind, repository.kind());\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customKindName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(datastoreService);\n    this.kind = kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.testing.MyFeatures.FEATURE_ONE, false));\n}",
        "ClassName": "DefaultFeatureStateTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureManagerImmutable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 1, 'myStrategy', 'param23=foobar')\");\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(\"myStrategy\", state.getStrategyId());\n    org.junit.Assert.assertEquals(1, state.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"foobar\", state.getParameter(\"param23\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.lang.String sql = \"SELECT FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE% WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement statement = connection.prepareStatement(insertTableName(sql));\n            try {\n                statement.setString(1, feature.name());\n                java.sql.ResultSet resultSet = statement.executeQuery();\n                try {\n                    if (resultSet.next()) {\n                        boolean enabled = resultSet.getInt(org.togglz.core.repository.jdbc.Columns.FEATURE_ENABLED) > 0;\n                        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature, enabled);\n                        java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                        if (org.togglz.core.util.Strings.isNotBlank(strategyId)) {\n                            state.setStrategyId(strategyId.trim());\n                        }\n                        java.lang.String paramData = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS);\n                        if (org.togglz.core.util.Strings.isNotBlank(paramData)) {\n                            java.util.Map<java.lang.String, java.lang.String> params = serializer.deserialize(paramData);\n                            for (java.util.Map.Entry<java.lang.String, java.lang.String> param : params.entrySet()) {\n                                state.setParameter(param.getKey(), param.getValue());\n                            }\n                        }\n                        return state;\n                    }\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to fetch the feature's state from the database\", e);\n    }\n    return null;\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 40,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 72,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\").description(\"Some text\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertEquals(param.getDescription(), \"Some text\");\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testParameterWithDescription",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.description = description;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "description",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.ONE.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.TWO.isActive());\n}",
        "ClassName": "TogglzRuleWithAnnotationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldActivateMultipleFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.endpoint.id: features\");\n    org.junit.Assert.assertEquals(\"features\", this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).getId());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customEndpointId",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    java.util.Set<org.togglz.core.Feature> features = new java.util.HashSet<org.togglz.core.Feature>();\n    java.lang.String name1 = \"Feature 1\";\n    java.lang.String name2 = \"Feature 2\";\n    org.togglz.core.Feature feature1 = mock(org.togglz.core.Feature.class, name1);\n    org.togglz.core.Feature feature2 = mock(org.togglz.core.Feature.class, name2);\n    features.add(feature1);\n    features.add(feature2);\n    when(featureManager.getFeatures()).thenReturn(features);\n    when(feature1.name()).thenReturn(name1);\n    when(feature2.name()).thenReturn(name2);\n    when(featureManager.isActive(featureNamed(name1))).thenReturn(true);\n    when(featureManager.isActive(featureNamed(name2))).thenReturn(false);\n    java.util.Map<java.lang.Object, java.lang.Boolean> map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map.size(), org.hamcrest.CoreMatchers.equalTo(2));\n    assertThat(map.isEmpty(), org.hamcrest.CoreMatchers.is(false));\n    assertThat(map.get(name1), org.hamcrest.CoreMatchers.equalTo(true));\n    assertThat(map.get(name2), org.hamcrest.CoreMatchers.equalTo(false));\n    assertThat(map.get(\"unknown\"), org.hamcrest.CoreMatchers.equalTo(false));\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "canBootstrapViaConstructor",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.mockito.Matchers.argThat(new org.hamcrest.BaseMatcher<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(java.lang.Object obj) {\n            if (obj instanceof org.togglz.core.Feature) {\n                return ((org.togglz.core.Feature) (obj)).name().equals(name);\n            }\n            return false;\n        }\n\n        @java.lang.Override\n        public void describeTo(org.hamcrest.Description desc) {\n            desc.appendText(\"Does not match: \" + name);\n        }\n    });\n}",
                "ClassName": "FeatureMapTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 19,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState ageCheck = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"user.getAttribute('age') >= 21\");\n    org.togglz.core.user.SimpleFeatureUser child = aFeatureUser(\"john\");\n    child.setAttribute(\"age\", 12);\n    assertThat(strategy.isActive(ageCheck, child)).isFalse();\n    org.togglz.core.user.SimpleFeatureUser adult = aFeatureUser(\"peter\");\n    adult.setAttribute(\"age\", 25);\n    assertThat(strategy.isActive(ageCheck, adult)).isTrue();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "scriptCanAccessUserAttributes",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        attributes.put(name, value);\n    } else {\n        attributes.remove(name);\n    }\n    return this;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setAttribute",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"F1\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isFalse();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithoutLabel",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final java.util.Map<java.lang.String, java.lang.String> map = new java.util.HashMap<java.lang.String, java.lang.String>() {\n        {\n            put(\"param23\", \"foobar\");\n        }\n    };\n    update(\"F1\", true, \"myStrategy\", map, null);\n    final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(repository.kind(), org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1.name());\n    com.google.appengine.api.datastore.Entity featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(true, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertEquals(\"myStrategy\", featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"param23\")));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"foobar\")));\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(false, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertEquals(\"someId\", featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"param\")));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"foo\")));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldUpdateExistingDatabaseEntry",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "2",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 2,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(kind(), featureState.getFeature().name());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, featureState.isEnabled());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, featureState.getStrategyId());\n    final java.util.Map<java.lang.String, java.lang.String> params = featureState.getParameterMap();\n    if ((params != null) && (!params.isEmpty())) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>(params.size());\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>(params.size());\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    putInsideTransaction(featureEntity);\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 60,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(\"SERIALIZABLE\");\n    java.io.ByteArrayOutputStream os = new java.io.ByteArrayOutputStream();\n    java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(os);\n    try {\n        try {\n            oos.writeObject(feature);\n            java.io.InputStream is = new java.io.ByteArrayInputStream(os.toByteArray());\n            java.io.ObjectInputStream ois = new java.io.ObjectInputStream(is);\n            try {\n                java.lang.Object deserializedFeature = ois.readObject();\n                org.junit.Assert.assertEquals(\"NamedFeature was not correctly serialized/deserialized\", feature, deserializedFeature);\n            } finally {\n                is.close();\n                ois.close();\n            }\n        } catch (java.io.NotSerializableException e) {\n            org.junit.Assert.fail(\"NamedFeature is not serializable\");\n        }\n    } finally {\n        os.close();\n        oos.close();\n    }\n}",
        "ClassName": "NamedFeatureTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "serializable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 24,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.List<org.togglz.core.Feature> features = java.util.Arrays.<org.togglz.core.Feature>asList(new org.togglz.core.util.NamedFeature(\"f1\"), new org.togglz.core.util.NamedFeature(\"f2\"));\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    when(featureManager.getFeatures()).thenReturn(new java.util.HashSet<org.togglz.core.Feature>(features));\n    org.togglz.core.util.FeatureMap map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map).hasSize(2);\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCorrectSize",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    int ttl = 5;\n    org.togglz.appengine.repository.MemcacheStateRepository repository = new org.togglz.appengine.repository.MemcacheStateRepository(delegate, ttl);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(ttl + 10);\n    }\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(5)).getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "MemcacheStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCacheExpiryBecauseOfTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(delegate);\n    this.expiration = com.google.appengine.api.memcache.Expiration.byDeltaMillis(ttlInSeconds);\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = ((org.togglz.core.repository.FeatureState) (cache.get(key(feature.name()))));\n    if (state == null) {\n        state = delegate.getFeatureState(feature);\n        cache.put(key(feature.name()), state, getExpiration());\n    }\n    return state;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.String username = \"named-user\";\n    boolean featureAdmin = true;\n    org.togglz.core.user.UserProvider userProvider = new org.togglz.core.user.SingleUserProvider(username, featureAdmin);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.hamcrest.MatcherAssert.assertThat(user.getName(), org.hamcrest.CoreMatchers.equalTo(username));\n    org.hamcrest.MatcherAssert.assertThat(user.isFeatureAdmin(), org.hamcrest.CoreMatchers.equalTo(featureAdmin));\n}",
        "ClassName": "SingleUserProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "canProvideNamedUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin));\n}",
                "ClassName": "SingleUserProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState stateAlwaysTrue = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"1 == 1\");\n    assertThat(strategy.isActive(stateAlwaysTrue, aFeatureUser(\"john\"))).isTrue();\n    org.togglz.core.repository.FeatureState stateAlwaysFalse = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"0 == 1\");\n    assertThat(strategy.isActive(stateAlwaysFalse, aFeatureUser(\"john\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnSameResultAsScriptForLiterals",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(\"F1\", false, null, null, null);\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(false, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 40,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo1.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, false));\n    repo2.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertFalse(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureFIFO",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    helper.setEnvIsLoggedIn(true).setEnvIsAdmin(true).setEnvEmail(\"admin@togglz.org\").setEnvAuthDomain(\"togglz.org\");\n    com.google.appengine.api.users.UserService userService = com.google.appengine.api.users.UserServiceFactory.getUserService();\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertTrue(user.isFeatureAdmin());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getUserId(), user.getName());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getEmail(), user.getAttribute(\"email\"));\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getNickname(), user.getAttribute(\"nickname\"));\n}",
        "ClassName": "UserServiceUserProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "userIsLoggedInAsAdmin",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.user.SimpleFeatureUser featureUser = null;\n    com.google.appengine.api.users.User user = userService.getCurrentUser();\n    if (user != null) {\n        featureUser = new org.togglz.core.user.SimpleFeatureUser(user.getUserId(), userService.isUserAdmin());\n        featureUser.setAttribute(\"email\", user.getEmail());\n        featureUser.setAttribute(\"nickname\", user.getNickname());\n    }\n    return featureUser;\n}",
                "ClassName": "UserServiceUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.singleline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1&param2=value2\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(2).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"value1\")).contains(org.assertj.core.data.MapEntry.entry(\"param2\", \"value2\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldConvertInSinglelineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(false);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "singleline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class });\n    org.junit.Assert.assertSame(this.context, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 1,
        "MethodName": "applicationContextBinder",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    com.google.appengine.api.NamespaceManager.set(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE);\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            return null;\n        }\n    });\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setFeatureStateShouldRunWithinGivenNamespaceWhenCurrentNamespaceIsNotDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "3",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.VoidWork() {\n        @java.lang.Override\n        void vrun() {\n            decorated.setFeatureState(featureState);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.enable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.disable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllDisabledTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testToggleFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.enable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.disable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 10000);\n    for (int i = 0; i < 10; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfReadOperationsWithTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"uniqueId\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testMinimalParameter",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1\\nparam2=value2\");\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "lineSeparatorShouldDefaultSimpleNewLine",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.feature-enums: org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures\");\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    java.util.Set<org.togglz.core.Feature> features = featureManager.getFeatures();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertEquals(2, features.size());\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureEnums",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 0);\n    for (int i = 0; i < 10; i++) {\n        org.togglz.core.Feature feature = ((i % 2) == 0) ? org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST : new org.togglz.core.util.NamedFeature(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST.name());\n        org.junit.Assert.assertTrue(repository.getFeatureState(feature).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCacheWithDifferentFeatureImplementations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), true);\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReadTrueStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name, java.lang.Boolean.toString(enabled));\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 42,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureShouldBeInactiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature;true;\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isTrue();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithLabelAndDefaultAndTrailingSemicolon",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertNull(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1));\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureNotFound",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 9,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.FeatureStateTest.Features.FEATURE1, true, java.util.Arrays.asList(\"ck\", \"admin\"));\n    org.junit.Assert.assertThat(state.isEnabled(), org.hamcrest.Matchers.is(true));\n    org.junit.Assert.assertThat(state.getParameterNames(), org.hamcrest.Matchers.contains(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n    org.junit.Assert.assertThat(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS), org.hamcrest.Matchers.is(\"ck,admin\"));\n    org.junit.Assert.assertThat(state.getUsers(), org.hamcrest.Matchers.contains(\"ck\", \"admin\"));\n    state.addUser(\"tester\");\n    org.junit.Assert.assertThat(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS), org.hamcrest.Matchers.is(\"ck,admin,tester\"));\n    org.junit.Assert.assertThat(state.getUsers(), org.hamcrest.Matchers.contains(\"ck\", \"admin\", \"tester\"));\n}",
        "ClassName": "FeatureStateTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testOldUsersApiHandling",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n    this.strategyId = org.togglz.core.activation.UsernameActivationStrategy.ID;\n    this.addUsers(users);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String value = getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(value)) {\n        return org.togglz.core.util.Strings.splitAndTrim(value, \",\");\n    }\n    return java.util.Collections.emptyList();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getUsers",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.addUsers(java.util.Arrays.asList(user));\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 25,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class, org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).getLabel()).isEqualTo(\"First feature\");\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE).getLabel()).isEqualTo(\"Additional Feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBuildMetadataForMultipleEnumsViaConstructor",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.Feature feature = new org.togglz.core.util.NamedFeature(\"SAMPLE_FEATURE\");\n    org.togglz.core.repository.FeatureState featureState = new org.togglz.core.repository.FeatureState(feature, true);\n    stateRepository.setFeatureState(featureState);\n    org.togglz.core.repository.FeatureState storedFeatureState = stateRepository.getFeatureState(feature);\n    org.junit.Assert.assertTrue(org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(featureState, storedFeatureState, true));\n}",
        "ClassName": "HazelcastStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureStateNotExisitingInMap",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class }, \"togglz.endpoint.enabled: false\");\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).size());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "endpointDisabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    int currentYear = java.util.Calendar.getInstance().get(java.util.GregorianCalendar.YEAR) - 1900;\n    org.togglz.core.repository.FeatureState trueForCurrentYear = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"date.year == \" + currentYear);\n    assertThat(strategy.isActive(trueForCurrentYear, aFeatureUser(\"john\"))).isTrue();\n    org.togglz.core.repository.FeatureState trueForNextYear = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"date.year > \" + currentYear);\n    assertThat(strategy.isActive(trueForNextYear, aFeatureUser(\"john\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "scriptCanAccessCurrentDate",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"   \");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenRolesParamIsBlank",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection authorities = new java.util.ArrayList<org.springframework.security.core.GrantedAuthority>();\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_1\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_ADMIN\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_2\"));\n    when(authentication.getAuthorities()).thenReturn(authorities);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertThat(user.isFeatureAdmin(), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "SpringSecurityUserProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 13,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getCurrentUserWillReturnFeatureAdminWhenAuthoritiesContainFeatureAdminAuthority",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 13,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.springframework.security.core.context.SecurityContext context = org.springframework.security.core.context.SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication authentication = context.getAuthentication();\n    if (authentication != null) {\n        java.lang.String name = getUserName(authentication);\n        java.util.Set<java.lang.String> authorities = org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n        boolean featureAdmin = isFeatureAdmin(authentication, authorities);\n        org.togglz.core.user.SimpleFeatureUser user = new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin);\n        user.setAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES, authorities);\n        return user;\n    }\n    return null;\n}",
                "ClassName": "SpringSecurityUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 13,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setState(\"foo.bar\", \"\");\n    java.lang.System.setProperty(\"foo.bar\", \"\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeFalseIfPropertyExistsAndIsEmpty",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.SystemPropertyActivationStrategyTest.ScriptFeature.FEATURE).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME, propName).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE, propValue).setStrategyId(org.togglz.core.activation.SystemPropertyActivationStrategy.ID);\n}",
                "ClassName": "SystemPropertyActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.WITH_LINK);\n    assertThat(metaData.getAttributes()).containsValue(\"https://github.com/togglz/togglz/pull/33\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnInfoLinkIfAnnotationPresent",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.singleline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"foo&bar\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=foo\\\\u0026bar\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"foo&bar\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "escapesAmpersandInSinglelineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(false);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "singleline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline(\"%\");\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1%param2=value2\");\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldUseCustomLineSeparator",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true, lineSeparator);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.FeatureAnnotationsTest.ClassLevelGroup result = org.togglz.core.util.FeatureAnnotations.getAnnotation(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT, org.togglz.core.util.FeatureAnnotationsTest.ClassLevelGroup.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationWillReturnClassLevelAnnotation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        A fieldAnnotation = featureClass.getField(feature.name()).getAnnotation(annotationType);\n        A classAnnotation = featureClass.getAnnotation(annotationType);\n        return fieldAnnotation != null ? fieldAnnotation : classAnnotation;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return null;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotation",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"false\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"something\");\n    initialProps.setProperty(\"FEATURE1.param.foo\", \"bar\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.enable();\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(3));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"something\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.foo\"), org.hamcrest.Matchers.is(\"bar\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "enableFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 20,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 63,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNull(state);\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullWhenStateDoesntExist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    givenSomeDataSourceWithAutoCommitSetTo(true);\n    whenTheFeatureIsEnabled();\n    thenTheDatabaseShouldBeUpdated();\n}",
        "ClassName": "JDBCRepositoryAutoCommitTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldUpdateWithAutoCommitEnabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String url = (\"jdbc:h2:mem:\" + this.getClass().getSimpleName()) + java.lang.System.currentTimeMillis();\n    org.h2.jdbcx.JdbcConnectionPool pool = org.h2.jdbcx.JdbcConnectionPool.create(url, \"sa\", \"\");\n    dataSource = new org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitTestDataSource(pool, autoCommit);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(dataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "givenSomeDataSourceWithAutoCommitSetTo",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1).enable().setStrategyId(\"foobar\");\n    repository.setFeatureState(state);\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "whenTheFeatureIsEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1);\n    assertThat(state).isNotNull();\n    assertThat(state.isEnabled()).isTrue();\n    assertThat(state.getStrategyId()).isEqualTo(\"foobar\");\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "thenTheDatabaseShouldBeUpdated",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(\"\");\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").matching(\"[a-z]+\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"uniqueId\");\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n    org.junit.Assert.assertTrue(param.isValid(\"lowercase\"));\n    org.junit.Assert.assertFalse(param.isValid(\"UPPERCASE\"));\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testParameterWithRegularExpression",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(regex, \"regex is required\");\n    this.pattern = java.util.regex.Pattern.compile(regex);\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "matching",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 10000);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    repository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST, true));\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(2)).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verify(delegate).setFeatureState(org.mockito.Mockito.any(org.togglz.core.repository.FeatureState.class));\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 2,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testStateModifyExpiresCache",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 2,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 4,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(new org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureImpl(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1.name()));\n    assertThat(metaData.getLabel()).isEqualTo(\"First feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnMetaDataWhenRequestedWithOtherFeatureImplementation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "OtherFeatureImpl",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(null);\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForNullVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"ROLE_1, ROLE_2, ROLE_3\");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenUserHasNoneOfSelectedRoles",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    boolean result = activationStrategy.isActive(state, null);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 5,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenThereIsNoUser",
        "MinimumCyclomaticComplexity": 5,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 17,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    expectedException.expect(java.lang.AssertionError.class);\n    org.junit.Assert.assertFalse(org.togglz.junit.vary.MyFeatures.F1.isActive());\n}",
        "ClassName": "TogglzRuleWithVariations_EnableSadCase_Test",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.html.HtmlPage page = client.getPage(url + \"jsp-taglib-inverse-test.jsp\");\n    assertThat(page.asText()).contains(\"Feature [INACTIVE_FEATURE] is inactive\").doesNotContain(\"Feature [ACTIVE_FEATURE] is inactive\");\n}",
        "ClassName": "JspTaglibTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldIncludeOrExcludeBodyCorrectlyInverseCondition",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(null);\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenThereIsNoRolesParam",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.activation.UsernameActivationStrategy.ID).contains(org.togglz.core.activation.GradualActivationStrategy.ID).contains(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).contains(org.togglz.core.activation.ReleaseDateActivationStrategy.ID).contains(org.togglz.core.activation.ServerIpActivationStrategy.ID).contains(org.togglz.core.activation.UserRoleActivationStrategy.ID);\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldLoadDefaultStrategies",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.users\", \"chkal,tester\");\n    initialProps.setProperty(\"FEATURE2\", \"false\");\n    initialProps.setProperty(\"FEATURE3\", \"true\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state1 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        org.junit.Assert.assertEquals(true, state1.isEnabled());\n        org.junit.Assert.assertEquals(org.togglz.core.activation.UsernameActivationStrategy.ID, state1.getStrategyId());\n        org.junit.Assert.assertEquals(1, state1.getParameterNames().size());\n        org.junit.Assert.assertEquals(\"chkal,tester\", state1.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n        org.togglz.core.repository.FeatureState state2 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE2);\n        org.junit.Assert.assertEquals(false, state2.isEnabled());\n        org.junit.Assert.assertEquals(null, state2.getStrategyId());\n        org.junit.Assert.assertEquals(0, state2.getParameterNames().size());\n        org.togglz.core.repository.FeatureState state3 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE3);\n        org.junit.Assert.assertEquals(true, state3.isEnabled());\n        org.junit.Assert.assertEquals(null, state2.getStrategyId());\n        org.junit.Assert.assertEquals(0, state3.getParameterNames().size());\n        org.togglz.core.repository.FeatureState state4 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE4);\n        org.junit.Assert.assertNull(state4);\n        state1.disable();\n        repo.setFeatureState(state1);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"false\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(org.togglz.core.activation.UsernameActivationStrategy.ID));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.users\"), org.hamcrest.Matchers.is(\"chkal,tester\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.users\"), org.hamcrest.Matchers.nullValue());\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 2,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "readFeatureStateFromOldFormat",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 15,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 35,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 75,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.google.appengine.api.NamespaceManager.set(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE);\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n            return null;\n        }\n    });\n    repository.getFeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getFeatureStateShouldRunWithinGivenNamespaceWhenCurrentNamespaceIsNotDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "2",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.Work<org.togglz.core.repository.FeatureState>() {\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState run() {\n            return decorated.getFeatureState(feature);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    state.setParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES, java.lang.String.format(\"%s,%s\", org.togglz.servlet.activation.ServerNameActivationStrategyTest.MATCHING_VHOST_NAME, org.togglz.servlet.activation.ServerNameActivationStrategyTest.DIFFERENT_VHOST_NAME));\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isTrue();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForFeatureOnMatchingOneDomainNameFromDomainList",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.enums.EnumFeatureMetaData metaData = new org.togglz.core.metadata.enums.EnumFeatureMetaData(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE);\n    java.util.Set<org.togglz.core.metadata.FeatureGroup> groups = metaData.getGroups();\n    org.junit.Assert.assertThat(groups, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(groups.size(), org.hamcrest.CoreMatchers.is(2));\n    org.togglz.core.metadata.FeatureGroup group1 = com.google.common.collect.Iterables.find(groups, createFeatureGroupLabelPredicate(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.FIELD_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(group1.contains(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n    org.togglz.core.metadata.FeatureGroup group2 = com.google.common.collect.Iterables.find(groups, createFeatureGroupLabelPredicate(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.CLASS_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(group2.contains(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "EnumFeatureMetaDataTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "constructorWillPopulateGroupsFromAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.label = org.togglz.core.util.FeatureAnnotations.getLabel(feature);\n    boolean enabledByDefault = org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(feature);\n    this.defaultFeatureState = new org.togglz.core.repository.FeatureState(feature, enabledByDefault);\n    org.togglz.core.annotation.DefaultActivationStrategy defaultActivationStrategy = org.togglz.core.util.FeatureAnnotations.getAnnotation(feature, org.togglz.core.annotation.DefaultActivationStrategy.class);\n    if (defaultActivationStrategy != null) {\n        this.defaultFeatureState.setStrategyId(defaultActivationStrategy.id());\n        for (org.togglz.core.annotation.ActivationParameter parameter : defaultActivationStrategy.parameters()) {\n            this.defaultFeatureState.setParameter(parameter.name(), parameter.value());\n        }\n    }\n    for (java.lang.annotation.Annotation annotation : org.togglz.core.util.FeatureAnnotations.getAnnotations(feature)) {\n        org.togglz.core.metadata.FeatureGroup group = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(annotation.annotationType());\n        if (group != null) {\n            groups.add(group);\n        }\n        java.lang.String[] attribute = org.togglz.core.util.FeatureAnnotations.getFeatureAttribute(annotation);\n        if (attribute != null) {\n            attributes.put(attribute[0], attribute[1]);\n        }\n    }\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 22,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return groups;\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getGroups",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new com.google.common.base.Predicate<org.togglz.core.metadata.FeatureGroup>() {\n        @java.lang.Override\n        public boolean apply(org.togglz.core.metadata.FeatureGroup group) {\n            return group.getLabel().equals(label);\n        }\n    };\n}",
                "ClassName": "EnumFeatureMetaDataTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createFeatureGroupLabelPredicate",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.System.setProperty(\"foo.bar\", \"true\");\n    setState(\"foo.baz\", \"true\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeFalseIfNoMatchingFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.SystemPropertyActivationStrategyTest.ScriptFeature.FEATURE).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME, propName).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE, propValue).setStrategyId(org.togglz.core.activation.SystemPropertyActivationStrategy.ID);\n}",
                "ClassName": "SystemPropertyActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), true, \"S1\", new org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param(\"one\", \"A\"), new org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param(\"two\", \"B\"));\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertEquals(2, state.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"A\", state.getParameter(\"one\"));\n    org.junit.Assert.assertEquals(\"B\", state.getParameter(\"two\"));\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "withStrategyParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.key = key;\n    this.value = value;\n}",
                "ClassName": "Param",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(name, enabled);\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name + \".strategy\", strategyName);\n    for (org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param param : params) {\n        org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty((name + \".param.\") + param.key, param.value);\n    }\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 44,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1);\n    assertThat(metaData.getAttributes()).doesNotContainValue(\"Christian\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullForOwnerNameByDefault",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroAsAnonymousUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"100\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(110)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAlwaysReturnTrueForOneHundredPercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.ONE.isActive());\n    org.junit.Assert.assertFalse(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.TWO.isActive());\n}",
        "ClassName": "TogglzRuleWithAnnotationTest",
        "Commit": "e400470fa98bb8fa832d379af8c62160cbf8814f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 3 Jun 2016 08:05:06 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureShouldBeInactiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1464933906",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setupTestWithEmptyDatastore();\n    org.togglz.core.repository.FeatureState savedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    savedFeatureState.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n    savedFeatureState.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"user1, user2, user3\");\n    stateRepository.setFeatureState(savedFeatureState);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(reflectionEquals(savedFeatureState, loadedFeatureState), org.hamcrest.CoreMatchers.is(true));\n    org.togglz.zookeeper.FeatureStateStorageWrapper externallySetStateWrapper = new org.togglz.zookeeper.FeatureStateStorageWrapper();\n    org.togglz.core.repository.FeatureState externallySetState = new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    com.fasterxml.jackson.databind.ObjectMapper objectMapper = new com.fasterxml.jackson.databind.ObjectMapper();\n    final java.lang.String json = objectMapper.writeValueAsString(externallySetStateWrapper);\n    final java.util.concurrent.CountDownLatch latch = new java.util.concurrent.CountDownLatch(1);\n    new java.lang.Thread(new java.lang.Runnable() {\n        @java.lang.Override\n        public void run() {\n            try {\n                serverClientPair.client.setData().forPath(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TEST_ZNODE + \"/FEATURE\", json.getBytes(\"UTF-8\"));\n                latch.countDown();\n            } catch (java.lang.Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }).start();\n    latch.await(2, java.util.concurrent.TimeUnit.SECONDS);\n    java.lang.Thread.sleep(25);\n    loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(reflectionEquals(externallySetState, loadedFeatureState), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "ZookeeperStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 1,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testZkNodeChangesUpdateFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 29,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 16,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "FeatureStateStorageWrapper",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    setupTestWithData(java.util.Collections.EMPTY_MAP);\n}",
                "ClassName": "ZookeeperStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setupTestWithEmptyDatastore",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = wrapperForFeatureState(featureState);\n    try {\n        java.lang.String json = org.togglz.zookeeper.ZookeeperStateRepository.objectMapper.writeValueAsString(wrapper);\n        java.lang.String path = (featuresZnode + \"/\") + featureState.getFeature().name();\n        curatorFramework.createContainers(path);\n        curatorFramework.setData().forPath(path, json.getBytes(\"UTF-8\"));\n        states.put(featureState.getFeature().name(), wrapper);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = states.get(feature.name());\n    if (wrapper != null) {\n        return featureStateForWrapper(feature, wrapper);\n    }\n    return null;\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 41,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    userRoles.add(\"ROLE_2\");\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"ROLE_1, ROLE_2, ROLE_3\");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnTrueWhenUserHasAnyOfSelectedRoles",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter[] parameters = strategy.getParameters();\n    org.junit.Assert.assertThat(parameters, org.hamcrest.Matchers.notNullValue());\n    org.junit.Assert.assertThat(parameters.length, org.hamcrest.Matchers.is(1));\n    org.togglz.core.activation.Parameter userParam = parameters[0];\n    org.junit.Assert.assertThat(userParam, org.hamcrest.Matchers.notNullValue());\n    org.junit.Assert.assertThat(userParam.getName(), org.hamcrest.Matchers.is(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCorrectParameterList",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.activation.Parameter[]{ org.togglz.core.activation.ParameterBuilder.create(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS).label(\"Users\").largeText().description(\"A list of users for which the feature is active.\") };\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameters",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(testFile);\n    for (int i = 0; i < NUMBER_OF_FEATURES; i++) {\n        java.lang.String name = \"FEATURE\" + i;\n        org.togglz.core.Feature feature = new org.togglz.core.repository.file.FileBasedStateRepositoryConcurrencyTest.TestFeature(name);\n        final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature).setStrategyId(\"strategy-for-\" + name).setParameter(\"param-of-\" + name, \"some-value-of-\" + name);\n        executor.submit(new java.lang.Runnable() {\n            @java.lang.Override\n            public void run() {\n                repo.setFeatureState(state);\n            }\n        });\n    }\n    executor.shutdown();\n    executor.awaitTermination(5, java.util.concurrent.TimeUnit.SECONDS);\n    for (int i = 0; i < NUMBER_OF_FEATURES; i++) {\n        java.lang.String name = \"FEATURE\" + i;\n        org.togglz.core.repository.file.FileBasedStateRepositoryConcurrencyTest.TestFeature feature = new org.togglz.core.repository.file.FileBasedStateRepositoryConcurrencyTest.TestFeature(name);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(feature);\n        assertThat(state).isNotNull();\n        assertThat(state.getStrategyId()).isEqualTo(\"strategy-for-\" + name);\n        assertThat(state.getParameterMap()).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param-of-\" + name, \"some-value-of-\" + name));\n    }\n}",
        "ClassName": "FileBasedStateRepositoryConcurrencyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 2,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkUnderHeavyLoad",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 2,
        "NumberOfLines": 24,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 11,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "TestFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableMap(this.parameters);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterMap",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 2,
        "TotalNumberOfLines": 73,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.disable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.enable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllEnabledTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testToggleFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.disable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.enable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setStrategyId(\"something\");\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(2));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"something\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setStrategyId",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 17,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 64,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = somebody\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroLoginAsNormalUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=ck\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = true\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledForOneUserWithCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    featureUserProvider.setFeatureUser(null);\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    featureUserProvider.setFeatureUser(new org.togglz.core.user.SimpleFeatureUser(\"admin\", false));\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    featureUserProvider.setFeatureUser(new org.togglz.core.user.SimpleFeatureUser(\"somebody\", false));\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    featureUserProvider.setFeatureUser(null);\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.EXPERIMENTAL));\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.MISSING_STRATEGY));\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.EMPTY_STRATEGY));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testIsActive",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureUser = featureUser;\n}",
                "ClassName": "TestFeatureUserProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"my-strategy\");\n    initialProps.setProperty(\"FEATURE1.param.myparam\", \"some-value\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setParameter(\"other\", \"something-else\");\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(4));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"my-strategy\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.myparam\"), org.hamcrest.Matchers.is(\"some-value\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.other\"), org.hamcrest.Matchers.is(\"something-else\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "addNewProperty",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 68,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).enable();\n    javax.sql.DataSource spyedDataSource = org.mockito.Mockito.spy(dataSource);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(spyedDataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n    org.mockito.Mockito.when(spyedDataSource.getConnection()).thenThrow(new java.sql.SQLException(\"Failed to get a connection\"));\n    repository.setFeatureState(state);\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldPropagateTheExceptionWhenWriteFails",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(new org.togglz.core.repository.jdbc.JDBCStateRepository.Builder(dataSource).tableName(tableName).createTable(createTable).serializer(serializer));\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 53,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> result = org.togglz.core.util.FeatureAnnotations.getAnnotations(org.togglz.core.util.FeatureAnnotationsTest.MyFeature2.FEATURE_WITH_NO_ANNOTATIONS);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.size(), org.hamcrest.CoreMatchers.is(0));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationsWillReturnEmptySetWhenThereAreNoAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 14,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> annotations = new java.util.HashSet<java.lang.annotation.Annotation>();\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        java.lang.annotation.Annotation[] fieldAnnotations = featureClass.getField(feature.name()).getAnnotations();\n        java.lang.annotation.Annotation[] classAnnotations = featureClass.getAnnotations();\n        annotations.addAll(java.util.Arrays.asList(fieldAnnotations));\n        annotations.addAll(java.util.Arrays.asList(classAnnotations));\n        return annotations;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return annotations;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotations",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.feature-enums: i.dont.exist.features\");\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureEnumsClassNotFound",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, org.togglz.core.activation.ScriptEngineActivationStrategyTest.INVALID_JAVASCRIPT);\n    boolean active = strategy.isActive(state, aFeatureUser(\"john\"));\n    assertThat(active).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForInvalidJavaScript",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllDisabledTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testActiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"100x\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForInvalidPercentage",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection authorities = new java.util.ArrayList<org.springframework.security.core.GrantedAuthority>();\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_1\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_2\"));\n    when(authentication.getAuthorities()).thenReturn(authorities);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    java.lang.Object authoritiesAttr = user.getAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES);\n    org.junit.Assert.assertThat(authoritiesAttr, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(authoritiesAttr, org.hamcrest.CoreMatchers.is(java.util.Set.class));\n    java.util.Set<java.lang.String> authoritySet = ((java.util.Set<java.lang.String>) (authoritiesAttr));\n    org.junit.Assert.assertThat(authoritySet.size(), org.hamcrest.CoreMatchers.is(2));\n    org.junit.Assert.assertThat(authoritySet.contains(\"ROLE_1\"), org.hamcrest.CoreMatchers.is(true));\n    org.junit.Assert.assertThat(authoritySet.contains(\"ROLE_2\"), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "SpringSecurityUserProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 13,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getCurrentUserWillCopyAuthoritiesFromAuthenticationIntoFeatureUser",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 13,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 14,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.springframework.security.core.context.SecurityContext context = org.springframework.security.core.context.SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication authentication = context.getAuthentication();\n    if (authentication != null) {\n        java.lang.String name = getUserName(authentication);\n        java.util.Set<java.lang.String> authorities = org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n        boolean featureAdmin = isFeatureAdmin(authentication, authorities);\n        org.togglz.core.user.SimpleFeatureUser user = new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin);\n        user.setAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES, authorities);\n        return user;\n    }\n    return null;\n}",
                "ClassName": "SpringSecurityUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 13,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.Weighted prioMinInt = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return java.lang.Integer.MIN_VALUE;\n        }\n    };\n    org.togglz.core.util.Weighted prio50 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 50;\n        }\n    };\n    java.util.List<org.togglz.core.util.Weighted> list = new java.util.ArrayList<org.togglz.core.util.Weighted>();\n    list.add(prio50);\n    list.add(prioMinInt);\n    java.util.Collections.sort(list, new org.togglz.core.util.Weighted.WeightedComparator());\n    assertThat(list).containsExactly(prioMinInt, prio50);\n}",
        "ClassName": "WeightedTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportMinimumIntValue",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "3",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "4",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "WeightedComparator",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    runPerformanceTest(org.togglz.core.repository.file.FileBasedRepositoryPerformanceTest.PerformanceFeatures.MISSING);\n}",
        "ClassName": "FileBasedRepositoryPerformanceTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "readingMissingFeature",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (int l = 0; l < 6; l++) {\n        long start = java.lang.System.currentTimeMillis();\n        for (int i = 0; i < 100000; i++) {\n            repository.getFeatureState(feature);\n        }\n        long time = java.lang.System.currentTimeMillis() - start;\n        java.lang.System.out.println(((\"Time for \" + feature.name()) + \": \") + time);\n    }\n}",
                "ClassName": "FileBasedRepositoryPerformanceTest",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "runPerformanceTest",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertEquals(0, org.togglz.core.util.Strings.splitAndTrim(null, \",\").size());\n    org.junit.Assert.assertEquals(0, org.togglz.core.util.Strings.splitAndTrim(\"   \", \",\").size());\n    java.util.List<java.lang.String> first = org.togglz.core.util.Strings.splitAndTrim(\"   ,foo\", \",\");\n    org.junit.Assert.assertEquals(1, first.size());\n    org.junit.Assert.assertEquals(\"foo\", first.get(0));\n    java.util.List<java.lang.String> second = org.togglz.core.util.Strings.splitAndTrim(\" foo,,,bar  \", \",\");\n    org.junit.Assert.assertEquals(2, second.size());\n    org.junit.Assert.assertEquals(\"foo\", second.get(0));\n    org.junit.Assert.assertEquals(\"bar\", second.get(1));\n}",
        "ClassName": "StringsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 12,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "splitAndTrim",
        "MinimumCyclomaticComplexity": 3,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 12,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 11,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.util.List<java.lang.String> result = new java.util.ArrayList<java.lang.String>();\n    if (org.togglz.core.util.Strings.isNotBlank(value)) {\n        java.lang.String[] segements = value.split(regex);\n        for (java.lang.String segment : segements) {\n            if (org.togglz.core.util.Strings.isNotBlank(segment)) {\n                result.add(segment.trim());\n            }\n        }\n    }\n    return result;\n}",
                "ClassName": "Strings",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "splitAndTrim",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.manager.EnumBasedFeatureProvider(null);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForNull",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    assertThat(manager.getFeatures()).contains(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS, org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.EXPERIMENTAL, org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.MISSING_STRATEGY);\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.appengine.repository.FixedNamespaceStateRepository(\"\", mockedStateRepository);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAcceptEmptyNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 5,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 5,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"0\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(110)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAlwaysReturnFalseForZeroPercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", org.togglz.core.activation.UsernameActivationStrategy.ID);\n    initialProps.setProperty(\"FEATURE1.param.users\", \"chkal,tester\");\n    initialProps.setProperty(\"FEATURE2\", \"false\");\n    initialProps.setProperty(\"FEATURE3\", \"true\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        repo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1, false));\n        repo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE2, true).setStrategyId(\"some-strategy\").setParameter(\"myparam\", \"myvalue\"));\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(5));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"false\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE2\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE2.strategy\"), org.hamcrest.Matchers.is(\"some-strategy\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE2.param.myparam\"), org.hamcrest.Matchers.is(\"myvalue\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE3\"), org.hamcrest.Matchers.is(\"true\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "updateMultipleStates",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 23,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 49,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    counter++;\n    switch (counter) {\n        case 1 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        case 2 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        case 3 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        case 4 :\n            org.junit.Assert.assertEquals(false, org.togglz.junit.vary.MyFeatures.F1.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F2.isActive());\n            org.junit.Assert.assertEquals(true, org.togglz.junit.vary.MyFeatures.F3.isActive());\n            break;\n        default :\n            org.junit.Assert.fail(\"Incorrect execution cound\");\n    }\n}",
        "ClassName": "TogglzRuleWithVariations_CalledMultipleTimes_Test",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 13,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 27,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline(\"\\n\");\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"foo\\r\\nbar\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=foo\\\\r\\\\nbar\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"foo\\r\\nbar\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "escapesNewLineInMultilineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true, lineSeparator);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), false);\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(false, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReadFalseStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name, java.lang.Boolean.toString(enabled));\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 42,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 0, NULL, NULL)\");\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(false, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.lang.String sql = \"SELECT FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE% WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement statement = connection.prepareStatement(insertTableName(sql));\n            try {\n                statement.setString(1, feature.name());\n                java.sql.ResultSet resultSet = statement.executeQuery();\n                try {\n                    if (resultSet.next()) {\n                        boolean enabled = resultSet.getInt(org.togglz.core.repository.jdbc.Columns.FEATURE_ENABLED) > 0;\n                        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature, enabled);\n                        java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                        if (org.togglz.core.util.Strings.isNotBlank(strategyId)) {\n                            state.setStrategyId(strategyId.trim());\n                        }\n                        java.lang.String paramData = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS);\n                        if (org.togglz.core.util.Strings.isNotBlank(paramData)) {\n                            java.util.Map<java.lang.String, java.lang.String> params = serializer.deserialize(paramData);\n                            for (java.util.Map.Entry<java.lang.String, java.lang.String> param : params.entrySet()) {\n                                state.setParameter(param.getKey(), param.getValue());\n                            }\n                        }\n                        return state;\n                    }\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to fetch the feature's state from the database\", e);\n    }\n    return null;\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 40,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 69,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.spring.test.proxy.SomeService someService = ((org.togglz.spring.test.proxy.SomeService) (getSpringBean(\"someServiceManuallySetProxyType\")));\n    org.junit.Assert.assertNotNull(someService);\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.spring.test.proxy.ProxyFeatures.SERVICE_TOGGLE, false));\n    org.junit.Assert.assertEquals(\"I'm SomeServiceInactive\", someService.whoAreYou());\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.spring.test.proxy.ProxyFeatures.SERVICE_TOGGLE, true));\n    org.junit.Assert.assertEquals(\"I'm SomeServiceActive\", someService.whoAreYou());\n}",
        "ClassName": "FeatureProxyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testProxyWithManuallySetProxyType",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.springframework.web.context.WebApplicationContext applicationContext = org.springframework.web.context.ContextLoader.getCurrentWebApplicationContext();\n    return applicationContext.getBean(name);\n}",
                "ClassName": "FeatureProxyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getSpringBean",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroWithCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider().addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class).addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getFeatures()).hasSize(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.values().length + org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.values().length).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCombinedFeatureListForMultipleEnums",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if ((featureEnum == null) || (!featureEnum.isEnum())) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnum argument must be an enum\");\n    }\n    addFeatures(java.util.Arrays.asList(featureEnum.getEnumConstants()));\n    return this;\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addFeatureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.feature-manager-name: Custom Feature Manager Name\");\n    org.junit.Assert.assertEquals(\"Custom Feature Manager Name\", this.context.getBean(org.togglz.core.manager.FeatureManager.class).getName());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customFeatureManagerName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setState(\"foo.bar\", \"foobar\");\n    java.lang.System.setProperty(\"foo.bar\", \"foobar\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeTrueIfPropertyStringsMatch",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.SystemPropertyActivationStrategyTest.ScriptFeature.FEATURE).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME, propName).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE, propValue).setStrategyId(org.togglz.core.activation.SystemPropertyActivationStrategy.ID);\n}",
                "ClassName": "SystemPropertyActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.FeatureStateTest.Features.FEATURE1);\n    org.junit.Assert.assertThat(state.isEnabled(), org.hamcrest.Matchers.is(false));\n    org.junit.Assert.assertThat(state.getParameterNames(), org.hamcrest.Matchers.empty());\n    state.enable();\n    org.junit.Assert.assertThat(state.isEnabled(), org.hamcrest.Matchers.is(true));\n    state.setParameter(\"foo\", \"bar\");\n    org.junit.Assert.assertThat(state.getParameterNames().size(), org.hamcrest.Matchers.is(1));\n    org.junit.Assert.assertThat(state.getParameter(\"foo\"), org.hamcrest.Matchers.is(\"bar\"));\n    state.setParameter(\"foo\", null);\n    org.junit.Assert.assertThat(state.getParameterNames().size(), org.hamcrest.Matchers.is(0));\n}",
        "ClassName": "FeatureStateTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSimpleFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(\"test,alpha,dev,uat,rc1\");\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseWhenNoneOfTheVersionsMatchTheServerCurrentVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    when(featureManager.isActive(featureNamed(\"test\"))).thenReturn(true);\n    org.togglz.core.util.FeatureMap map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map.get(new org.togglz.core.util.NamedFeature(\"test\"))).isEqualTo(true);\n    assertThat(map.get(new org.togglz.core.util.NamedFeature(\"other\"))).isEqualTo(false);\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportLookupByFeatureInstance",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.mockito.Matchers.argThat(new org.hamcrest.BaseMatcher<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(java.lang.Object obj) {\n            if (obj instanceof org.togglz.core.Feature) {\n                return ((org.togglz.core.Feature) (obj)).name().equals(name);\n            }\n            return false;\n        }\n\n        @java.lang.Override\n        public void describeTo(org.hamcrest.Description desc) {\n            desc.appendText(\"Does not match: \" + name);\n        }\n    });\n}",
                "ClassName": "FeatureMapTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(key, \"The feature must not be null\");\n    org.togglz.core.Feature feature = null;\n    if (key instanceof org.togglz.core.Feature) {\n        feature = ((org.togglz.core.Feature) (key));\n    } else {\n        feature = new org.togglz.core.util.NamedFeature(key.toString());\n    }\n    return manager.isActive(feature);\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 32,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").doesNotContain(org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy.class.getSimpleName()).doesNotContain(org.togglz.core.activation.DefaultActivationStrategyProviderTest.AnotherCustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldNotContainCustomStrategyIfNotAdded",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1).enable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(repository.kind(), org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1.name());\n    final com.google.appengine.api.datastore.Entity featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(true, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertEquals(\"someId\", featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"param\")));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"foo\")));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(kind(), featureState.getFeature().name());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, featureState.isEnabled());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, featureState.getStrategyId());\n    final java.util.Map<java.lang.String, java.lang.String> params = featureState.getParameterMap();\n    if ((params != null) && (!params.isEmpty())) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>(params.size());\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>(params.size());\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    putInsideTransaction(featureEntity);\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 38,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).enable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(1, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"someId\", query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"param=foo\", query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 84,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"99\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(98)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(199)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkCorrectlyForNinetyNinePercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllEnabledTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testActiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=other\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledForOneUserWithOtherUsers",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.annotation.EnabledByDefault result = org.togglz.core.util.FeatureAnnotations.getAnnotation(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT, org.togglz.core.annotation.EnabledByDefault.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationWillReturnFieldLevelAnnotation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        A fieldAnnotation = featureClass.getField(feature.name()).getAnnotation(annotationType);\n        A classAnnotation = featureClass.getAnnotation(annotationType);\n        return fieldAnnotation != null ? fieldAnnotation : classAnnotation;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return null;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotation",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection<java.lang.String> userRoles = new java.util.ArrayList<java.lang.String>();\n    userRoles.add(\"SOME_ROLE\");\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"SOME_ROLE\");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "doesntFailForOtherCollectionTypes",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.repository.MemcacheStateRepository repository = new org.togglz.appengine.repository.MemcacheStateRepository(delegate);\n    for (int i = 0; i < 10; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n    org.junit.Assert.assertTrue(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n}",
        "ClassName": "MemcacheStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfReadOperationsWithTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.delegate = delegate;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = ((org.togglz.core.repository.FeatureState) (cache.get(key(feature.name()))));\n    if (state == null) {\n        state = delegate.getFeatureState(feature);\n        cache.put(key(feature.name()), state, getExpiration());\n    }\n    return state;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.MemcacheStateRepository.KEY_PREFIX + featureName;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "key",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.console.path: /custom\");\n    org.junit.Assert.assertEquals(1, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertTrue(this.context.getBean(org.springframework.boot.context.embedded.ServletRegistrationBean.class).getUrlMappings().contains(\"/custom/*\"));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customConsolePath",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    state.setParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS, getMachineIP());\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(true, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForFeatureOnCorrectMachine",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Enumeration<java.net.NetworkInterface> interfaces = java.net.NetworkInterface.getNetworkInterfaces();\n        if (interfaces != null) {\n            while (interfaces.hasMoreElements()) {\n                java.util.Enumeration<java.net.InetAddress> addresses = interfaces.nextElement().getInetAddresses();\n                if (addresses != null) {\n                    while (addresses.hasMoreElements()) {\n                        java.lang.String hostAddress = addresses.nextElement().getHostAddress();\n                        if (hostAddress != null) {\n                            return hostAddress.trim();\n                        }\n                    } \n                }\n            } \n        }\n        return null;\n    } catch (java.net.SocketException e) {\n        return \"<no-ip>\";\n    }\n}",
                "ClassName": "IPActivationStrategyTest",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "getMachineIP",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 21,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 9,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 55,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ck\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID).setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"person1,ck,person2\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(true, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 36,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    manager.disable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldToggleIndividualFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    activeFeatures.add(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.remove(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enable(new org.togglz.core.util.NamedFeature(\"ONE\"));\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    manager.disable(new org.togglz.core.util.NamedFeature(\"ONE\"));\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportTogglingUntypedFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.add(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.remove(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    helper.setEnvIsLoggedIn(false);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertNull(user);\n}",
        "ClassName": "UserServiceUserProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "userIsNotLoggedIn",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.user.SimpleFeatureUser featureUser = null;\n    com.google.appengine.api.users.User user = userService.getCurrentUser();\n    if (user != null) {\n        featureUser = new org.togglz.core.user.SimpleFeatureUser(user.getUserId(), userService.isUserAdmin());\n        featureUser.setAttribute(\"email\", user.getEmail());\n        featureUser.setAttribute(\"nickname\", user.getNickname());\n    }\n    return featureUser;\n}",
                "ClassName": "UserServiceUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.cache.enabled: true\");\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.cache.CachingStateRepository);\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "cacheEnabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.google.appengine.api.NamespaceManager.set(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE);\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            return null;\n        }\n    });\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n    repository.getFeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFallbackToOriginalNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 18,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "5",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.VoidWork() {\n        @java.lang.Override\n        void vrun() {\n            decorated.setFeatureState(featureState);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.Work<org.togglz.core.repository.FeatureState>() {\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState run() {\n            return decorated.getFeatureState(feature);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 41,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertTrue(manager.isActive(new org.togglz.core.util.NamedFeature(\"ONE\")));\n    manager.disable(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE);\n    org.junit.Assert.assertFalse(manager.isActive(new org.togglz.core.util.NamedFeature(\"ONE\")));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportReadingWithNamedFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.add(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.remove(feature.name());\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldDetectMissingTable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 22,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Map<java.lang.String, java.lang.String> initialData = new java.util.HashMap<>();\n    initialData.put(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TEST_ZNODE + \"/FEATURE\", \"{\\\"enabled\\\":true,\\\"strategyId\\\":null,\\\"parameters\\\":{}}\");\n    setupTestWithData(initialData);\n    org.togglz.core.repository.FeatureState expectedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    expectedFeatureState.setEnabled(true);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(reflectionEquals(expectedFeatureState, loadedFeatureState), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "ZookeeperStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testLoadingWithSavedState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    serverClientPair = org.togglz.zookeeper.ZookeeperStateRepositoryTest.startServer(initialParameters);\n    stateRepository = org.togglz.zookeeper.ZookeeperStateRepository.newBuilder(serverClientPair.client, org.togglz.zookeeper.ZookeeperStateRepositoryTest.TEST_ZNODE).build();\n}",
                "ClassName": "ZookeeperStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setupTestWithData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = states.get(feature.name());\n    if (wrapper != null) {\n        return featureStateForWrapper(feature, wrapper);\n    }\n    return null;\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 1
    },
    {
        "Body": "{\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isFalse();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyDomainList",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 9,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 0, NULL, NULL)\");\n    javax.sql.DataSource spyedDataSource = org.mockito.Mockito.spy(dataSource);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(spyedDataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n    org.mockito.Mockito.when(spyedDataSource.getConnection()).thenThrow(new java.sql.SQLException(\"Failed to get a connection\"));\n    repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1);\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 15,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldPropagateTheExceptionWhenReadFails",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(new org.togglz.core.repository.jdbc.JDBCStateRepository.Builder(dataSource).tableName(tableName).createTable(createTable).serializer(serializer));\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.lang.String sql = \"SELECT FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE% WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement statement = connection.prepareStatement(insertTableName(sql));\n            try {\n                statement.setString(1, feature.name());\n                java.sql.ResultSet resultSet = statement.executeQuery();\n                try {\n                    if (resultSet.next()) {\n                        boolean enabled = resultSet.getInt(org.togglz.core.repository.jdbc.Columns.FEATURE_ENABLED) > 0;\n                        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature, enabled);\n                        java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                        if (org.togglz.core.util.Strings.isNotBlank(strategyId)) {\n                            state.setStrategyId(strategyId.trim());\n                        }\n                        java.lang.String paramData = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS);\n                        if (org.togglz.core.util.Strings.isNotBlank(paramData)) {\n                            java.util.Map<java.lang.String, java.lang.String> params = serializer.deserialize(paramData);\n                            for (java.util.Map.Entry<java.lang.String, java.lang.String> param : params.entrySet()) {\n                                state.setParameter(param.getKey(), param.getValue());\n                            }\n                        }\n                        return state;\n                    }\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to fetch the feature's state from the database\", e);\n    }\n    return null;\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 40,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 63,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n}",
        "ClassName": "ThreadLocalFeatureManagerProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "firstTest",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.UNKNOWN_LANGUAGE, org.togglz.core.activation.ScriptEngineActivationStrategyTest.SOME_SCRIPT);\n    boolean active = strategy.isActive(state, aFeatureUser(\"john\"));\n    assertThat(active).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForUnsupportedLanguage",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class, org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getFeatures()).hasSize(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.values().length + org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.values().length).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).contains(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCombinedFeatureListForMultipleEnumsViaConstructor",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.singleline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"foo\\r\\nbar\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=foo\\\\r\\\\nbar\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"foo\\r\\nbar\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "escapesNewLineInSinglelineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(false);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "singleline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.ONE.isActive());\n    org.junit.Assert.assertFalse(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.TWO.isActive());\n}",
        "ClassName": "TogglzRuleWithAnnotationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureShouldBeActiveWithAnnotation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = null;\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID).setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"person1,ck,person2\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForUnknownUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 32,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 0);\n    for (int i = 0; i < 10; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfReadOperationsWithoutTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityWithSomeOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.Weighted prioMaxInt = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return java.lang.Integer.MAX_VALUE;\n        }\n    };\n    org.togglz.core.util.Weighted prio50 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 50;\n        }\n    };\n    java.util.List<org.togglz.core.util.Weighted> list = new java.util.ArrayList<org.togglz.core.util.Weighted>();\n    list.add(prioMaxInt);\n    list.add(prio50);\n    java.util.Collections.sort(list, new org.togglz.core.util.Weighted.WeightedComparator());\n    assertThat(list).containsExactly(prio50, prioMaxInt);\n}",
        "ClassName": "WeightedTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportMaximumIntValue",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "5",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "6",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "WeightedComparator",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    state.setParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES, org.togglz.servlet.activation.ServerNameActivationStrategyTest.MATCHING_VHOST_NAME);\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isTrue();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForFeatureOnMatchingDomainName",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.repository.cache.CachingStateRepository(delegate, -1);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForNegativeTtl",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertThat(activationStrategy.getId(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.ID));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getIdWillReturnConstant",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.activation.UserRoleActivationStrategy.ID;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"50\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(25)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(49)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(50)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFindCorrectDecisionForIntermediateValues",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    crepo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertNull(repo1.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1));\n    org.junit.Assert.assertTrue(repo2.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureLAST",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : setterSelection.getSelected(repositories)) {\n        repository.setFeatureState(featureState);\n    }\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F1.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F2.isActive() || (!org.togglz.junit.vary.MyFeatures.F2.isActive()));\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F3.isActive() || (!org.togglz.junit.vary.MyFeatures.F3.isActive()));\n}",
        "ClassName": "TogglzRuleWithVariations_HappyCase_Test",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature;true;Group1\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isTrue();\n    assertThat(metadata.getGroups()).hasSize(1).areExactly(1, groupNamed(\"Group1\"));\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithSingleGroup",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.metadata.FeatureGroup>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.metadata.FeatureGroup value) {\n            return (value != null) && value.getLabel().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "groupNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isFalse();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithOnlyLabel",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.DefaultActivationStrategyProvider provider = new org.togglz.core.activation.DefaultActivationStrategyProvider();\n    org.togglz.core.manager.FeatureManagerBuilder.begin().featureEnum(org.togglz.core.manager.FeatureManagerBuilderTest.Features.class).activationStrategyProvider(provider).activationStrategy(new org.togglz.core.manager.FeatureManagerBuilderTest.CustomActivationStrategy()).build();\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.manager.FeatureManagerBuilderTest.CustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "FeatureManagerBuilderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAddStrategyIfUsingDefaultProvider",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (org.togglz.core.spi.ActivationStrategy activationStrategy : java.util.ServiceLoader.load(org.togglz.core.spi.ActivationStrategy.class)) {\n        strategies.add(activationStrategy);\n    }\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (strategyProvider instanceof org.togglz.core.activation.DefaultActivationStrategyProvider) {\n        ((org.togglz.core.activation.DefaultActivationStrategyProvider) (strategyProvider)).addActivationStrategy(strategy);\n        return this;\n    }\n    throw new java.lang.IllegalStateException(\"Adding ActivationStrategies is only allowed when using \" + org.togglz.core.activation.DefaultActivationStrategyProvider.class.getSimpleName());\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyProvider = strategyProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategyProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.manager.FeatureManagerBuilder();\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "begin",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"foo\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setStrategyId(null);\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(1));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "removeStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 17,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 64,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzEndpointTest.FeatureProviderConfig.class, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.features.FEATURE_ONE: true\", \"togglz.features.FEATURE_TWO: false\", \"togglz.features.FEATURE_TWO.strategy: release-date\", \"togglz.features.FEATURE_TWO.param.date: 2016-07-01\", \"togglz.features.FEATURE_TWO.param.time: 08:30:00\");\n    org.togglz.spring.boot.autoconfigure.TogglzEndpoint endpoint = this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class);\n    java.util.List<org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature> features = endpoint.invoke();\n    org.junit.Assert.assertEquals(2, features.size());\n    org.junit.Assert.assertEquals(\"FEATURE_ONE\", features.get(0).getName());\n    org.junit.Assert.assertTrue(features.get(0).isEnabled());\n    org.junit.Assert.assertNull(features.get(0).getStrategy());\n    org.junit.Assert.assertEquals(0, features.get(0).getParams().size());\n    org.junit.Assert.assertEquals(\"FEATURE_TWO\", features.get(1).getName());\n    org.junit.Assert.assertFalse(features.get(1).isEnabled());\n    org.junit.Assert.assertEquals(\"release-date\", features.get(1).getStrategy());\n    org.junit.Assert.assertEquals(2, features.get(1).getParams().size());\n    org.junit.Assert.assertEquals(\"2016-07-01\", features.get(1).getParams().get(\"date\"));\n    org.junit.Assert.assertEquals(\"08:30:00\", features.get(1).getParams().get(\"time\"));\n}",
        "ClassName": "TogglzEndpointTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "invoke",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.context.annotation.AnnotationConfigApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzEndpointTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.util.List<org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature> features = new java.util.ArrayList<org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature>();\n    for (org.togglz.core.Feature feature : this.featureManager.getFeatures()) {\n        org.togglz.core.repository.FeatureState featureState = this.featureManager.getFeatureState(feature);\n        features.add(new org.togglz.spring.boot.autoconfigure.TogglzEndpoint.TogglzFeature(feature, featureState));\n    }\n    return features;\n}",
                "ClassName": "TogglzEndpoint",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 1,
                "MethodName": "invoke",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return name;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getName",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategy;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return params;\n}",
                "ClassName": "TogglzFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParams",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 26,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1).disable();\n    repository.setFeatureState(state);\n    final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(repository.kind(), org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1.name());\n    final com.google.appengine.api.datastore.Entity featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(false, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertNull(featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertNull(featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES));\n    org.junit.Assert.assertNull(featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateWithoutStrategyOrParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(kind(), featureState.getFeature().name());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, featureState.isEnabled());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, featureState.getStrategyId());\n    final java.util.Map<java.lang.String, java.lang.String> params = featureState.getParameterMap();\n    if ((params != null) && (!params.isEmpty())) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>(params.size());\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>(params.size());\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    putInsideTransaction(featureEntity);\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 26,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    when(featureManager.isActive(featureNamed(\"test\"))).thenReturn(true);\n    org.togglz.core.util.FeatureMap map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map.get(\"test\")).isEqualTo(true);\n    assertThat(map.get(\"other\")).isEqualTo(false);\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportLookupByFeatureName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.mockito.Matchers.argThat(new org.hamcrest.BaseMatcher<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(java.lang.Object obj) {\n            if (obj instanceof org.togglz.core.Feature) {\n                return ((org.togglz.core.Feature) (obj)).name().equals(name);\n            }\n            return false;\n        }\n\n        @java.lang.Override\n        public void describeTo(org.hamcrest.Description desc) {\n            desc.appendText(\"Does not match: \" + name);\n        }\n    });\n}",
                "ClassName": "FeatureMapTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(key, \"The feature must not be null\");\n    org.togglz.core.Feature feature = null;\n    if (key instanceof org.togglz.core.Feature) {\n        feature = ((org.togglz.core.Feature) (key));\n    } else {\n        feature = new org.togglz.core.util.NamedFeature(key.toString());\n    }\n    return manager.isActive(feature);\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    givenSomeDataSourceWithAutoCommitSetTo(false);\n    whenTheFeatureIsEnabled();\n    thenTheDatabaseShouldBeUpdated();\n}",
        "ClassName": "JDBCRepositoryAutoCommitTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldUpdateWithAutoCommitDisabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String url = (\"jdbc:h2:mem:\" + this.getClass().getSimpleName()) + java.lang.System.currentTimeMillis();\n    org.h2.jdbcx.JdbcConnectionPool pool = org.h2.jdbcx.JdbcConnectionPool.create(url, \"sa\", \"\");\n    dataSource = new org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitTestDataSource(pool, autoCommit);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(dataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "givenSomeDataSourceWithAutoCommitSetTo",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1).enable().setStrategyId(\"foobar\");\n    repository.setFeatureState(state);\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "whenTheFeatureIsEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1);\n    assertThat(state).isNotNull();\n    assertThat(state.isEnabled()).isTrue();\n    assertThat(state.getStrategyId()).isEqualTo(\"foobar\");\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "thenTheDatabaseShouldBeUpdated",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n        org.junit.Assert.assertFalse(updater.isSchemaVersion1());\n        updater.migrateToVersion1();\n        org.junit.Assert.assertTrue(updater.isSchemaVersion1());\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldDetectVersion1",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return columnExists(org.togglz.core.repository.jdbc.Columns.FEATURE_NAME) && (!columnExists(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID));\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isSchemaVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"CREATE TABLE %TABLE% (FEATURE_NAME VARCHAR(100) PRIMARY KEY, FEATURE_ENABLED INTEGER, FEATURE_USERS VARCHAR(2000))\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 28,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"var len = user.name.length();\\r\\n len % 2 == 0;\\n\");\n    assertThat(strategy.isActive(state, aFeatureUser(\"john\"))).isTrue();\n    assertThat(strategy.isActive(state, aFeatureUser(\"jim\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportMultilineScripts",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user?user=ck\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = ck\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = true\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureAdminFlagForAdminUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.Feature feature = new org.togglz.core.util.NamedFeature(\"SAMPLE_FEATURE\");\n    org.togglz.core.repository.FeatureState featureState = new org.togglz.core.repository.FeatureState(feature, true);\n    stateRepository.setFeatureState(featureState);\n    org.togglz.core.repository.FeatureState storedFeatureState = stateRepository.getFeatureState(feature);\n    org.junit.Assert.assertTrue(storedFeatureState.isEnabled());\n    org.junit.Assert.assertTrue(org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(featureState, storedFeatureState, true));\n    featureState.setEnabled(false);\n    stateRepository.setFeatureState(featureState);\n    storedFeatureState = stateRepository.getFeatureState(feature);\n    org.junit.Assert.assertFalse(storedFeatureState.isEnabled());\n    org.junit.Assert.assertTrue(org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(featureState, storedFeatureState, true));\n}",
        "ClassName": "HazelcastStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureStateExistingInMap",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"my-strategy\");\n    initialProps.setProperty(\"FEATURE1.param.myparam\", \"some-value\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.setParameter(\"myparam\", null);\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(2));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"my-strategy\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "removeProperty",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 68,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    manager.enableAll();\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    org.junit.Assert.assertTrue(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.TWO));\n    manager.disableAll();\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.TWO));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldToggleAllFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (org.togglz.core.Feature feature : featureEnum.getEnumConstants()) {\n        enable(feature);\n    }\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "enableAll",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    activeFeatures.clear();\n    return this;\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disableAll",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    junit.framework.Assert.assertEquals(false, org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITH_LABEL));\n    junit.framework.Assert.assertEquals(false, org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITHOUT_LABEL));\n    junit.framework.Assert.assertEquals(true, org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testIsEnabledByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.util.FeatureAnnotations.isAnnotationPresent(feature, org.togglz.core.annotation.EnabledByDefault.class);\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabledByDefault",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.FeatureGroup result = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.FieldLevelGroup.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.getLabel(), org.hamcrest.CoreMatchers.is(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.FIELD_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(result.contains(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "AnnotationFeatureGroupTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "buildWillReturnFeatureGroupWhenFeatureGroupAnnotationIsPresentForFieldLevelGroup",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (groupAnnotation.isAnnotationPresent(org.togglz.core.annotation.FeatureGroup.class)) {\n        return new org.togglz.core.metadata.enums.AnnotationFeatureGroup(groupAnnotation);\n    }\n    return null;\n}",
                "ClassName": "AnnotationFeatureGroup",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.appengine.repository.FixedNamespaceStateRepository(\"\", null);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldNotAcceptNullDecorated",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 5,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 5,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    runPerformanceTest(org.togglz.core.repository.file.FileBasedRepositoryPerformanceTest.PerformanceFeatures.EXISTING);\n}",
        "ClassName": "FileBasedRepositoryPerformanceTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "readingExistingFeature",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (int l = 0; l < 6; l++) {\n        long start = java.lang.System.currentTimeMillis();\n        for (int i = 0; i < 100000; i++) {\n            repository.getFeatureState(feature);\n        }\n        long time = java.lang.System.currentTimeMillis() - start;\n        java.lang.System.out.println(((\"Time for \" + feature.name()) + \": \") + time);\n    }\n}",
                "ClassName": "FileBasedRepositoryPerformanceTest",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "runPerformanceTest",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user?user=other\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = other\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = false\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureAdminFlagForOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setupTestWithEmptyDatastore();\n    org.junit.Assert.assertNull(stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE));\n    stateRepository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE));\n    org.junit.Assert.assertNotNull(stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE));\n}",
        "ClassName": "ZookeeperStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureSavingAndLoading",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    setupTestWithData(java.util.Collections.EMPTY_MAP);\n}",
                "ClassName": "ZookeeperStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setupTestWithEmptyDatastore",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = states.get(feature.name());\n    if (wrapper != null) {\n        return featureStateForWrapper(feature, wrapper);\n    }\n    return null;\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = wrapperForFeatureState(featureState);\n    try {\n        java.lang.String json = org.togglz.zookeeper.ZookeeperStateRepository.objectMapper.writeValueAsString(wrapper);\n        java.lang.String path = (featuresZnode + \"/\") + featureState.getFeature().name();\n        curatorFramework.createContainers(path);\n        curatorFramework.setData().forPath(path, json.getBytes(\"UTF-8\"));\n        states.put(featureState.getFeature().name(), wrapper);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 25,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = manager.getFeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS);\n    org.junit.Assert.assertEquals(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(\"admin\", state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    junit.framework.Assert.assertEquals(\"Some feature with a label\", org.togglz.core.util.FeatureAnnotations.getLabel(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITH_LABEL));\n    junit.framework.Assert.assertEquals(\"FEATURE_WITHOUT_LABEL\", org.togglz.core.util.FeatureAnnotations.getLabel(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_WITHOUT_LABEL));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetLabel",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.annotation.Label label = org.togglz.core.util.FeatureAnnotations.getAnnotation(feature, org.togglz.core.annotation.Label.class);\n    if (label != null) {\n        return label.value();\n    }\n    return feature.name();\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getLabel",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.FeatureGroup result = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.ClassLevelGroup.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.getLabel(), org.hamcrest.CoreMatchers.is(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.CLASS_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(result.contains(org.togglz.core.metadata.enums.AnnotationFeatureGroupTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "AnnotationFeatureGroupTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "buildWillReturnFeatureGroupWhenFeatureGroupAnnotationIsPresentForClassLevelGroup",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (groupAnnotation.isAnnotationPresent(org.togglz.core.annotation.FeatureGroup.class)) {\n        return new org.togglz.core.metadata.enums.AnnotationFeatureGroup(groupAnnotation);\n    }\n    return null;\n}",
                "ClassName": "AnnotationFeatureGroup",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.context.FeatureContext.clearCache();\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.enabled: false\");\n    org.junit.Assert.assertNull(org.togglz.core.context.FeatureContext.getFeatureManagerOrNull());\n    org.junit.Assert.assertNull(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.manager.FeatureManager.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.spi.ActivationStrategy.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.repository.StateRepository.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.core.user.UserProvider.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).size());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "disabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.context.FeatureContext.cache.clear();\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "clearCache",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.core.context.FeatureContext.getContextClassLoader();\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.cache.get(classLoader);\n    if (featureManager != null) {\n        return featureManager;\n    }\n    featureManager = org.togglz.core.context.FeatureContext.findFeatureManagerInClassLoader(classLoader);\n    if (featureManager != null) {\n        org.togglz.core.manager.FeatureManager previousFeatureManager = org.togglz.core.context.FeatureContext.cache.putIfAbsent(classLoader, featureManager);\n        if (previousFeatureManager != null) {\n            return previousFeatureManager;\n        }\n    }\n    return featureManager;\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManagerOrNull",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.endpoint.sensitive: false\");\n    org.junit.Assert.assertFalse(this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).isSensitive());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "endpointNotSensitive",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider featureProvider = mock(org.togglz.core.spi.FeatureProvider.class);\n    org.togglz.core.metadata.FeatureMetaData featureMetaData = mock(org.togglz.core.metadata.FeatureMetaData.class);\n    when(featureMetaData.getDefaultFeatureState()).thenReturn(new org.togglz.core.repository.FeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE, true));\n    when(featureProvider.getMetaData(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE)).thenReturn(featureMetaData);\n    org.togglz.core.manager.FeatureManager manager = new org.togglz.core.manager.FeatureManagerBuilder().featureEnum(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.class).stateRepository(repository).featureProvider(featureProvider).userProvider(featureUserProvider).build();\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testIsActiveUsingDefaultFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.userProvider = userProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "userProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureProvider = featureProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.stateRepository = stateRepository;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "stateRepository",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    helper.setEnvIsLoggedIn(true).setEnvEmail(\"user@togglz.org\").setEnvAuthDomain(\"togglz.org\");\n    com.google.appengine.api.users.UserService userService = com.google.appengine.api.users.UserServiceFactory.getUserService();\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertFalse(user.isFeatureAdmin());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getUserId(), user.getName());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getEmail(), user.getAttribute(\"email\"));\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getNickname(), user.getAttribute(\"nickname\"));\n}",
        "ClassName": "UserServiceUserProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "userIsLoggedIn",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.user.SimpleFeatureUser featureUser = null;\n    com.google.appengine.api.users.User user = userService.getCurrentUser();\n    if (user != null) {\n        featureUser = new org.togglz.core.user.SimpleFeatureUser(user.getUserId(), userService.isUserAdmin());\n        featureUser.setAttribute(\"email\", user.getEmail());\n        featureUser.setAttribute(\"nickname\", user.getNickname());\n    }\n    return featureUser;\n}",
                "ClassName": "UserServiceUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.CURRENT_VERSION + \",alpha,dev,uat\");\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertTrue(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueWhenAtLeastOneOfTheVersionsMatchServerCurrentVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\").largeText();\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertTrue(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testLargeTextParameter",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.largeText = true;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "largeText",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"user.name == 'john'\");\n    assertThat(strategy.isActive(state, aFeatureUser(\"john\"))).isTrue();\n    assertThat(strategy.isActive(state, aFeatureUser(\"jim\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "scriptCanAccessCurrentUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider featureProvider = mock(org.togglz.core.spi.FeatureProvider.class);\n    org.togglz.core.metadata.FeatureMetaData featureMetaData = mock(org.togglz.core.metadata.FeatureMetaData.class);\n    when(featureMetaData.getDefaultFeatureState()).thenReturn(new org.togglz.core.repository.FeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE, true));\n    when(featureProvider.getMetaData(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE)).thenReturn(featureMetaData);\n    org.togglz.core.manager.FeatureManager manager = new org.togglz.core.manager.FeatureManagerBuilder().featureEnum(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.class).stateRepository(repository).featureProvider(featureProvider).userProvider(featureUserProvider).build();\n    org.togglz.core.repository.FeatureState state = manager.getFeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE);\n    org.junit.Assert.assertEquals(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.NOT_STORED_FEATURE, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureStateUsingDefaultFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.userProvider = userProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "userProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureProvider = featureProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.stateRepository = stateRepository;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "stateRepository",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo2.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertTrue(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureInSecondBackingRepo",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\").optional();\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertTrue(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testOptionalParameter",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.optional = true;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "optional",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyIPlist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 26,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"1\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertFalse(strategy.isActive(state, aUserWithHash(110)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkCorrectlyForOnePercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class, null);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForArrayWithNull",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setupTestWithEmptyDatastore();\n    org.togglz.core.repository.FeatureState savedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    savedFeatureState.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n    savedFeatureState.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"user1, user2, user3\");\n    stateRepository.setFeatureState(savedFeatureState);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(reflectionEquals(savedFeatureState, loadedFeatureState), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "ZookeeperStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testActivationStrategySavingAndLoading",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    setupTestWithData(java.util.Collections.EMPTY_MAP);\n}",
                "ClassName": "ZookeeperStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setupTestWithEmptyDatastore",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = wrapperForFeatureState(featureState);\n    try {\n        java.lang.String json = org.togglz.zookeeper.ZookeeperStateRepository.objectMapper.writeValueAsString(wrapper);\n        java.lang.String path = (featuresZnode + \"/\") + featureState.getFeature().name();\n        curatorFramework.createContainers(path);\n        curatorFramework.setData().forPath(path, json.getBytes(\"UTF-8\"));\n        states.put(featureState.getFeature().name(), wrapper);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = states.get(feature.name());\n    if (wrapper != null) {\n        return featureStateForWrapper(feature, wrapper);\n    }\n    return null;\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n}",
        "ClassName": "ThreadLocalFeatureManagerProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "secondTest",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 7,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class });\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    java.util.Set<org.togglz.core.Feature> features = featureManager.getFeatures();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertSame(featureManager, org.togglz.core.context.FeatureContext.getFeatureManager());\n    org.junit.Assert.assertSame(this.context, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n    org.junit.Assert.assertEquals(2, features.size());\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.mem.InMemoryStateRepository);\n    org.junit.Assert.assertEquals(1, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertTrue(this.context.getBean(org.springframework.boot.context.embedded.ServletRegistrationBean.class).getUrlMappings().contains(\"/togglz-console/*\"));\n    org.togglz.spring.boot.autoconfigure.TogglzEndpoint togglzEndpoint = this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class);\n    org.junit.Assert.assertEquals(\"togglz\", togglzEndpoint.getId());\n    org.junit.Assert.assertTrue(togglzEndpoint.isEnabled());\n    org.junit.Assert.assertTrue(togglzEndpoint.isSensitive());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "defaultTogglz",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 12,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 18,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 24,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.bind(applicationContext);\n    org.springframework.context.event.ContextClosedEvent contextClosedEvent = mock(org.springframework.context.event.ContextClosedEvent.class);\n    applicationListener.onApplicationEvent(contextClosedEvent);\n    org.junit.Assert.assertNull(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzApplicationContextBinderApplicationListenerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 2,
        "MethodName": "contextClosed",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 2,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.Object old = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.putIfAbsent(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader(), context);\n    if (old != null) {\n        throw new java.lang.IllegalStateException(\"There is already a ApplicationContext associated with the context ClassLoader of the current thread!\");\n    }\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "bind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(null);\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 5,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenThereIsNoRolesAttribute",
        "MinimumCyclomaticComplexity": 5,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 17,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features?user=ck\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n}",
        "ClassName": "ThreadBasedUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledForAllUsers",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNull(state);\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 4,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 27,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullWhenStateDoesntExist",
        "MinimumCyclomaticComplexity": 4,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 27,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 27,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.appengine.repository.FixedNamespaceStateRepository(null, mockedStateRepository);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldNotAcceptNullNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 5,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 5,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1);\n    assertThat(metaData.getAttributes()).doesNotContainValue(\"https://github.com/togglz/togglz/pull/33\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullForInfoLinkByDefault",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.System.setProperty(\"foo.bar\", \"foobar\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeFalseIfPropertyExistsButisInvalid",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.console.path: /custom/\");\n    org.junit.Assert.assertEquals(1, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n    org.junit.Assert.assertTrue(this.context.getBean(org.springframework.boot.context.embedded.ServletRegistrationBean.class).getUrlMappings().contains(\"/custom/*\"));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customConsolePathWithTrailingSlash",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo1.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertTrue(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureInFirstBackingRepo",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"function isJohn(name) { return name == 'john' }; isJohn(user.name);\");\n    assertThat(strategy.isActive(state, aFeatureUser(\"john\"))).isTrue();\n    assertThat(strategy.isActive(state, aFeatureUser(\"jim\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportScriptWithFunction",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManagerBuilderTest.CustomStrategyProvider provider = new org.togglz.core.manager.FeatureManagerBuilderTest.CustomStrategyProvider();\n    org.togglz.core.manager.FeatureManagerBuilder.begin().featureEnum(org.togglz.core.manager.FeatureManagerBuilderTest.Features.class).activationStrategyProvider(provider).activationStrategy(new org.togglz.core.manager.FeatureManagerBuilderTest.CustomActivationStrategy()).build();\n}",
        "ClassName": "FeatureManagerBuilderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailIfAddingStrategyWithCustomProvider",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "CustomStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notBlank(name, \"No name specified\");\n    org.togglz.core.util.Validate.notNull(featureProvider, \"No feature provider specified\");\n    org.togglz.core.util.Validate.notNull(stateRepository, \"No state repository specified\");\n    org.togglz.core.util.Validate.notNull(userProvider, \"No user provider specified\");\n    org.togglz.core.util.Validate.notNull(strategyProvider, \"No activation strategy provider specified\");\n    return new org.togglz.core.manager.DefaultFeatureManager(name, featureProvider, stateRepository, userProvider, strategyProvider);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (strategyProvider instanceof org.togglz.core.activation.DefaultActivationStrategyProvider) {\n        ((org.togglz.core.activation.DefaultActivationStrategyProvider) (strategyProvider)).addActivationStrategy(strategy);\n        return this;\n    }\n    throw new java.lang.IllegalStateException(\"Adding ActivationStrategies is only allowed when using \" + org.togglz.core.activation.DefaultActivationStrategyProvider.class.getSimpleName());\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyProvider = strategyProvider;\n    return this;\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "activationStrategyProvider",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return featureEnums(featureEnum);\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.manager.FeatureManagerBuilder();\n}",
                "ClassName": "FeatureManagerBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "begin",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection authorities = new java.util.ArrayList<org.springframework.security.core.GrantedAuthority>();\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_1\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_2\"));\n    when(authentication.getAuthorities()).thenReturn(authorities);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertThat(user.isFeatureAdmin(), org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "SpringSecurityUserProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 13,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getCurrentUserWillReturnNormalUserWhenAuthoritiesDoNotContainFeatureAdminAuthority",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 13,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.springframework.security.core.context.SecurityContext context = org.springframework.security.core.context.SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication authentication = context.getAuthentication();\n    if (authentication != null) {\n        java.lang.String name = getUserName(authentication);\n        java.util.Set<java.lang.String> authorities = org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n        boolean featureAdmin = isFeatureAdmin(authentication, authorities);\n        org.togglz.core.user.SimpleFeatureUser user = new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin);\n        user.setAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES, authorities);\n        return user;\n    }\n    return null;\n}",
                "ClassName": "SpringSecurityUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 13,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n            return null;\n        }\n    });\n    repository.getFeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getFeatureStateShouldRunWithinGivenNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 14,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.Work<org.togglz.core.repository.FeatureState>() {\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState run() {\n            return decorated.getFeatureState(feature);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.ActivationStrategyConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class });\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.CustomActivationStrategy customActivationStrategy = this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.CustomActivationStrategy.class);\n    org.junit.Assert.assertTrue(featureManager.getActivationStrategies().contains(customActivationStrategy));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customActivationStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.getFeatureManager();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertNotNull(dataSource);\n    org.junit.Assert.assertEquals(0L, executeQuery(\"SELECT COUNT(*) FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.togglz.core.repository.FeatureState firstState = new org.togglz.core.repository.FeatureState(org.togglz.servlet.test.repository.jdbc.JDBCFeatures.F2, true);\n    firstState.setStrategyId(\"someId\");\n    firstState.setParameter(\"param\", \"foo\");\n    featureManager.setFeatureState(firstState);\n    org.junit.Assert.assertEquals(1, executeQuery(\"SELECT FEATURE_ENABLED FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(\"someId\", executeQuery(\"SELECT STRATEGY_ID FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(\"param=foo\", executeQuery(\"SELECT STRATEGY_PARAMS FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.togglz.core.repository.FeatureState secondState = new org.togglz.core.repository.FeatureState(org.togglz.servlet.test.repository.jdbc.JDBCFeatures.F2, false);\n    secondState.setStrategyId(null);\n    featureManager.setFeatureState(secondState);\n    org.junit.Assert.assertEquals(0, executeQuery(\"SELECT FEATURE_ENABLED FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(null, executeQuery(\"SELECT STRATEGY_ID FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n    org.junit.Assert.assertEquals(null, executeQuery(\"SELECT STRATEGY_PARAMS FROM MYTABLE WHERE FEATURE_NAME = 'F2'\"));\n}",
        "ClassName": "JDBCRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureStateFromJDBCRepository",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 9,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "executeQuery",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 48,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline(\"\\n\");\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1\\nparam2=value2\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(2).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"value1\")).contains(org.assertj.core.data.MapEntry.entry(\"param2\", \"value2\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldConvertInMultilineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true, lineSeparator);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setState(\"foo.bar\", \"false\");\n    java.lang.System.setProperty(\"foo.bar\", \"false\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeTrueIfPropertyAndStateValueMatchFalse",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.SystemPropertyActivationStrategyTest.ScriptFeature.FEATURE).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME, propName).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE, propValue).setStrategyId(org.togglz.core.activation.SystemPropertyActivationStrategy.ID);\n}",
                "ClassName": "SystemPropertyActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertThat(activationStrategy.getName(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.NAME));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getNameWillReturnConstant",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.activation.UserRoleActivationStrategy.NAME;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getName",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n        updater.migrateToVersion1();\n        org.junit.Assert.assertTrue(updater.isSchemaVersion1());\n        update(connection, \"INSERT INTO TOGGLZ VALUES ('F1', 1, 'ck, admin')\");\n        update(connection, \"INSERT INTO TOGGLZ VALUES ('F2', 1, '')\");\n        update(connection, \"INSERT INTO TOGGLZ VALUES ('F3', 1, NULL)\");\n        java.util.List<java.lang.Object[]> dataBefore = query(connection, \"SELECT FEATURE_NAME, FEATURE_USERS FROM TOGGLZ ORDER BY FEATURE_NAME\");\n        org.junit.Assert.assertEquals(3, dataBefore.size());\n        org.junit.Assert.assertEquals(\"F1\", dataBefore.get(0)[0]);\n        org.junit.Assert.assertEquals(\"ck, admin\", dataBefore.get(0)[1]);\n        updater.migrateToVersion2();\n        org.junit.Assert.assertTrue(querySucceeds(connection, \"SELECT FEATURE_NAME,STRATEGY_ID,STRATEGY_PARAMS FROM TOGGLZ\"));\n        org.junit.Assert.assertFalse(querySucceeds(connection, \"SELECT FEATURE_USERS FROM TOGGLZ\"));\n        java.util.List<java.lang.Object[]> dataAfter = query(connection, \"SELECT FEATURE_NAME, STRATEGY_ID, STRATEGY_PARAMS FROM TOGGLZ ORDER BY FEATURE_NAME\");\n        org.junit.Assert.assertEquals(3, dataBefore.size());\n        org.junit.Assert.assertEquals(\"F1\", dataAfter.get(0)[0]);\n        org.junit.Assert.assertEquals(org.togglz.core.activation.UsernameActivationStrategy.ID, dataAfter.get(0)[1]);\n        org.junit.Assert.assertEquals(\"users=ck, admin\", dataAfter.get(0)[2].toString().trim());\n        org.junit.Assert.assertEquals(\"F2\", dataAfter.get(1)[0]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(1)[1]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(1)[2]);\n        org.junit.Assert.assertEquals(\"F3\", dataAfter.get(2)[0]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(2)[1]);\n        org.junit.Assert.assertEquals(null, dataAfter.get(2)[2]);\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldMigrateToVersion2",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 17,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 32,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"CREATE TABLE %TABLE% (FEATURE_NAME VARCHAR(100) PRIMARY KEY, FEATURE_ENABLED INTEGER, FEATURE_USERS VARCHAR(2000))\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return columnExists(org.togglz.core.repository.jdbc.Columns.FEATURE_NAME) && (!columnExists(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID));\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isSchemaVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.sql.Statement statement = null;\n    try {\n        statement = connection.createStatement();\n        return statement.executeUpdate(sql);\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(statement);\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.sql.Statement statement = null;\n    try {\n        statement = connection.createStatement();\n        java.sql.ResultSet resultSet = null;\n        try {\n            resultSet = statement.executeQuery(sql);\n            java.util.List<java.lang.Object[]> result = new java.util.ArrayList<java.lang.Object[]>();\n            while (resultSet.next()) {\n                java.util.List<java.lang.Object> row = new java.util.ArrayList<java.lang.Object>();\n                for (int i = 0; i < resultSet.getMetaData().getColumnCount(); i++) {\n                    row.add(resultSet.getObject(i + 1));\n                }\n                result.add(row.toArray());\n            } \n            return result;\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n        }\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(statement);\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 23,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"ALTER TABLE %TABLE% ADD STRATEGY_ID VARCHAR(200)\");\n    execute(\"ALTER TABLE %TABLE% ADD STRATEGY_PARAMS VARCHAR(2000)\");\n    java.sql.Statement updateDataStmt = connection.createStatement(java.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_UPDATABLE);\n    try {\n        java.sql.ResultSet resultSet = null;\n        try {\n            resultSet = updateDataStmt.executeQuery(substitute(\"SELECT FEATURE_NAME, FEATURE_USERS, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE%\"));\n            while (resultSet.next()) {\n                java.lang.String users = resultSet.getString(org.togglz.core.repository.jdbc.Columns.FEATURE_USERS);\n                if (org.togglz.core.util.Strings.isNotBlank(users)) {\n                    java.util.Map<java.lang.String, java.lang.String> params = new java.util.HashMap<java.lang.String, java.lang.String>();\n                    params.put(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, users);\n                    java.lang.String paramData = serializer.serialize(params);\n                    resultSet.updateString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS, paramData);\n                    java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                    if (org.togglz.core.util.Strings.isBlank(strategyId)) {\n                        resultSet.updateString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID, org.togglz.core.activation.UsernameActivationStrategy.ID);\n                    }\n                    resultSet.updateRow();\n                }\n            } \n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n        }\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(updateDataStmt);\n    }\n    execute(\"ALTER TABLE %TABLE% DROP COLUMN FEATURE_USERS\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion2",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 30,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        query(connection, sql);\n        return true;\n    } catch (java.sql.SQLException e) {\n        return false;\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "querySucceeds",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 98,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(org.togglz.core.util.FeatureStateTest.FEATURE_NAME);\n    org.togglz.core.repository.FeatureState featureState = new org.togglz.core.repository.FeatureState(feature);\n    featureState.setStrategyId(org.togglz.core.util.FeatureStateTest.STRATEGYID);\n    featureState.setParameter(org.togglz.core.util.FeatureStateTest.PARAM_NAME, org.togglz.core.util.FeatureStateTest.PARAM_VALUE);\n    featureState.setEnabled(true);\n    java.io.ByteArrayOutputStream os = new java.io.ByteArrayOutputStream();\n    java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(os);\n    try {\n        try {\n            oos.writeObject(featureState);\n            java.io.InputStream is = new java.io.ByteArrayInputStream(os.toByteArray());\n            java.io.ObjectInputStream ois = new java.io.ObjectInputStream(is);\n            try {\n                org.togglz.core.repository.FeatureState deserializedFeatureState = ((org.togglz.core.repository.FeatureState) (ois.readObject()));\n                org.junit.Assert.assertEquals(\"FeatureState.feature was not correctly serialized/deserialized\", featureState.getFeature(), deserializedFeatureState.getFeature());\n                org.junit.Assert.assertEquals(\"FeatureState.strategyId was not correctly serialized/deserialized\", featureState.getStrategyId(), deserializedFeatureState.getStrategyId());\n                org.junit.Assert.assertEquals(\"FeatureState.parameters were not correctly serialized/deserialized\", featureState.getParameter(org.togglz.core.util.FeatureStateTest.PARAM_NAME), deserializedFeatureState.getParameter(org.togglz.core.util.FeatureStateTest.PARAM_NAME));\n                org.junit.Assert.assertEquals(\"FeatureState.enabled was not correctly serialized/deserialized\", featureState.isEnabled(), deserializedFeatureState.isEnabled());\n            } finally {\n                is.close();\n                ois.close();\n            }\n        } catch (java.io.NotSerializableException e) {\n            org.junit.Assert.fail(\"FeatureState is not serializable\");\n        }\n    } finally {\n        os.close();\n        oos.close();\n    }\n}",
        "ClassName": "FeatureStateTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "serializable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 31,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    state.setParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES, org.togglz.servlet.activation.ServerNameActivationStrategyTest.DIFFERENT_VHOST_NAME);\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isFalse();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForFeatureOnDifferentDomainName",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.repository.MemcacheStateRepository repository = new org.togglz.appengine.repository.MemcacheStateRepository(delegate);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.junit.Assert.assertTrue(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n    repository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertFalse(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.junit.Assert.assertTrue(ms.contains(repository.key(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1.name())));\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(2)).getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1);\n    org.mockito.Mockito.verify(delegate).setFeatureState(org.mockito.Mockito.any(org.togglz.core.repository.FeatureState.class));\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "MemcacheStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 2,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testStateModifyExpiresCache",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 2,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 18,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 4,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.delegate = delegate;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = ((org.togglz.core.repository.FeatureState) (cache.get(key(feature.name()))));\n    if (state == null) {\n        state = delegate.getFeatureState(feature);\n        cache.put(key(feature.name()), state, getExpiration());\n    }\n    return state;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.MemcacheStateRepository.KEY_PREFIX + featureName;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "key",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    delegate.setFeatureState(featureState);\n    cache.delete(key(featureState.getFeature().name()));\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 25,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F1.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F2.isActive() || (!org.togglz.junit.vary.MyFeatures.F2.isActive()));\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F3.isActive() || (!org.togglz.junit.vary.MyFeatures.F3.isActive()));\n}",
        "ClassName": "FeatureVariationsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            return null;\n        }\n    });\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setFeatureStateShouldRunWithinGivenNamespace",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "4",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.VoidWork() {\n        @java.lang.Override\n        void vrun() {\n            decorated.setFeatureState(featureState);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).disable();\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(0, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(null, query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(null, query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 18,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldSaveStateWithoutStrategyOrParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 72,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroWithSomeOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1, true));\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 21,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.List<org.togglz.core.spi.ActivationStrategy> strategies = new java.util.ArrayList<org.togglz.core.spi.ActivationStrategy>();\n    strategies.add(new org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy());\n    strategies.add(new org.togglz.core.activation.DefaultActivationStrategyProviderTest.AnotherCustomActivationStrategy());\n    provider.addActivationStrategies(strategies);\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy.class.getSimpleName()).contains(org.togglz.core.activation.DefaultActivationStrategyProviderTest.AnotherCustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldContainCustomStrategyIfAddedMultipleBefore",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "AnotherCustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategies.addAll(strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.html.HtmlPage page = client.getPage(url + \"jsp-taglib-test.jsp\");\n    assertThat(page.asText()).contains(\"Feature [ACTIVE_FEATURE] is active\").doesNotContain(\"Feature [INACTIVE_FEATURE] is active\");\n}",
        "ClassName": "JspTaglibTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldIncludeOrExcludeBodyCorrectly",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"something\");\n    initialProps.setProperty(\"FEATURE1.param.foo\", \"bar\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.disable();\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(3));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"false\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"something\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.foo\"), org.hamcrest.Matchers.is(\"bar\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "disableFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 20,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 63,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 1, 'myStrategy', 'param23=foobar')\");\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(1, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"myStrategy\", query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"param23=foobar\", query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(1L, query(dataSource, \"SELECT COUNT(*) FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(0, query(dataSource, \"SELECT FEATURE_ENABLED FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"someId\", query(dataSource, \"SELECT STRATEGY_ID FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n    org.junit.Assert.assertEquals(\"param=foo\", query(dataSource, \"SELECT STRATEGY_PARAMS FROM TOGGLZ WHERE FEATURE_NAME = 'F1'\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldUpdateExistingDatabaseEntry",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                java.sql.ResultSet resultSet = statement.executeQuery(sql);\n                try {\n                    if (resultSet.next()) {\n                        return resultSet.getObject(1);\n                    }\n                    return null;\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "query",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 25,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            int updatedRows = 0;\n            java.lang.String updateSql = \"UPDATE %TABLE% SET FEATURE_ENABLED = ?, STRATEGY_ID = ?, STRATEGY_PARAMS = ? WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement updateStatement = connection.prepareStatement(insertTableName(updateSql));\n            try {\n                java.lang.String paramData = serializer.serialize(featureState.getParameterMap());\n                updateStatement.setInt(1, featureState.isEnabled() ? 1 : 0);\n                updateStatement.setString(2, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                updateStatement.setString(3, org.togglz.core.util.Strings.trimToNull(paramData));\n                updateStatement.setString(4, featureState.getFeature().name());\n                updatedRows = updateStatement.executeUpdate();\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(updateStatement);\n            }\n            if (updatedRows == 0) {\n                java.lang.String insertSql = \"INSERT INTO %TABLE% (FEATURE_NAME, FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS) VALUES (?,?,?,?)\";\n                java.sql.PreparedStatement insertStatement = connection.prepareStatement(insertTableName(insertSql));\n                try {\n                    java.lang.String paramsAsString = serializer.serialize(featureState.getParameterMap());\n                    insertStatement.setString(1, featureState.getFeature().name());\n                    insertStatement.setInt(2, featureState.isEnabled() ? 1 : 0);\n                    insertStatement.setString(3, org.togglz.core.util.Strings.trimToNull(featureState.getStrategyId()));\n                    insertStatement.setString(4, org.togglz.core.util.Strings.trimToNull(paramsAsString));\n                    insertStatement.executeUpdate();\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(insertStatement);\n                }\n            }\n            if ((!connection.getAutoCommit()) && (!noCommit)) {\n                connection.commit();\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to set the feature's state in the database\", e);\n    }\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 41,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 101,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.sql.Connection connection = createConnection();\n    try {\n        org.togglz.core.repository.jdbc.SchemaUpdater updater = new org.togglz.core.repository.jdbc.SchemaUpdater(connection, \"TOGGLZ\", org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n        org.junit.Assert.assertFalse(updater.doesTableExist());\n        updater.migrateToVersion1();\n        org.junit.Assert.assertTrue(updater.doesTableExist());\n        org.junit.Assert.assertTrue(querySucceeds(connection, \"SELECT FEATURE_NAME FROM TOGGLZ\"));\n    } finally {\n        org.togglz.core.util.DbUtils.closeQuietly(connection);\n    }\n}",
        "ClassName": "SchemaUpdaterTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldMigrateToVersion1",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.connection = connection;\n    this.tableName = tableName;\n    this.serializer = serializer;\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.sql.DriverManager.getConnection(\"jdbc:h2:mem:\", \"sa\", \"\");\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createConnection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return isSuccessful(\"SELECT * FROM %TABLE%\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "doesTableExist",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    execute(\"CREATE TABLE %TABLE% (FEATURE_NAME VARCHAR(100) PRIMARY KEY, FEATURE_ENABLED INTEGER, FEATURE_USERS VARCHAR(2000))\");\n}",
                "ClassName": "SchemaUpdater",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "migrateToVersion1",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        query(connection, sql);\n        return true;\n    } catch (java.sql.SQLException e) {\n        return false;\n    }\n}",
                "ClassName": "SchemaUpdaterTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "querySucceeds",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (c != null) {\n        try {\n            c.close();\n        } catch (java.sql.SQLException e) {\n        }\n    }\n}",
                "ClassName": "DbUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "closeQuietly",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    featureUserProvider.setFeatureUser(new org.togglz.core.user.SimpleFeatureUser(\"admin\", false));\n    org.junit.Assert.assertEquals(true, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS);\n    state.setEnabled(false);\n    repository.setFeatureState(state);\n    org.junit.Assert.assertEquals(false, manager.isActive(org.togglz.core.manager.DefaultFeatureManagerTest.MyFeatures.DELETE_USERS));\n}",
        "ClassName": "DefaultFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldHandleEnabledFlagCorrectlyWithCustomStrategy",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.featureUser = featureUser;\n}",
                "ClassName": "TestFeatureUserProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo1.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, false));\n    repo2.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    crepo.setIterationOrder(org.togglz.core.repository.composite.CompositeStateRepository.IterationOrder.LIFO);\n    org.junit.Assert.assertTrue(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureLIFO",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.iterationOrder = iterationOrder;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setIterationOrder",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 19,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.Weighted prio10 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 10;\n        }\n    };\n    org.togglz.core.util.Weighted prio20 = new org.togglz.core.util.Weighted() {\n        @java.lang.Override\n        public int priority() {\n            return 20;\n        }\n    };\n    java.util.List<org.togglz.core.util.Weighted> list = new java.util.ArrayList<org.togglz.core.util.Weighted>();\n    list.add(prio20);\n    list.add(prio10);\n    java.util.Collections.sort(list, new org.togglz.core.util.Weighted.WeightedComparator());\n    assertThat(list).containsExactly(prio10, prio20);\n}",
        "ClassName": "WeightedTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSortCorrectlySimpleIntValues",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "2",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "WeightedComparator",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    long ttl = 5;\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, ttl);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(ttl + 30);\n    }\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(5)).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCacheExpiryBecauseOfTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    provider.addActivationStrategy(new org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy());\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.activation.DefaultActivationStrategyProviderTest.CustomActivationStrategy.class.getSimpleName());\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 2,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldContainCustomStrategyIfAddedBefore",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "CustomActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategies.add(strategy);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addActivationStrategy",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter[] result = activationStrategy.getParameters();\n    org.junit.Assert.assertThat(result.length, org.hamcrest.CoreMatchers.is(1));\n    org.togglz.core.activation.Parameter param = result[0];\n    org.junit.Assert.assertThat(param.getName(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME));\n    org.junit.Assert.assertThat(param.getDescription(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_DESC));\n    org.junit.Assert.assertThat(param.getLabel(), org.hamcrest.CoreMatchers.is(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_LABEL));\n    org.junit.Assert.assertThat(param.isLargeText(), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getParametersWillReturnRoles",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.activation.Parameter[]{ org.togglz.core.activation.ParameterBuilder.create(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME).label(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_LABEL).description(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_DESC).largeText() };\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameters",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), true, \"S1\");\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(\"S1\", state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "withStrategyNoParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(name, enabled);\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name + \".strategy\", strategyName);\n    for (org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param param : params) {\n        org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty((name + \".param.\") + param.key, param.value);\n    }\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 40,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final java.util.Map<java.lang.String, java.lang.String> map = new java.util.HashMap<java.lang.String, java.lang.String>() {\n        {\n            put(\"param23\", \"foobar\");\n        }\n    };\n    update(\"F1\", true, \"myStrategy\", map, null);\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(\"myStrategy\", state.getStrategyId());\n    org.junit.Assert.assertEquals(1, state.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"foobar\", state.getParameter(\"param23\"));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "1",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 2,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 45,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    assertThat(provider.getFeatures()).containsSequence(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1, org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE2);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCorrectListOfFeaturesForEnum",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"john\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID).setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, \"person1,ck,person2\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForDifferentUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 36,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.CharSequence string = org.togglz.core.util.ClassUtils.createInstance(\"java.lang.String\", java.lang.CharSequence.class);\n    org.junit.Assert.assertNotNull(string);\n    org.junit.Assert.assertTrue(string instanceof java.lang.String);\n    org.junit.Assert.assertEquals(\"\", string);\n}",
        "ClassName": "ClassUtilsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 16,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 4,
        "MethodName": "testCreateInstance",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 16,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 4,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = java.lang.Thread.currentThread().getContextClassLoader();\n    if (classLoader == null) {\n        classLoader = interfaceClazz.getClassLoader();\n    }\n    try {\n        java.lang.Class<T> clazz = ((java.lang.Class<T>) (java.lang.Class.forName(classname, true, classLoader)));\n        return clazz.newInstance();\n    } catch (java.lang.ClassNotFoundException e) {\n        throw new java.lang.IllegalArgumentException(\"Unknown class: \" + classname);\n    } catch (java.lang.InstantiationException e) {\n        throw new java.lang.IllegalArgumentException(\"Could not create an instance of class: \" + classname, e);\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.IllegalArgumentException(\"Could not create an instance of class: \" + classname, e);\n    }\n}",
                "ClassName": "ClassUtils",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "createInstance",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 4
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.testing.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "DefaultFeatureStateTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeaturesActiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.enums.EnumFeatureMetaData metaData = new org.togglz.core.metadata.enums.EnumFeatureMetaData(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE_WITH_DEFAULT_STATE);\n    org.togglz.core.repository.FeatureState featureState = metaData.getDefaultFeatureState();\n    org.junit.Assert.assertThat(featureState, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(featureState.isEnabled(), org.hamcrest.CoreMatchers.is(true));\n    org.junit.Assert.assertThat(featureState.getStrategyId(), org.hamcrest.CoreMatchers.is(\"SomeActivationId\"));\n    org.junit.Assert.assertThat(featureState.getParameter(\"SomeParameterName\"), org.hamcrest.CoreMatchers.is(\"someValue1,someValue2\"));\n    org.junit.Assert.assertThat(featureState.getParameter(\"SomeParameterName2\"), org.hamcrest.CoreMatchers.is(\"someValue3,someValue4\"));\n}",
        "ClassName": "EnumFeatureMetaDataTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "constructorWillPopulateDefaultActivationStrategyFromAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.label = org.togglz.core.util.FeatureAnnotations.getLabel(feature);\n    boolean enabledByDefault = org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(feature);\n    this.defaultFeatureState = new org.togglz.core.repository.FeatureState(feature, enabledByDefault);\n    org.togglz.core.annotation.DefaultActivationStrategy defaultActivationStrategy = org.togglz.core.util.FeatureAnnotations.getAnnotation(feature, org.togglz.core.annotation.DefaultActivationStrategy.class);\n    if (defaultActivationStrategy != null) {\n        this.defaultFeatureState.setStrategyId(defaultActivationStrategy.id());\n        for (org.togglz.core.annotation.ActivationParameter parameter : defaultActivationStrategy.parameters()) {\n            this.defaultFeatureState.setParameter(parameter.name(), parameter.value());\n        }\n    }\n    for (java.lang.annotation.Annotation annotation : org.togglz.core.util.FeatureAnnotations.getAnnotations(feature)) {\n        org.togglz.core.metadata.FeatureGroup group = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(annotation.annotationType());\n        if (group != null) {\n            groups.add(group);\n        }\n        java.lang.String[] attribute = org.togglz.core.util.FeatureAnnotations.getFeatureAttribute(annotation);\n        if (attribute != null) {\n            attributes.put(attribute[0], attribute[1]);\n        }\n    }\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 22,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return defaultFeatureState;\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getDefaultFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.FeatureGroup result = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(org.togglz.core.annotation.Label.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.nullValue());\n}",
        "ClassName": "AnnotationFeatureGroupTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "buildWillReturnNullWhenFeatureGroupAnnotationIsNotPresent",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (groupAnnotation.isAnnotationPresent(org.togglz.core.annotation.FeatureGroup.class)) {\n        return new org.togglz.core.metadata.enums.AnnotationFeatureGroup(groupAnnotation);\n    }\n    return null;\n}",
                "ClassName": "AnnotationFeatureGroup",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "build",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.CURRENT_VERSION);\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertTrue(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueWhenMatchesServerCurrentVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    crepo.setSetterSelection(org.togglz.core.repository.composite.CompositeStateRepository.SetterSelection.FIRST);\n    crepo.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertTrue(repo1.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n    org.junit.Assert.assertNull(repo2.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1));\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureFIRST",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.setterSelection = setterSelection;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setSetterSelection",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : setterSelection.getSelected(repositories)) {\n        repository.setFeatureState(featureState);\n    }\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ck\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.UsernameActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "UsernameActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyUserlist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String usersAsString = state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(usersAsString)) {\n        java.util.List<java.lang.String> users = org.togglz.core.util.Strings.splitAndTrim(usersAsString, \",\");\n        if ((user != null) && org.togglz.core.util.Strings.isNotBlank(user.getName())) {\n            for (java.lang.String username : users) {\n                if (username.equals(user.getName())) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UsernameActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 28,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.bind(mock(org.springframework.context.ApplicationContext.class));\n    applicationContext = mock(org.springframework.context.ApplicationContext.class);\n    org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent = mock(org.springframework.context.event.ContextRefreshedEvent.class);\n    when(contextRefreshedEvent.getApplicationContext()).thenReturn(applicationContext);\n    applicationListener.onApplicationEvent(contextRefreshedEvent);\n    org.junit.Assert.assertSame(applicationContext, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzApplicationContextBinderApplicationListenerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 2,
        "MethodName": "contextRefreshedWhileContextAlreadyBound",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 2,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.Object old = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.putIfAbsent(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader(), context);\n    if (old != null) {\n        throw new java.lang.IllegalStateException(\"There is already a ApplicationContext associated with the context ClassLoader of the current thread!\");\n    }\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "bind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 4
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider().addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class).addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).getLabel()).isEqualTo(\"First feature\");\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE).getLabel()).isEqualTo(\"Additional Feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBuildMetadataForMultipleEnums",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if ((featureEnum == null) || (!featureEnum.isEnum())) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnum argument must be an enum\");\n    }\n    addFeatures(java.util.Arrays.asList(featureEnum.getEnumConstants()));\n    return this;\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addFeatureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent = mock(org.springframework.context.event.ContextRefreshedEvent.class);\n    when(contextRefreshedEvent.getApplicationContext()).thenReturn(applicationContext);\n    applicationListener.onApplicationEvent(contextRefreshedEvent);\n    org.junit.Assert.assertSame(applicationContext, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzApplicationContextBinderApplicationListenerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 2,
        "MethodName": "contextRefreshed",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 2,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.console.enabled: false\");\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.springframework.boot.context.embedded.ServletRegistrationBean.class).size());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "consoleDisabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    state.setParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS, \"1.1.1.1\");\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(false, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForFeatureOnOtherMachine",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature;true\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isTrue();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithLabelAndDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ENABLED_FOR_CK = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ENABLED_FOR_CK = false\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityWithCorrectUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 11,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 19,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.user.FeatureUser user = new org.togglz.core.user.SimpleFeatureUser(\"ea\", false);\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.IPActivationStrategyTest.MyFeature.FEATURE).enable().setStrategyId(org.togglz.core.activation.ServerIpActivationStrategy.ID);\n    state.setParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS, \"1.1.1.1,2.2.2.2,\" + getMachineIP());\n    boolean active = strategy.isActive(state, user);\n    org.junit.Assert.assertEquals(true, active);\n}",
        "ClassName": "IPActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "multipleMachineIps",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n    this.featureAdmin = featureAdmin;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Enumeration<java.net.NetworkInterface> interfaces = java.net.NetworkInterface.getNetworkInterfaces();\n        if (interfaces != null) {\n            while (interfaces.hasMoreElements()) {\n                java.util.Enumeration<java.net.InetAddress> addresses = interfaces.nextElement().getInetAddresses();\n                if (addresses != null) {\n                    while (addresses.hasMoreElements()) {\n                        java.lang.String hostAddress = addresses.nextElement().getHostAddress();\n                        if (hostAddress != null) {\n                            return hostAddress.trim();\n                        }\n                    } \n                }\n            } \n        }\n        return null;\n    } catch (java.net.SocketException e) {\n        return \"<no-ip>\";\n    }\n}",
                "ClassName": "IPActivationStrategyTest",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "getMachineIP",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 21,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedIpsParam = featureState.getParameter(org.togglz.core.activation.ServerIpActivationStrategy.PARAM_IPS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedIpsParam)) {\n        java.util.List<java.lang.String> allowedIps = org.togglz.core.util.Strings.splitAndTrim(allowedIpsParam, \"[\\\\s,]+\");\n        for (java.lang.String allowedIp : allowedIps) {\n            if (ipAddresses.contains(allowedIp)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ServerIpActivationStrategy",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 9,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 55,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.System.setProperty(\"foo.bar\", \"false\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeFalseIfPropertyExistsButisFalse",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(\"F1\", false, null, null, null);\n    final com.google.appengine.api.datastore.Transaction txn = datastoreService.beginTransaction();\n    update(\"F3\", false, null, null, txn);\n    repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    txn.commit();\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 14,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldWorkInsideRunningTransaction",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 28,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1);\n    assertThat(metaData.getLabel()).isEqualTo(\"First feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnMetaDataWithCorrectLabel",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=ck\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = ck\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = true\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityFeatureAdminFlagAdminUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> result = org.togglz.core.util.FeatureAnnotations.getAnnotations(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(result.size(), org.hamcrest.CoreMatchers.is(2));\n    com.google.common.collect.Iterables.find(result, createAnnotationTypePredicate(org.togglz.core.annotation.EnabledByDefault.class));\n    com.google.common.collect.Iterables.find(result, createAnnotationTypePredicate(org.togglz.core.util.FeatureAnnotationsTest.ClassLevelGroup.class));\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationsWillReturnBothFieldAndClassLevelAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.util.Set<java.lang.annotation.Annotation> annotations = new java.util.HashSet<java.lang.annotation.Annotation>();\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        java.lang.annotation.Annotation[] fieldAnnotations = featureClass.getField(feature.name()).getAnnotations();\n        java.lang.annotation.Annotation[] classAnnotations = featureClass.getAnnotations();\n        annotations.addAll(java.util.Arrays.asList(fieldAnnotations));\n        annotations.addAll(java.util.Arrays.asList(classAnnotations));\n        return annotations;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return annotations;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotations",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 14,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new com.google.common.base.Predicate<java.lang.annotation.Annotation>() {\n        @java.lang.Override\n        public boolean apply(java.lang.annotation.Annotation annotation) {\n            return annotation.annotationType().equals(annotationType);\n        }\n    };\n}",
                "ClassName": "FeatureAnnotationsTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createAnnotationTypePredicate",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 22,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.annotation.Label result = org.togglz.core.util.FeatureAnnotations.getAnnotation(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT, org.togglz.core.annotation.Label.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.core.IsNull.nullValue());\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationWillReturnNullWhenAnnotationDoesNotExist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        A fieldAnnotation = featureClass.getField(feature.name()).getAnnotation(annotationType);\n        A classAnnotation = featureClass.getAnnotation(annotationType);\n        return fieldAnnotation != null ? fieldAnnotation : classAnnotation;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return null;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotation",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage beforeLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(beforeLogin.getContent().contains(\"ADMIN = null\"));\n    com.gargoylesoftware.htmlunit.TextPage loginPage = client.getPage(url + \"login?user=somebody\");\n    org.junit.Assert.assertTrue(loginPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogin = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"USER = somebody\"));\n    org.junit.Assert.assertTrue(afterLogin.getContent().contains(\"ADMIN = false\"));\n    com.gargoylesoftware.htmlunit.TextPage logoutPage = client.getPage(url + \"logout\");\n    org.junit.Assert.assertTrue(logoutPage.getContent().contains(\"SUCCESS\"));\n    com.gargoylesoftware.htmlunit.TextPage afterLogout = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(afterLogout.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityFeatureAdminFlagOtherUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setupTestWithEmptyDatastore();\n    org.togglz.core.repository.FeatureState savedFeatureState = new org.togglz.core.repository.FeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE).enable();\n    stateRepository.setFeatureState(savedFeatureState);\n    org.togglz.core.repository.FeatureState loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(loadedFeatureState.isEnabled(), org.hamcrest.CoreMatchers.is(true));\n    stateRepository.setFeatureState(savedFeatureState.disable());\n    loadedFeatureState = stateRepository.getFeatureState(org.togglz.zookeeper.ZookeeperStateRepositoryTest.TestFeature.FEATURE);\n    org.junit.Assert.assertThat(loadedFeatureState.isEnabled(), org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "ZookeeperStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testEnabledStateSavingAndLoading",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    setupTestWithData(java.util.Collections.EMPTY_MAP);\n}",
                "ClassName": "ZookeeperStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setupTestWithEmptyDatastore",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = wrapperForFeatureState(featureState);\n    try {\n        java.lang.String json = org.togglz.zookeeper.ZookeeperStateRepository.objectMapper.writeValueAsString(wrapper);\n        java.lang.String path = (featuresZnode + \"/\") + featureState.getFeature().name();\n        curatorFramework.createContainers(path);\n        curatorFramework.setData().forPath(path, json.getBytes(\"UTF-8\"));\n        states.put(featureState.getFeature().name(), wrapper);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 12,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            },
            {
                "Body": "{\n    org.togglz.zookeeper.FeatureStateStorageWrapper wrapper = states.get(feature.name());\n    if (wrapper != null) {\n        return featureStateForWrapper(feature, wrapper);\n    }\n    return null;\n}",
                "ClassName": "ZookeeperStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 1
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 34,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.features-file: classpath:/features-file/features.properties\");\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    org.junit.Assert.assertTrue(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertFalse(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.file.FileBasedStateRepository);\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featuresFile",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    expectedException.expect(java.lang.AssertionError.class);\n    org.junit.Assert.assertTrue(org.togglz.junit.vary.MyFeatures.F1.isActive());\n}",
        "ClassName": "TogglzRuleWithVariations_DisableSadCase_Test",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.EnumBasedFeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider();\n    provider.addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    provider.addFeatureEnum(org.togglz.core.manager.EnumBasedFeatureProviderTest.DuplicateNameFeatureEnum.class);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForDuplicateFeatureName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if ((featureEnum == null) || (!featureEnum.isEnum())) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnum argument must be an enum\");\n    }\n    addFeatures(java.util.Arrays.asList(featureEnum.getEnumConstants()));\n    return this;\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addFeatureEnum",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.WITH_OWNER);\n    assertThat(metaData.getAttributes()).containsValue(\"Christian\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnOwnerNameIfAnnotationPresent",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.features.FEATURE_ONE: true\", \"togglz.features.FEATURE_TWO: false\");\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    org.junit.Assert.assertTrue(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertFalse(featureManager.isActive(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n    org.junit.Assert.assertTrue(this.context.getBean(org.togglz.core.repository.StateRepository.class) instanceof org.togglz.core.repository.property.PropertyBasedStateRepository);\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "features",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.System.setProperty(\"foo.bar\", \"true\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeTrueIfPropertyExistsAndIsTrue",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.NotAnEnum.class);\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldFailForNonEnumType",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"ID_1\", \"ID 1;true;Group 1,Group Other\");\n    properties.setProperty(\"ID_2\", \"ID 2;false;Group 2\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(2).areExactly(1, featureNamed(\"ID_1\")).areExactly(1, featureNamed(\"ID_2\"));\n    org.togglz.core.metadata.FeatureMetaData metadata1 = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"ID_1\"));\n    assertThat(metadata1).isNotNull();\n    assertThat(metadata1.getLabel()).isEqualTo(\"ID 1\");\n    org.togglz.core.repository.FeatureState defaultFeatureState1 = metadata1.getDefaultFeatureState();\n    assertThat(defaultFeatureState1.isEnabled()).isTrue();\n    assertThat(metadata1.getGroups()).hasSize(2).areExactly(1, groupNamed(\"Group 1\")).areExactly(1, groupNamed(\"Group Other\"));\n    org.togglz.core.metadata.FeatureMetaData metadata2 = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"ID_2\"));\n    assertThat(metadata2).isNotNull();\n    assertThat(metadata2.getLabel()).isEqualTo(\"ID 2\");\n    org.togglz.core.repository.FeatureState defaultFeatureState2 = metadata2.getDefaultFeatureState();\n    assertThat(defaultFeatureState2.isEnabled()).isFalse();\n    assertThat(metadata2.getGroups()).hasSize(1).areExactly(1, groupNamed(\"Group 2\"));\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "canInitializeFromProperties",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 20,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.metadata.FeatureGroup>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.metadata.FeatureGroup value) {\n            return (value != null) && value.getLabel().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "groupNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    SystemProperty.applicationVersion.set(\"\");\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.CURRENT_VERSION);\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseWhenCurrentVersionCannotBeResolved",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testParameterWithCustomName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "SeamSecurityUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSeamSecurityWithoutLogin",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final java.lang.String kind = \"CustomKind\";\n    repository = new org.togglz.appengine.repository.DatastoreStateRepository(kind, datastoreService);\n    org.junit.Assert.assertEquals(kind, repository.kind());\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customKindName",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(datastoreService);\n    this.kind = kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.context.FeatureContext.getFeatureManager().setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.testing.MyFeatures.FEATURE_ONE, false));\n}",
        "ClassName": "DefaultFeatureStateTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureManagerImmutable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.manager.FeatureManager manager = org.togglz.core.context.FeatureContext.getFeatureManagerOrNull();\n    if (manager != null) {\n        return manager;\n    }\n    throw new java.lang.IllegalStateException(\"Could not find the FeatureManager. \" + ((\"For web applications please verify that the TogglzFilter starts up correctly. \" + \"In other deployment scenarios you will typically have to implement a FeatureManagerProvider \") + \"as described in the 'Advanced Configuration' chapter of the documentation.\"));\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManager",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(dataSource, \"INSERT INTO TOGGLZ VALUES ('F1', 1, 'myStrategy', 'param23=foobar')\");\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.core.repository.jdbc.JDBCStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(\"myStrategy\", state.getStrategyId());\n    org.junit.Assert.assertEquals(1, state.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"foobar\", state.getParameter(\"param23\"));\n}",
        "ClassName": "JDBCStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.sql.Statement statement = connection.createStatement();\n            try {\n                return statement.executeUpdate(sql);\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "JDBCStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.sql.Connection connection = dataSource.getConnection();\n        try {\n            java.lang.String sql = \"SELECT FEATURE_ENABLED, STRATEGY_ID, STRATEGY_PARAMS FROM %TABLE% WHERE FEATURE_NAME = ?\";\n            java.sql.PreparedStatement statement = connection.prepareStatement(insertTableName(sql));\n            try {\n                statement.setString(1, feature.name());\n                java.sql.ResultSet resultSet = statement.executeQuery();\n                try {\n                    if (resultSet.next()) {\n                        boolean enabled = resultSet.getInt(org.togglz.core.repository.jdbc.Columns.FEATURE_ENABLED) > 0;\n                        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature, enabled);\n                        java.lang.String strategyId = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_ID);\n                        if (org.togglz.core.util.Strings.isNotBlank(strategyId)) {\n                            state.setStrategyId(strategyId.trim());\n                        }\n                        java.lang.String paramData = resultSet.getString(org.togglz.core.repository.jdbc.Columns.STRATEGY_PARAMS);\n                        if (org.togglz.core.util.Strings.isNotBlank(paramData)) {\n                            java.util.Map<java.lang.String, java.lang.String> params = serializer.deserialize(paramData);\n                            for (java.util.Map.Entry<java.lang.String, java.lang.String> param : params.entrySet()) {\n                                state.setParameter(param.getKey(), param.getValue());\n                            }\n                        }\n                        return state;\n                    }\n                } finally {\n                    org.togglz.core.util.DbUtils.closeQuietly(resultSet);\n                }\n            } finally {\n                org.togglz.core.util.DbUtils.closeQuietly(statement);\n            }\n        } finally {\n            org.togglz.core.util.DbUtils.closeQuietly(connection);\n        }\n    } catch (java.sql.SQLException e) {\n        throw new java.lang.IllegalStateException(\"Failed to fetch the feature's state from the database\", e);\n    }\n    return null;\n}",
                "ClassName": "JDBCStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 40,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 72,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").label(\"My Parameter\").description(\"Some text\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"My Parameter\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertEquals(param.getDescription(), \"Some text\");\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testParameterWithDescription",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.description = description;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "description",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(name, \"name is required\");\n    this.label = name;\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "label",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 12,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertTrue(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.ONE.isActive());\n    org.junit.Assert.assertTrue(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.TWO.isActive());\n}",
        "ClassName": "TogglzRuleWithAnnotationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldActivateMultipleFeatures",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.endpoint.id: features\");\n    org.junit.Assert.assertEquals(\"features\", this.context.getBean(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).getId());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "customEndpointId",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    java.util.Set<org.togglz.core.Feature> features = new java.util.HashSet<org.togglz.core.Feature>();\n    java.lang.String name1 = \"Feature 1\";\n    java.lang.String name2 = \"Feature 2\";\n    org.togglz.core.Feature feature1 = mock(org.togglz.core.Feature.class, name1);\n    org.togglz.core.Feature feature2 = mock(org.togglz.core.Feature.class, name2);\n    features.add(feature1);\n    features.add(feature2);\n    when(featureManager.getFeatures()).thenReturn(features);\n    when(feature1.name()).thenReturn(name1);\n    when(feature2.name()).thenReturn(name2);\n    when(featureManager.isActive(featureNamed(name1))).thenReturn(true);\n    when(featureManager.isActive(featureNamed(name2))).thenReturn(false);\n    java.util.Map<java.lang.Object, java.lang.Boolean> map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map.size(), org.hamcrest.CoreMatchers.equalTo(2));\n    assertThat(map.isEmpty(), org.hamcrest.CoreMatchers.is(false));\n    assertThat(map.get(name1), org.hamcrest.CoreMatchers.equalTo(true));\n    assertThat(map.get(name2), org.hamcrest.CoreMatchers.equalTo(false));\n    assertThat(map.get(\"unknown\"), org.hamcrest.CoreMatchers.equalTo(false));\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "canBootstrapViaConstructor",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.mockito.Matchers.argThat(new org.hamcrest.BaseMatcher<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(java.lang.Object obj) {\n            if (obj instanceof org.togglz.core.Feature) {\n                return ((org.togglz.core.Feature) (obj)).name().equals(name);\n            }\n            return false;\n        }\n\n        @java.lang.Override\n        public void describeTo(org.hamcrest.Description desc) {\n            desc.appendText(\"Does not match: \" + name);\n        }\n    });\n}",
                "ClassName": "FeatureMapTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 19,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState ageCheck = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"user.getAttribute('age') >= 21\");\n    org.togglz.core.user.SimpleFeatureUser child = aFeatureUser(\"john\");\n    child.setAttribute(\"age\", 12);\n    assertThat(strategy.isActive(ageCheck, child)).isFalse();\n    org.togglz.core.user.SimpleFeatureUser adult = aFeatureUser(\"peter\");\n    adult.setAttribute(\"age\", 25);\n    assertThat(strategy.isActive(ageCheck, adult)).isTrue();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "scriptCanAccessUserAttributes",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        attributes.put(name, value);\n    } else {\n        attributes.remove(name);\n    }\n    return this;\n}",
                "ClassName": "SimpleFeatureUser",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setAttribute",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 37,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"F1\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isFalse();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithoutLabel",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final java.util.Map<java.lang.String, java.lang.String> map = new java.util.HashMap<java.lang.String, java.lang.String>() {\n        {\n            put(\"param23\", \"foobar\");\n        }\n    };\n    update(\"F1\", true, \"myStrategy\", map, null);\n    final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(repository.kind(), org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1.name());\n    com.google.appengine.api.datastore.Entity featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(true, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertEquals(\"myStrategy\", featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"param23\")));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"foobar\")));\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n    featureEntity = datastoreService.get(key);\n    org.junit.Assert.assertEquals(false, featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED));\n    org.junit.Assert.assertEquals(\"someId\", featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"param\")));\n    org.junit.Assert.assertThat(((java.util.List<java.lang.String>) (featureEntity.getProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES))), org.hamcrest.CoreMatchers.is(java.util.Arrays.asList(\"foo\")));\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldUpdateExistingDatabaseEntry",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 8,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 21,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "2",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 2,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.kind;\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "kind",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(kind(), featureState.getFeature().name());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, featureState.isEnabled());\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, featureState.getStrategyId());\n    final java.util.Map<java.lang.String, java.lang.String> params = featureState.getParameterMap();\n    if ((params != null) && (!params.isEmpty())) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>(params.size());\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>(params.size());\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    putInsideTransaction(featureEntity);\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 60,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(\"SERIALIZABLE\");\n    java.io.ByteArrayOutputStream os = new java.io.ByteArrayOutputStream();\n    java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(os);\n    try {\n        try {\n            oos.writeObject(feature);\n            java.io.InputStream is = new java.io.ByteArrayInputStream(os.toByteArray());\n            java.io.ObjectInputStream ois = new java.io.ObjectInputStream(is);\n            try {\n                java.lang.Object deserializedFeature = ois.readObject();\n                org.junit.Assert.assertEquals(\"NamedFeature was not correctly serialized/deserialized\", feature, deserializedFeature);\n            } finally {\n                is.close();\n                ois.close();\n            }\n        } catch (java.io.NotSerializableException e) {\n            org.junit.Assert.fail(\"NamedFeature is not serializable\");\n        }\n    } finally {\n        os.close();\n        oos.close();\n    }\n}",
        "ClassName": "NamedFeatureTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "serializable",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 24,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.List<org.togglz.core.Feature> features = java.util.Arrays.<org.togglz.core.Feature>asList(new org.togglz.core.util.NamedFeature(\"f1\"), new org.togglz.core.util.NamedFeature(\"f2\"));\n    org.togglz.core.manager.FeatureManager featureManager = mock(org.togglz.core.manager.FeatureManager.class);\n    when(featureManager.getFeatures()).thenReturn(new java.util.HashSet<org.togglz.core.Feature>(features));\n    org.togglz.core.util.FeatureMap map = new org.togglz.core.util.FeatureMap(featureManager);\n    assertThat(map).hasSize(2);\n}",
        "ClassName": "FeatureMapTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnCorrectSize",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.manager = manager;\n}",
                "ClassName": "FeatureMap",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    int ttl = 5;\n    org.togglz.appengine.repository.MemcacheStateRepository repository = new org.togglz.appengine.repository.MemcacheStateRepository(delegate, ttl);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1).isEnabled());\n        java.lang.Thread.sleep(ttl + 10);\n    }\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(5)).getFeatureState(org.togglz.appengine.repository.MemcacheStateRepositoryTest.TestFeature.F1);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "MemcacheStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCacheExpiryBecauseOfTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(delegate);\n    this.expiration = com.google.appengine.api.memcache.Expiration.byDeltaMillis(ttlInSeconds);\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = ((org.togglz.core.repository.FeatureState) (cache.get(key(feature.name()))));\n    if (state == null) {\n        state = delegate.getFeatureState(feature);\n        cache.put(key(feature.name()), state, getExpiration());\n    }\n    return state;\n}",
                "ClassName": "MemcacheStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.String username = \"named-user\";\n    boolean featureAdmin = true;\n    org.togglz.core.user.UserProvider userProvider = new org.togglz.core.user.SingleUserProvider(username, featureAdmin);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.hamcrest.MatcherAssert.assertThat(user.getName(), org.hamcrest.CoreMatchers.equalTo(username));\n    org.hamcrest.MatcherAssert.assertThat(user.isFeatureAdmin(), org.hamcrest.CoreMatchers.equalTo(featureAdmin));\n}",
        "ClassName": "SingleUserProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "canProvideNamedUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin));\n}",
                "ClassName": "SingleUserProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    org.togglz.core.repository.FeatureState stateAlwaysTrue = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"1 == 1\");\n    assertThat(strategy.isActive(stateAlwaysTrue, aFeatureUser(\"john\"))).isTrue();\n    org.togglz.core.repository.FeatureState stateAlwaysFalse = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"0 == 1\");\n    assertThat(strategy.isActive(stateAlwaysFalse, aFeatureUser(\"john\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnSameResultAsScriptForLiterals",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    update(\"F1\", false, null, null, null);\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(false, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShouldReadStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    final com.google.appengine.api.datastore.Entity featureEntity = new com.google.appengine.api.datastore.Entity(repository.kind(), name);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.ENABLED, enabled);\n    featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_ID, strategyId);\n    if (params != null) {\n        final java.util.List<java.lang.String> strategyParamsNames = new java.util.ArrayList<java.lang.String>();\n        final java.util.List<java.lang.String> strategyParamsValues = new java.util.ArrayList<java.lang.String>();\n        for (final java.lang.String paramName : params.keySet()) {\n            strategyParamsNames.add(paramName);\n            strategyParamsValues.add(params.get(paramName));\n        }\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_NAMES, strategyParamsNames);\n        featureEntity.setUnindexedProperty(org.togglz.appengine.repository.DatastoreStateRepository.STRATEGY_PARAMS_VALUES, strategyParamsValues);\n    }\n    if (txn == null) {\n        datastoreService.put(featureEntity);\n    } else {\n        datastoreService.put(txn, featureEntity);\n    }\n}",
                "ClassName": "DatastoreStateRepositoryTest",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "update",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 3,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 40,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    repo1.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, false));\n    repo2.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1, true));\n    org.junit.Assert.assertFalse(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1).isEnabled());\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testGetFeatureFIFO",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    helper.setEnvIsLoggedIn(true).setEnvIsAdmin(true).setEnvEmail(\"admin@togglz.org\").setEnvAuthDomain(\"togglz.org\");\n    com.google.appengine.api.users.UserService userService = com.google.appengine.api.users.UserServiceFactory.getUserService();\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertTrue(user.isFeatureAdmin());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getUserId(), user.getName());\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getEmail(), user.getAttribute(\"email\"));\n    org.junit.Assert.assertEquals(userService.getCurrentUser().getNickname(), user.getAttribute(\"nickname\"));\n}",
        "ClassName": "UserServiceUserProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "userIsLoggedInAsAdmin",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 10,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.user.SimpleFeatureUser featureUser = null;\n    com.google.appengine.api.users.User user = userService.getCurrentUser();\n    if (user != null) {\n        featureUser = new org.togglz.core.user.SimpleFeatureUser(user.getUserId(), userService.isUserAdmin());\n        featureUser.setAttribute(\"email\", user.getEmail());\n        featureUser.setAttribute(\"nickname\", user.getNickname());\n    }\n    return featureUser;\n}",
                "ClassName": "UserServiceUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 10,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.context.FeatureContext.clearCache();\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class });\n    org.junit.Assert.assertNull(org.togglz.core.context.FeatureContext.getFeatureManagerOrNull());\n    org.junit.Assert.assertNull(org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "noFeatureProviderBeanAndFeatureEnumsProperty",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.context.FeatureContext.cache.clear();\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "clearCache",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.core.context.FeatureContext.getContextClassLoader();\n    org.togglz.core.manager.FeatureManager featureManager = org.togglz.core.context.FeatureContext.cache.get(classLoader);\n    if (featureManager != null) {\n        return featureManager;\n    }\n    featureManager = org.togglz.core.context.FeatureContext.findFeatureManagerInClassLoader(classLoader);\n    if (featureManager != null) {\n        org.togglz.core.manager.FeatureManager previousFeatureManager = org.togglz.core.context.FeatureContext.cache.putIfAbsent(classLoader, featureManager);\n        if (previousFeatureManager != null) {\n            return previousFeatureManager;\n        }\n    }\n    return featureManager;\n}",
                "ClassName": "FeatureContext",
                "CyclomaticComplexity": 3,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureManagerOrNull",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.singleline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1&param2=value2\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(2).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"value1\")).contains(org.assertj.core.data.MapEntry.entry(\"param2\", \"value2\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldConvertInSinglelineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(false);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "singleline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class });\n    org.junit.Assert.assertSame(this.context, org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.get());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 1,
        "MethodName": "applicationContextBinder",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.ClassLoader classLoader = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.getContextClassLoader();\n    while (classLoader != null) {\n        org.springframework.context.ApplicationContext applicationContext = org.togglz.spring.util.ContextClassLoaderApplicationContextHolder.contextMap.get(classLoader);\n        if (applicationContext != null) {\n            return applicationContext;\n        }\n        classLoader = classLoader.getParent();\n    } \n    return null;\n}",
                "ClassName": "ContextClassLoaderApplicationContextHolder",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "get",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 2
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 2
    },
    {
        "Body": "{\n    com.google.appengine.api.NamespaceManager.set(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE);\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            return null;\n        }\n    });\n    final org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1).disable().setStrategyId(\"someId\").setParameter(\"param\", \"foo\");\n    repository.setFeatureState(state);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "setFeatureStateShouldRunWithinGivenNamespaceWhenCurrentNamespaceIsNotDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 16,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "3",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.strategyId = strategyId;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.VoidWork() {\n        @java.lang.Override\n        void vrun() {\n            decorated.setFeatureState(featureState);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.enable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertTrue(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n    togglzRule.disable(org.togglz.junit.MyFeatures.FEATURE_ONE);\n    org.junit.Assert.assertFalse(org.togglz.junit.MyFeatures.FEATURE_ONE.isActive());\n}",
        "ClassName": "TogglzRuleAllDisabledTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testToggleFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.enable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    featureManager.disable(feature);\n}",
                "ClassName": "TogglzRule",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 10000);\n    for (int i = 0; i < 10; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCachingOfReadOperationsWithTimeToLife",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 10,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"uniqueId\");\n    org.junit.Assert.assertTrue(param.isValid(\"everything will match\"));\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testMinimalParameter",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1\\nparam2=value2\");\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "lineSeparatorShouldDefaultSimpleNewLine",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.feature-enums: org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures\");\n    org.togglz.core.manager.FeatureManager featureManager = this.context.getBean(org.togglz.core.manager.FeatureManager.class);\n    java.util.Set<org.togglz.core.Feature> features = featureManager.getFeatures();\n    org.junit.Assert.assertNotNull(featureManager);\n    org.junit.Assert.assertEquals(2, features.size());\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_ONE));\n    org.junit.Assert.assertTrue(features.contains(org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.MyFeatures.FEATURE_TWO));\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureEnums",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 0);\n    for (int i = 0; i < 10; i++) {\n        org.togglz.core.Feature feature = ((i % 2) == 0) ? org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST : new org.togglz.core.util.NamedFeature(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST.name());\n        org.junit.Assert.assertTrue(repository.getFeatureState(feature).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 1,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testCacheWithDifferentFeatureImplementations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 1,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 2,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), true);\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNotNull(state);\n    org.junit.Assert.assertEquals(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1, state.getFeature());\n    org.junit.Assert.assertEquals(true, state.isEnabled());\n    org.junit.Assert.assertEquals(null, state.getStrategyId());\n    org.junit.Assert.assertEquals(0, state.getParameterNames().size());\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReadTrueStateWithoutStrategyAndParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name, java.lang.Boolean.toString(enabled));\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return feature;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeature",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 42,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(manager.isActive(org.togglz.testing.TestFeatureManagerTest.MyFeatures.ONE));\n}",
        "ClassName": "TestFeatureManagerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureShouldBeInactiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return activeFeatures.contains(feature.name());\n}",
                "ClassName": "TestFeatureManager",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties properties = new java.util.Properties();\n    properties.setProperty(\"F1\", \"My Feature;true;\");\n    org.togglz.core.manager.PropertyFeatureProvider provider = new org.togglz.core.manager.PropertyFeatureProvider(properties);\n    java.util.Set<org.togglz.core.Feature> features = provider.getFeatures();\n    assertThat(features).hasSize(1).areExactly(1, featureNamed(\"F1\"));\n    org.togglz.core.metadata.FeatureMetaData metadata = provider.getMetaData(new org.togglz.core.util.NamedFeature(\"F1\"));\n    assertThat(metadata).isNotNull();\n    assertThat(metadata.getLabel()).isEqualTo(\"My Feature\");\n    org.togglz.core.repository.FeatureState defaultFeatureState = metadata.getDefaultFeatureState();\n    assertThat(defaultFeatureState.isEnabled()).isTrue();\n    assertThat(metadata.getGroups()).isEmpty();\n}",
        "ClassName": "PropertyFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldSupportDefinitionWithLabelAndDefaultAndTrailingSemicolon",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 13,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : properties.entrySet()) {\n        java.lang.String name = entry.getKey().toString();\n        java.lang.String spec = entry.getValue().toString();\n        org.togglz.core.util.NamedFeature feature = new org.togglz.core.util.NamedFeature(name);\n        features.add(feature);\n        metadata.put(name, new org.togglz.core.metadata.property.PropertyFeatureMetaData(feature, spec));\n    }\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return java.util.Collections.unmodifiableSet(features);\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatures",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.assertj.core.api.Condition<org.togglz.core.Feature>() {\n        @java.lang.Override\n        public boolean matches(org.togglz.core.Feature value) {\n            return (value != null) && value.name().equals(name);\n        }\n    };\n}",
                "ClassName": "PropertyFeatureProviderTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "featureNamed",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return metadata.get(feature.name());\n}",
                "ClassName": "PropertyFeatureProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getMetaData",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertNull(crepo.getFeatureState(org.togglz.core.repository.composite.CompositeStateRepositoryTest.TestFeature.F1));\n}",
        "ClassName": "CompositeStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 9,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testFeatureNotFound",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 9,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    for (org.togglz.core.repository.StateRepository repository : iterationOrder.getSelected(repositories)) {\n        org.togglz.core.repository.FeatureState featureState = repository.getFeatureState(feature);\n        if (featureState != null) {\n            return repository.getFeatureState(feature);\n        }\n    }\n    return null;\n}",
                "ClassName": "CompositeStateRepository",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.FeatureStateTest.Features.FEATURE1, true, java.util.Arrays.asList(\"ck\", \"admin\"));\n    org.junit.Assert.assertThat(state.isEnabled(), org.hamcrest.Matchers.is(true));\n    org.junit.Assert.assertThat(state.getParameterNames(), org.hamcrest.Matchers.contains(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n    org.junit.Assert.assertThat(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS), org.hamcrest.Matchers.is(\"ck,admin\"));\n    org.junit.Assert.assertThat(state.getUsers(), org.hamcrest.Matchers.contains(\"ck\", \"admin\"));\n    state.addUser(\"tester\");\n    org.junit.Assert.assertThat(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS), org.hamcrest.Matchers.is(\"ck,admin,tester\"));\n    org.junit.Assert.assertThat(state.getUsers(), org.hamcrest.Matchers.contains(\"ck\", \"admin\", \"tester\"));\n}",
        "ClassName": "FeatureStateTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testOldUsersApiHandling",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 6,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n    this.strategyId = org.togglz.core.activation.UsernameActivationStrategy.ID;\n    this.addUsers(users);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String value = getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS);\n    if (org.togglz.core.util.Strings.isNotBlank(value)) {\n        return org.togglz.core.util.Strings.splitAndTrim(value, \",\");\n    }\n    return java.util.Collections.emptyList();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getUsers",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.addUsers(java.util.Arrays.asList(user));\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "addUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 25,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class, org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.class);\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1).getLabel()).isEqualTo(\"First feature\");\n    assertThat(provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureEnum.ADDITIONAL_FEATURE).getLabel()).isEqualTo(\"Additional Feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBuildMetadataForMultipleEnumsViaConstructor",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.Feature feature = new org.togglz.core.util.NamedFeature(\"SAMPLE_FEATURE\");\n    org.togglz.core.repository.FeatureState featureState = new org.togglz.core.repository.FeatureState(feature, true);\n    stateRepository.setFeatureState(featureState);\n    org.togglz.core.repository.FeatureState storedFeatureState = stateRepository.getFeatureState(feature);\n    org.junit.Assert.assertTrue(org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(featureState, storedFeatureState, true));\n}",
        "ClassName": "HazelcastStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testSetFeatureStateNotExisitingInMap",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "NamedFeature",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 7,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    load(new java.lang.Class[]{ org.togglz.spring.boot.autoconfigure.TogglzAutoConfigurationTest.FeatureProviderConfig.class, org.togglz.spring.boot.autoconfigure.TogglzAutoConfiguration.class }, \"togglz.endpoint.enabled: false\");\n    org.junit.Assert.assertEquals(0, this.context.getBeansOfType(org.togglz.spring.boot.autoconfigure.TogglzEndpoint.class).size());\n}",
        "ClassName": "TogglzAutoConfigurationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 6,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "endpointDisabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 6,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.context = new org.springframework.web.context.support.AnnotationConfigWebApplicationContext();\n    this.context.register(configs);\n    org.springframework.boot.test.EnvironmentTestUtils.addEnvironment(this.context, environment);\n    this.context.refresh();\n}",
                "ClassName": "TogglzAutoConfigurationTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "load",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 6,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.ScriptEngineActivationStrategy strategy = new org.togglz.core.activation.ScriptEngineActivationStrategy();\n    int currentYear = java.util.Calendar.getInstance().get(java.util.GregorianCalendar.YEAR) - 1900;\n    org.togglz.core.repository.FeatureState trueForCurrentYear = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"date.year == \" + currentYear);\n    assertThat(strategy.isActive(trueForCurrentYear, aFeatureUser(\"john\"))).isTrue();\n    org.togglz.core.repository.FeatureState trueForNextYear = aScriptState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.JAVASCRIPT, \"date.year > \" + currentYear);\n    assertThat(strategy.isActive(trueForNextYear, aFeatureUser(\"john\"))).isFalse();\n}",
        "ClassName": "ScriptEngineActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "scriptCanAccessCurrentDate",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    engineManager = new javax.script.ScriptEngineManager();\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.core.activation.ScriptEngineActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG, lang).setParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT, script);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aScriptState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String lang = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_LANG);\n    java.lang.String script = featureState.getParameter(org.togglz.core.activation.ScriptEngineActivationStrategy.PARAM_SCRIPT);\n    javax.script.ScriptEngine engine = engineManager.getEngineByName(lang);\n    if (engine == null) {\n        log.error(\"Could not find script engine for: \" + lang);\n        return false;\n    }\n    engine.put(\"user\", user);\n    engine.put(\"date\", new java.util.Date());\n    try {\n        java.lang.Object result = engine.eval(script);\n        if (result instanceof java.lang.Boolean) {\n            return ((java.lang.Boolean) (result)).booleanValue();\n        }\n    } catch (javax.script.ScriptException e) {\n        log.error(((\"Could not evaluate script for feature \" + featureState.getFeature().name()) + \": \") + e.getMessage());\n    }\n    return false;\n}",
                "ClassName": "ScriptEngineActivationStrategy",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 2,
                "NumberOfFiles": 0,
                "NumberOfLines": 20,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ScriptEngineActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 2,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 29,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"   \");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenRolesParamIsBlank",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Collection authorities = new java.util.ArrayList<org.springframework.security.core.GrantedAuthority>();\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_1\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_ADMIN\"));\n    authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_2\"));\n    when(authentication.getAuthorities()).thenReturn(authorities);\n    org.togglz.core.user.FeatureUser user = userProvider.getCurrentUser();\n    org.junit.Assert.assertThat(user.isFeatureAdmin(), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "SpringSecurityUserProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 13,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getCurrentUserWillReturnFeatureAdminWhenAuthoritiesContainFeatureAdminAuthority",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 13,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.springframework.security.core.context.SecurityContext context = org.springframework.security.core.context.SecurityContextHolder.getContext();\n    org.springframework.security.core.Authentication authentication = context.getAuthentication();\n    if (authentication != null) {\n        java.lang.String name = getUserName(authentication);\n        java.util.Set<java.lang.String> authorities = org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n        boolean featureAdmin = isFeatureAdmin(authentication, authorities);\n        org.togglz.core.user.SimpleFeatureUser user = new org.togglz.core.user.SimpleFeatureUser(name, featureAdmin);\n        user.setAttribute(org.togglz.spring.security.SpringSecurityUserProvider.USER_ATTRIBUTE_ROLES, authorities);\n        return user;\n    }\n    return null;\n}",
                "ClassName": "SpringSecurityUserProvider",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "getCurrentUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 13,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 13,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    setState(\"foo.bar\", \"\");\n    java.lang.System.setProperty(\"foo.bar\", \"\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeFalseIfPropertyExistsAndIsEmpty",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.SystemPropertyActivationStrategyTest.ScriptFeature.FEATURE).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME, propName).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE, propValue).setStrategyId(org.togglz.core.activation.SystemPropertyActivationStrategy.ID);\n}",
                "ClassName": "SystemPropertyActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.WITH_LINK);\n    assertThat(metaData.getAttributes()).containsValue(\"https://github.com/togglz/togglz/pull/33\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnInfoLinkIfAnnotationPresent",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.singleline();\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"foo&bar\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=foo\\\\u0026bar\");\n    java.util.Map<java.lang.String, java.lang.String> result = serializer.deserialize(data);\n    assertThat(result).hasSize(1).contains(org.assertj.core.data.MapEntry.entry(\"param1\", \"foo&bar\"));\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "escapesAmpersandInSinglelineMode",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 9,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(false);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "singleline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.lang.String input = (multiline) ? s : s.replace('&', '\\n');\n        java.util.Properties props = new java.util.Properties();\n        if (s != null) {\n            props.load(new java.io.StringReader(input));\n        }\n        java.util.LinkedHashMap<java.lang.String, java.lang.String> result = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n        for (java.util.Map.Entry<java.lang.Object, java.lang.Object> entry : props.entrySet()) {\n            result.put(entry.getKey().toString(), entry.getValue().toString());\n        }\n        return result;\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "deserialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 16,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 8,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 51,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.util.DefaultMapSerializer serializer = org.togglz.core.repository.util.DefaultMapSerializer.multiline(\"%\");\n    java.util.Map<java.lang.String, java.lang.String> input = new java.util.HashMap<java.lang.String, java.lang.String>();\n    input.put(\"param1\", \"value1\");\n    input.put(\"param2\", \"value2\");\n    java.lang.String data = serializer.serialize(input);\n    assertThat(data).isEqualTo(\"param1=value1%param2=value2\");\n}",
        "ClassName": "DefaultMapSerializerTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 3,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldUseCustomLineSeparator",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 8,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return new org.togglz.core.repository.util.DefaultMapSerializer(true, lineSeparator);\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "multiline",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    try {\n        java.util.Properties props = new java.util.Properties();\n        props.putAll(map);\n        java.io.Writer writer = new java.io.StringWriter();\n        props.store(writer, null);\n        java.util.List<java.lang.String> lines = new java.util.ArrayList<java.lang.String>();\n        for (java.lang.String line : writer.toString().split(\"\\r?\\n\")) {\n            if ((!line.trim().isEmpty()) && (!line.trim().startsWith(\"#\"))) {\n                lines.add(line.trim());\n            }\n        }\n        java.util.Collections.sort(lines);\n        java.lang.StringBuilder builder = new java.lang.StringBuilder();\n        for (java.lang.String line : lines) {\n            if (multiline) {\n                if (builder.length() > 0) {\n                    builder.append(lineSeparator);\n                }\n                builder.append(line);\n            } else {\n                if (builder.length() > 0) {\n                    builder.append(\"&\");\n                }\n                builder.append(line.replace(\"&\", \"\\\\u0026\"));\n            }\n        }\n        return builder.toString();\n    } catch (java.io.IOException e) {\n        throw new java.lang.IllegalStateException(e);\n    }\n}",
                "ClassName": "DefaultMapSerializer",
                "CyclomaticComplexity": 6,
                "DepthOfInheritance": 0,
                "MethodName": "serialize",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 32,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 6,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 35,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.util.FeatureAnnotationsTest.ClassLevelGroup result = org.togglz.core.util.FeatureAnnotations.getAnnotation(org.togglz.core.util.FeatureAnnotationsTest.MyFeature.FEATURE_ENABLED_BY_DEFAULT, org.togglz.core.util.FeatureAnnotationsTest.ClassLevelGroup.class);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.notNullValue());\n}",
        "ClassName": "FeatureAnnotationsTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getAnnotationWillReturnClassLevelAnnotation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 11,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        java.lang.Class<? extends org.togglz.core.Feature> featureClass = feature.getClass();\n        A fieldAnnotation = featureClass.getField(feature.name()).getAnnotation(annotationType);\n        A classAnnotation = featureClass.getAnnotation(annotationType);\n        return fieldAnnotation != null ? fieldAnnotation : classAnnotation;\n    } catch (java.lang.SecurityException e) {\n    } catch (java.lang.NoSuchFieldException e) {\n    }\n    return null;\n}",
                "ClassName": "FeatureAnnotations",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getAnnotation",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 11,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"false\");\n    initialProps.setProperty(\"FEATURE1.strategy\", \"something\");\n    initialProps.setProperty(\"FEATURE1.param.foo\", \"bar\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        state.enable();\n        repo.setFeatureState(state);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.size(), org.hamcrest.Matchers.is(3));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"true\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(\"something\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.foo\"), org.hamcrest.Matchers.is(\"bar\"));\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 3,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "enableFeature",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 20,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(true);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "enable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 63,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    final org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.appengine.repository.DatastoreStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertNull(state);\n}",
        "ClassName": "DatastoreStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullWhenStateDoesntExist",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    try {\n        final com.google.appengine.api.datastore.Key key = com.google.appengine.api.datastore.KeyFactory.createKey(kind(), feature.name());\n        return createFeatureState(feature, getInsideTransaction(key));\n    } catch (final com.google.appengine.api.datastore.EntityNotFoundException ignored) {\n        return null;\n    }\n}",
                "ClassName": "DatastoreStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    givenSomeDataSourceWithAutoCommitSetTo(true);\n    whenTheFeatureIsEnabled();\n    thenTheDatabaseShouldBeUpdated();\n}",
        "ClassName": "JDBCRepositoryAutoCommitTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldUpdateWithAutoCommitEnabled",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 4,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    java.lang.String url = (\"jdbc:h2:mem:\" + this.getClass().getSimpleName()) + java.lang.System.currentTimeMillis();\n    org.h2.jdbcx.JdbcConnectionPool pool = org.h2.jdbcx.JdbcConnectionPool.create(url, \"sa\", \"\");\n    dataSource = new org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitTestDataSource(pool, autoCommit);\n    repository = new org.togglz.core.repository.jdbc.JDBCStateRepository(dataSource, \"TOGGLZ\", true, org.togglz.core.repository.util.DefaultMapSerializer.multiline());\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "givenSomeDataSourceWithAutoCommitSetTo",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1).enable().setStrategyId(\"foobar\");\n    repository.setFeatureState(state);\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "whenTheFeatureIsEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.core.repository.jdbc.JDBCRepositoryAutoCommitTest.AutoCommitFeature.F1);\n    assertThat(state).isNotNull();\n    assertThat(state.isEnabled()).isTrue();\n    assertThat(state.getStrategyId()).isEqualTo(\"foobar\");\n}",
                "ClassName": "JDBCRepositoryAutoCommitTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "thenTheDatabaseShouldBeUpdated",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 16,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(\"\");\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForEmptyVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.activation.Parameter param = org.togglz.core.activation.ParameterBuilder.create(\"uniqueId\").matching(\"[a-z]+\");\n    org.junit.Assert.assertEquals(param.getName(), \"uniqueId\");\n    org.junit.Assert.assertEquals(param.getLabel(), \"uniqueId\");\n    org.junit.Assert.assertFalse(param.isOptional());\n    org.junit.Assert.assertFalse(param.isLargeText());\n    org.junit.Assert.assertNull(param.getDescription());\n    org.junit.Assert.assertTrue(param.isValid(\"lowercase\"));\n    org.junit.Assert.assertFalse(param.isValid(\"UPPERCASE\"));\n}",
        "ClassName": "ParameterBuilderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testParameterWithRegularExpression",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    org.togglz.core.util.Validate.notNull(regex, \"regex is required\");\n    this.pattern = java.util.regex.Pattern.compile(regex);\n    return this;\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "matching",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.activation.ParameterBuilder(name);\n}",
                "ClassName": "ParameterBuilder",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "create",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.StateRepository repository = new org.togglz.core.repository.cache.CachingStateRepository(delegate, 10000);\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    repository.setFeatureState(new org.togglz.core.repository.FeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST, true));\n    for (int i = 0; i < 5; i++) {\n        org.junit.Assert.assertTrue(repository.getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST).isEnabled());\n        java.lang.Thread.sleep(10);\n    }\n    org.mockito.Mockito.verify(delegate, org.mockito.Mockito.times(2)).getFeatureState(org.togglz.core.repository.cache.CachingStateRepositoryTest.DummyFeature.TEST);\n    org.mockito.Mockito.verify(delegate).setFeatureState(org.mockito.Mockito.any(org.togglz.core.repository.FeatureState.class));\n    org.mockito.Mockito.verifyNoMoreInteractions(delegate);\n}",
        "ClassName": "CachingStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 2,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testStateModifyExpiresCache",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 2,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 4,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (ttl < 0) {\n        throw new java.lang.IllegalArgumentException(\"Negative TTL value: \" + ttl);\n    }\n    this.delegate = delegate;\n    this.ttl = ttl;\n}",
                "ClassName": "CachingStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.feature = feature;\n    this.enabled = enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 14,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(new org.togglz.core.manager.EnumBasedFeatureProviderTest.OtherFeatureImpl(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1.name()));\n    assertThat(metaData.getLabel()).isEqualTo(\"First feature\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnMetaDataWhenRequestedWithOtherFeatureImplementation",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.name = name;\n}",
                "ClassName": "OtherFeatureImpl",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 11,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.appengine.activation.ApplicationVersionActivationStrategy strategy = new org.togglz.appengine.activation.ApplicationVersionActivationStrategy();\n    org.togglz.core.repository.FeatureState state = aVersionState(null);\n    boolean active = strategy.isActive(state, aFeatureUser(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.JOHN));\n    org.junit.Assert.assertFalse(active);\n}",
        "ClassName": "ApplicationVersionActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnFalseForNullVersion",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.repository.FeatureState(org.togglz.appengine.activation.ApplicationVersionActivationStrategyTest.ScriptFeature.FEATURE).setStrategyId(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.ID).setParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS, lang);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aVersionState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String allowedVersionsParam = featureState.getParameter(org.togglz.appengine.activation.ApplicationVersionActivationStrategy.PARAM_VERSIONS);\n    if (org.togglz.core.util.Strings.isNotBlank(allowedVersionsParam)) {\n        java.lang.String currentVersion = SystemProperty.applicationVersion.get();\n        if (org.togglz.core.util.Strings.isNotBlank(currentVersion)) {\n            java.util.List<java.lang.String> allowedVersions = org.togglz.core.util.Strings.splitAndTrim(allowedVersionsParam, \"[\\\\s,]+\");\n            for (java.lang.String allowedVersion : allowedVersions) {\n                if (currentVersion.startsWith(allowedVersion)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "ApplicationVersionActivationStrategy",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 15,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(string);\n}",
                "ClassName": "ApplicationVersionActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aFeatureUser",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 4,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 23,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(\"ROLE_1, ROLE_2, ROLE_3\");\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenUserHasNoneOfSelectedRoles",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    boolean result = activationStrategy.isActive(state, null);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 5,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 17,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenThereIsNoUser",
        "MinimumCyclomaticComplexity": 5,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 17,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    expectedException.expect(java.lang.AssertionError.class);\n    org.junit.Assert.assertFalse(org.togglz.junit.vary.MyFeatures.F1.isActive());\n}",
        "ClassName": "TogglzRuleWithVariations_EnableSadCase_Test",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "test",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.html.HtmlPage page = client.getPage(url + \"jsp-taglib-inverse-test.jsp\");\n    assertThat(page.asText()).contains(\"Feature [INACTIVE_FEATURE] is inactive\").doesNotContain(\"Feature [ACTIVE_FEATURE] is inactive\");\n}",
        "ClassName": "JspTaglibTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldIncludeOrExcludeBodyCorrectlyInverseCondition",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.mockito.Mockito.when(user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)).thenReturn(userRoles);\n    org.mockito.Mockito.when(state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME)).thenReturn(null);\n    boolean result = activationStrategy.isActive(state, user);\n    org.junit.Assert.assertThat(result, org.hamcrest.CoreMatchers.is(false));\n}",
        "ClassName": "UserRoleActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 10,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "isActiveWillReturnFalseWhenThereIsNoRolesParam",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 6,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (user != null) {\n        java.util.Collection<java.lang.String> userRoles = ((java.util.Collection<java.lang.String>) (user.getAttribute(org.togglz.core.activation.UserRoleActivationStrategy.USER_ATTRIBUTE_ROLES)));\n        if (userRoles != null) {\n            java.lang.String rolesAsString = state.getParameter(org.togglz.core.activation.UserRoleActivationStrategy.PARAM_ROLES_NAME);\n            if (org.togglz.core.util.Strings.isNotBlank(rolesAsString)) {\n                java.util.List<java.lang.String> roles = org.togglz.core.util.Strings.splitAndTrim(rolesAsString, \",\");\n                for (java.lang.String authority : roles) {\n                    if (userRoles.contains(authority)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",
                "ClassName": "UserRoleActivationStrategy",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 20,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    assertThat(provider.getActivationStrategies()).extracting(\"id\").contains(org.togglz.core.activation.UsernameActivationStrategy.ID).contains(org.togglz.core.activation.GradualActivationStrategy.ID).contains(org.togglz.core.activation.ScriptEngineActivationStrategy.ID).contains(org.togglz.core.activation.ReleaseDateActivationStrategy.ID).contains(org.togglz.core.activation.ServerIpActivationStrategy.ID).contains(org.togglz.core.activation.UserRoleActivationStrategy.ID);\n}",
        "ClassName": "DefaultActivationStrategyProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldLoadDefaultStrategies",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 3,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return java.util.Collections.unmodifiableList(this.strategies);\n}",
                "ClassName": "DefaultActivationStrategyProvider",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getActivationStrategies",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.util.Properties initialProps = new java.util.Properties();\n    initialProps.setProperty(\"FEATURE1\", \"true\");\n    initialProps.setProperty(\"FEATURE1.users\", \"chkal,tester\");\n    initialProps.setProperty(\"FEATURE2\", \"false\");\n    initialProps.setProperty(\"FEATURE3\", \"true\");\n    java.io.File file = org.togglz.core.repository.file.FileBasedStateRepositoryTest.createPropertiesFile(initialProps);\n    try {\n        org.togglz.core.repository.file.FileBasedStateRepository repo = new org.togglz.core.repository.file.FileBasedStateRepository(file);\n        org.togglz.core.repository.FeatureState state1 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE1);\n        org.junit.Assert.assertEquals(true, state1.isEnabled());\n        org.junit.Assert.assertEquals(org.togglz.core.activation.UsernameActivationStrategy.ID, state1.getStrategyId());\n        org.junit.Assert.assertEquals(1, state1.getParameterNames().size());\n        org.junit.Assert.assertEquals(\"chkal,tester\", state1.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n        org.togglz.core.repository.FeatureState state2 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE2);\n        org.junit.Assert.assertEquals(false, state2.isEnabled());\n        org.junit.Assert.assertEquals(null, state2.getStrategyId());\n        org.junit.Assert.assertEquals(0, state2.getParameterNames().size());\n        org.togglz.core.repository.FeatureState state3 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE3);\n        org.junit.Assert.assertEquals(true, state3.isEnabled());\n        org.junit.Assert.assertEquals(null, state2.getStrategyId());\n        org.junit.Assert.assertEquals(0, state3.getParameterNames().size());\n        org.togglz.core.repository.FeatureState state4 = repo.getFeatureState(org.togglz.core.repository.file.FileBasedStateRepositoryTest.MyFeature.FEATURE4);\n        org.junit.Assert.assertNull(state4);\n        state1.disable();\n        repo.setFeatureState(state1);\n        java.util.Properties newProps = org.togglz.core.repository.file.FileBasedStateRepositoryTest.readPropertiesFile(file);\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1\"), org.hamcrest.Matchers.is(\"false\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.strategy\"), org.hamcrest.Matchers.is(org.togglz.core.activation.UsernameActivationStrategy.ID));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.param.users\"), org.hamcrest.Matchers.is(\"chkal,tester\"));\n        org.junit.Assert.assertThat(newProps.getProperty(\"FEATURE1.users\"), org.hamcrest.Matchers.nullValue());\n    } finally {\n        file.delete();\n    }\n}",
        "ClassName": "FileBasedStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 2,
        "MeanNumberOfLines": 7,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "readFeatureStateFromOldFormat",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 15,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 8,
        "NumberOfLines": 35,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(file, 1000);\n}",
                "ClassName": "FileBasedStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 2,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.File file = java.io.File.createTempFile(\"test-file-repository\", null);\n    java.io.FileOutputStream fos = new java.io.FileOutputStream(file);\n    p.store(fos, null);\n    fos.close();\n    return file;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 13,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return enabled;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return strategyId;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getStrategyId",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return setEnabled(false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "disable",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    org.togglz.core.Feature feature = featureState.getFeature();\n    org.togglz.core.repository.property.PropertySource.Editor editor = propertySource.getEditor();\n    java.lang.String enabledKey = org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature);\n    java.lang.String enabledValue = (featureState.isEnabled()) ? \"true\" : \"false\";\n    editor.setValue(enabledKey, enabledValue);\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), featureState.getStrategyId());\n    java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n    editor.removeKeysStartingWith(paramPrefix);\n    for (java.lang.String id : featureState.getParameterNames()) {\n        java.lang.String key = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, id);\n        editor.setValue(key, featureState.getParameter(id));\n    }\n    editor.setValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null);\n    editor.commit();\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 17,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.io.FileInputStream fis = new java.io.FileInputStream(file);\n    java.util.Properties p = new java.util.Properties();\n    p.load(fis);\n    return p;\n}",
                "ClassName": "FileBasedStateRepositoryTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "readPropertiesFile",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 6,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 21,
        "TotalNumberOfLines": 75,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.google.appengine.api.NamespaceManager.set(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ORIGINAL_NAMESPACE);\n    repository = new org.togglz.appengine.repository.FixedNamespaceStateRepository(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, new org.togglz.core.repository.StateRepository() {\n        @java.lang.Override\n        public void setFeatureState(org.togglz.core.repository.FeatureState featureState) {\n        }\n\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState getFeatureState(org.togglz.core.Feature feature) {\n            org.junit.Assert.assertEquals(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.ACME_NAMESPACE, com.google.appengine.api.NamespaceManager.get());\n            return null;\n        }\n    });\n    repository.getFeatureState(org.togglz.appengine.repository.FixedNamespaceStateRepositoryTest.TestFeature.F1);\n}",
        "ClassName": "FixedNamespaceStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 5,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "getFeatureStateShouldRunWithinGivenNamespaceWhenCurrentNamespaceIsNotDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 2,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 15,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.decorated = com.google.common.base.Preconditions.checkNotNull(decorated);\n    com.google.appengine.api.NamespaceManager.validateNamespace(namespace);\n    this.namespace = namespace;\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 5,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n}",
                "ClassName": "2",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 2,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return org.togglz.appengine.repository.FixedNamespaceStateRepository.withinNamespace(namespace, new org.togglz.appengine.repository.FixedNamespaceStateRepository.Work<org.togglz.core.repository.FeatureState>() {\n        @java.lang.Override\n        public org.togglz.core.repository.FeatureState run() {\n            return decorated.getFeatureState(feature);\n        }\n    });\n}",
                "ClassName": "FixedNamespaceStateRepository",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 15,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    state.setParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES, java.lang.String.format(\"%s,%s\", org.togglz.servlet.activation.ServerNameActivationStrategyTest.MATCHING_VHOST_NAME, org.togglz.servlet.activation.ServerNameActivationStrategyTest.DIFFERENT_VHOST_NAME));\n    boolean active = strategySpy.isActive(state, user);\n    assertThat(active).isTrue();\n}",
        "ClassName": "ServerNameActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnTrueForFeatureOnMatchingOneDomainNameFromDomainList",
        "MinimumCyclomaticComplexity": 1,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    javax.servlet.http.HttpServletRequest request = getServletRequest();\n    if (request != null) {\n        java.lang.String allowedServerNamesParam = featureState.getParameter(org.togglz.servlet.activation.ServerNameActivationStrategy.PARAM_SERVER_NAMES);\n        java.util.List<java.lang.String> allowedServerNames = org.togglz.core.util.Strings.splitAndTrim(allowedServerNamesParam, \"[\\\\s,]+\");\n        return allowedServerNames.contains(request.getServerName());\n    }\n    return false;\n}",
                "ClassName": "ServerNameActivationStrategy",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 9,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 17,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.metadata.enums.EnumFeatureMetaData metaData = new org.togglz.core.metadata.enums.EnumFeatureMetaData(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE);\n    java.util.Set<org.togglz.core.metadata.FeatureGroup> groups = metaData.getGroups();\n    org.junit.Assert.assertThat(groups, org.hamcrest.CoreMatchers.notNullValue());\n    org.junit.Assert.assertThat(groups.size(), org.hamcrest.CoreMatchers.is(2));\n    org.togglz.core.metadata.FeatureGroup group1 = com.google.common.collect.Iterables.find(groups, createFeatureGroupLabelPredicate(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.FIELD_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(group1.contains(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n    org.togglz.core.metadata.FeatureGroup group2 = com.google.common.collect.Iterables.find(groups, createFeatureGroupLabelPredicate(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.CLASS_LEVEL_GROUP_LABEL));\n    org.junit.Assert.assertThat(group2.contains(org.togglz.core.metadata.enums.EnumFeatureMetaDataTest.TestFeatures.FEATURE), org.hamcrest.CoreMatchers.is(true));\n}",
        "ClassName": "EnumFeatureMetaDataTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 11,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "constructorWillPopulateGroupsFromAnnotations",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 4,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.label = org.togglz.core.util.FeatureAnnotations.getLabel(feature);\n    boolean enabledByDefault = org.togglz.core.util.FeatureAnnotations.isEnabledByDefault(feature);\n    this.defaultFeatureState = new org.togglz.core.repository.FeatureState(feature, enabledByDefault);\n    org.togglz.core.annotation.DefaultActivationStrategy defaultActivationStrategy = org.togglz.core.util.FeatureAnnotations.getAnnotation(feature, org.togglz.core.annotation.DefaultActivationStrategy.class);\n    if (defaultActivationStrategy != null) {\n        this.defaultFeatureState.setStrategyId(defaultActivationStrategy.id());\n        for (org.togglz.core.annotation.ActivationParameter parameter : defaultActivationStrategy.parameters()) {\n            this.defaultFeatureState.setParameter(parameter.name(), parameter.value());\n        }\n    }\n    for (java.lang.annotation.Annotation annotation : org.togglz.core.util.FeatureAnnotations.getAnnotations(feature)) {\n        org.togglz.core.metadata.FeatureGroup group = org.togglz.core.metadata.enums.AnnotationFeatureGroup.build(annotation.annotationType());\n        if (group != null) {\n            groups.add(group);\n        }\n        java.lang.String[] attribute = org.togglz.core.util.FeatureAnnotations.getFeatureAttribute(annotation);\n        if (attribute != null) {\n            attributes.put(attribute[0], attribute[1]);\n        }\n    }\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 5,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 22,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return groups;\n}",
                "ClassName": "EnumFeatureMetaData",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getGroups",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new com.google.common.base.Predicate<org.togglz.core.metadata.FeatureGroup>() {\n        @java.lang.Override\n        public boolean apply(org.togglz.core.metadata.FeatureGroup group) {\n            return group.getLabel().equals(label);\n        }\n    };\n}",
                "ClassName": "EnumFeatureMetaDataTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "createFeatureGroupLabelPredicate",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 33,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    java.lang.System.setProperty(\"foo.bar\", \"true\");\n    setState(\"foo.baz\", \"true\");\n    org.junit.Assert.assertFalse(strategy.isActive(state, user));\n}",
        "ClassName": "SystemPropertyActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldBeFalseIfNoMatchingFeatureState",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 1,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.SystemPropertyActivationStrategyTest.ScriptFeature.FEATURE).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME, propName).setParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE, propValue).setStrategyId(org.togglz.core.activation.SystemPropertyActivationStrategy.ID);\n}",
                "ClassName": "SystemPropertyActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    java.lang.String stateName = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_NAME);\n    java.lang.String stateValue = featureState.getParameter(org.togglz.core.activation.SystemPropertyActivationStrategy.PARAM_PROPERTY_VALUE);\n    java.lang.String propValue = java.lang.System.getProperty(stateName);\n    return validate(propValue, stateValue);\n}",
                "ClassName": "SystemPropertyActivationStrategy",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 6,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 9,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1.name(), true, \"S1\", new org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param(\"one\", \"A\"), new org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param(\"two\", \"B\"));\n    org.togglz.core.repository.FeatureState state = repository.getFeatureState(org.togglz.archaius.repository.ArchaiusStateRepositoryTest.TestFeature.F1);\n    org.junit.Assert.assertEquals(2, state.getParameterNames().size());\n    org.junit.Assert.assertEquals(\"A\", state.getParameter(\"one\"));\n    org.junit.Assert.assertEquals(\"B\", state.getParameter(\"two\"));\n}",
        "ClassName": "ArchaiusStateRepositoryTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 1,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "withStrategyParameters",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 3,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 7,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this.key = key;\n    this.value = value;\n}",
                "ClassName": "Param",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.addState(name, enabled);\n    org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty(name + \".strategy\", strategyName);\n    for (org.togglz.archaius.repository.ArchaiusStateRepositoryTest.Param param : params) {\n        org.togglz.archaius.repository.ArchaiusStateRepositoryTest.mapConfiguration.setProperty((name + \".param.\") + param.key, param.value);\n    }\n}",
                "ClassName": "ArchaiusStateRepositoryTest",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "addState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 7,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    propertySource.reloadIfUpdated();\n    java.lang.String enabledAsStr = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getEnabledPropertyName(feature), null);\n    if (enabledAsStr != null) {\n        org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(feature);\n        state.setEnabled(org.togglz.core.repository.property.PropertyBasedStateRepository.isTrue(enabledAsStr));\n        java.lang.String strategy = propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getStrategyPropertyName(feature), null);\n        state.setStrategyId(strategy);\n        java.lang.String paramPrefix = org.togglz.core.repository.property.PropertyBasedStateRepository.getParameterPropertyName(feature, \"\");\n        for (java.lang.String key : propertySource.getKeysStartingWith(paramPrefix)) {\n            java.lang.String id = key.substring(paramPrefix.length());\n            java.lang.String value = propertySource.getValue(key, null);\n            state.setParameter(id, value);\n        }\n        java.util.List<java.lang.String> additionalUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(propertySource.getValue(org.togglz.core.repository.property.PropertyBasedStateRepository.getUsersPropertyName(feature), null));\n        if (!additionalUsers.isEmpty()) {\n            java.util.List<java.lang.String> currentUsers = org.togglz.core.repository.property.PropertyBasedStateRepository.toList(state.getParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS));\n            currentUsers.addAll(additionalUsers);\n            state.setParameter(org.togglz.core.activation.UsernameActivationStrategy.PARAM_USERS, org.togglz.core.util.Strings.join(currentUsers, \",\"));\n            if (state.getStrategyId() == null) {\n                state.setStrategyId(org.togglz.core.activation.UsernameActivationStrategy.ID);\n            }\n        }\n        return state;\n    }\n    return null;\n}",
                "ClassName": "PropertyBasedStateRepository",
                "CyclomaticComplexity": 4,
                "DepthOfInheritance": 0,
                "MethodName": "getFeatureState",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 27,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.keySet();\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameterNames",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return this.parameters.get(name);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "getParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 5,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 44,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.spi.FeatureProvider provider = new org.togglz.core.manager.EnumBasedFeatureProvider(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.class);\n    org.togglz.core.metadata.FeatureMetaData metaData = provider.getMetaData(org.togglz.core.manager.EnumBasedFeatureProviderTest.ValidFeatureEnum.FEATURE1);\n    assertThat(metaData.getAttributes()).doesNotContainValue(\"Christian\");\n}",
        "ClassName": "EnumBasedFeatureProviderTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 2,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 8,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldReturnNullForOwnerNameByDefault",
        "MinimumCyclomaticComplexity": 2,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 8,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 0,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 5,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    if (featureEnums == null) {\n        throw new java.lang.IllegalArgumentException(\"The featureEnums argument must not be null\");\n    }\n    for (java.lang.Class<? extends org.togglz.core.Feature> featureEnum : featureEnums) {\n        addFeatureEnum(featureEnum);\n    }\n}",
                "ClassName": "EnumBasedFeatureProvider",
                "CyclomaticComplexity": 2,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 2,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 8,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    com.gargoylesoftware.htmlunit.WebClient client = new com.gargoylesoftware.htmlunit.WebClient();\n    com.gargoylesoftware.htmlunit.TextPage page = client.getPage(url + \"features\");\n    org.junit.Assert.assertTrue(page.getContent().contains(\"DISABLED = false\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_ALL = true\"));\n    org.junit.Assert.assertTrue(page.getContent().contains(\"ENABLED_FOR_CK = false\"));\n    com.gargoylesoftware.htmlunit.TextPage userPage = client.getPage(url + \"user\");\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"USER = null\"));\n    org.junit.Assert.assertTrue(userPage.getContent().contains(\"ADMIN = null\"));\n}",
        "ClassName": "ShiroUsersTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 0,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "testShiroAsAnonymousUser",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 0,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 5,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 10,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 0,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.togglz.core.repository.FeatureState state = new org.togglz.core.repository.FeatureState(org.togglz.core.activation.GradualActivationStrategyTest.GradualFeature.FEATURE);\n    state.setEnabled(true);\n    state.setParameter(org.togglz.core.activation.GradualActivationStrategy.PARAM_PERCENTAGE, \"100\");\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(0)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(1)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(3)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(10)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(99)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(100)));\n    org.junit.Assert.assertTrue(strategy.isActive(state, aUserWithHash(110)));\n}",
        "ClassName": "GradualActivationStrategyTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 4,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "shouldAlwaysReturnTrueForOneHundredPercent",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 7,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 12,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    this(feature, false);\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "<init>",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    this.enabled = enabled;\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "setEnabled",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 4,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    if (value != null) {\n        this.parameters.put(name, value);\n    } else {\n        this.parameters.remove(name);\n    }\n    return this;\n}",
                "ClassName": "FeatureState",
                "CyclomaticComplexity": 1,
                "DepthOfInheritance": 0,
                "MethodName": "setParameter",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 8,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            },
            {
                "Body": "{\n    return new org.togglz.core.user.SimpleFeatureUser(\"hash-\" + hash, false);\n}",
                "ClassName": "GradualActivationStrategyTest",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 0,
                "MethodName": "aUserWithHash",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 1,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 18,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    },
    {
        "Body": "{\n    org.junit.Assert.assertFalse(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.ONE.isActive());\n    org.junit.Assert.assertFalse(org.togglz.junit.TogglzRuleWithAnnotationTest.MyFeatures.TWO.isActive());\n}",
        "ClassName": "TogglzRuleWithAnnotationTest",
        "Commit": "e7c7fa01edbb5e52003d7722eaf024e19a5d2a1f",
        "CyclomaticComplexity": 0,
        "Date": "Fri, 17 Jun 2016 07:31:19 +0200",
        "HasTimeoutInAnnotations": 0,
        "Label": 0,
        "MaximumCyclomaticComplexity": 0,
        "MaximumNumberOfAsynchronousWaits": 0,
        "MaximumNumberOfDates": 0,
        "MaximumNumberOfFiles": 0,
        "MaximumNumberOfLines": 0,
        "MaximumNumberOfRandoms": 0,
        "MaximumNumberOfThreads": 0,
        "MeanCyclomaticComplexity": 0,
        "MeanNumberOfAsynchronousWaits": 0,
        "MeanNumberOfDates": 0,
        "MeanNumberOfFiles": 0,
        "MeanNumberOfLines": 3,
        "MeanNumberOfRandoms": 0,
        "MeanNumberOfThreads": 0,
        "MethodName": "featureShouldBeInactiveByDefault",
        "MinimumCyclomaticComplexity": 0,
        "MinimumNumberOfAsynchronousWaits": 0,
        "MinimumNumberOfDates": 0,
        "MinimumNumberOfFiles": 0,
        "MinimumNumberOfLines": 3,
        "MinimumNumberOfRandoms": 0,
        "MinimumNumberOfThreads": 0,
        "NumberOfAsserts": 2,
        "NumberOfAsynchronousWaits": 0,
        "NumberOfDates": 0,
        "NumberOfFiles": 0,
        "NumberOfLines": 4,
        "NumberOfRandoms": 0,
        "NumberOfThreads": 0,
        "ProjectName": "togglz",
        "StaticCUT": [
            {
                "Body": "{\n    return org.togglz.core.context.FeatureContext.getFeatureManager().isActive(this);\n}",
                "ClassName": "MyFeatures",
                "CyclomaticComplexity": 0,
                "DepthOfInheritance": 1,
                "MethodName": "isActive",
                "NumberOfAsynchronousWaits": 0,
                "NumberOfDates": 0,
                "NumberOfFiles": 0,
                "NumberOfLines": 3,
                "NumberOfRandoms": 0,
                "NumberOfThreads": 0
            }
        ],
        "Timestamp": "1466141479",
        "TotalCyclomaticComplexity": 0,
        "TotalNumberOfAsynchronousWaits": 0,
        "TotalNumberOfDates": 0,
        "TotalNumberOfFiles": 0,
        "TotalNumberOfLines": 3,
        "TotalNumberOfRandoms": 0,
        "TotalNumberOfThreads": 0
    }
]
